// Generated by @wagmi/cli@1.3.0 on 8/2/2023 at 2:54:58 PM
import {
  useContractRead,
  UseContractReadConfig,
  useContractWrite,
  Address,
  UseContractWriteConfig,
  usePrepareContractWrite,
  UsePrepareContractWriteConfig,
  useContractEvent,
  UseContractEventConfig,
} from 'wagmi'
import { ReadContractResult, WriteContractMode, PrepareWriteContractResult } from 'wagmi/actions'

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// GMXPositionRouter
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

/**
 * [__View Contract on Arbitrum One Arbiscan__](https://arbiscan.io/address/0xb87a436B93fFE9D75c5cFA7bAcFff96430b09868)
 */
export const gmxPositionRouterABI = [
  {
    stateMutability: 'nonpayable',
    type: 'constructor',
    inputs: [
      { name: '_vault', internalType: 'address', type: 'address' },
      { name: '_router', internalType: 'address', type: 'address' },
      { name: '_weth', internalType: 'address', type: 'address' },
      { name: '_shortsTracker', internalType: 'address', type: 'address' },
      { name: '_depositFee', internalType: 'uint256', type: 'uint256' },
      { name: '_minExecutionFee', internalType: 'uint256', type: 'uint256' },
    ],
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      { name: 'callbackTarget', internalType: 'address', type: 'address', indexed: false },
      { name: 'success', internalType: 'bool', type: 'bool', indexed: false },
    ],
    name: 'Callback',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      { name: 'account', internalType: 'address', type: 'address', indexed: true },
      { name: 'path', internalType: 'address[]', type: 'address[]', indexed: false },
      { name: 'indexToken', internalType: 'address', type: 'address', indexed: false },
      { name: 'collateralDelta', internalType: 'uint256', type: 'uint256', indexed: false },
      { name: 'sizeDelta', internalType: 'uint256', type: 'uint256', indexed: false },
      { name: 'isLong', internalType: 'bool', type: 'bool', indexed: false },
      { name: 'receiver', internalType: 'address', type: 'address', indexed: false },
      { name: 'acceptablePrice', internalType: 'uint256', type: 'uint256', indexed: false },
      { name: 'minOut', internalType: 'uint256', type: 'uint256', indexed: false },
      { name: 'executionFee', internalType: 'uint256', type: 'uint256', indexed: false },
      { name: 'blockGap', internalType: 'uint256', type: 'uint256', indexed: false },
      { name: 'timeGap', internalType: 'uint256', type: 'uint256', indexed: false },
    ],
    name: 'CancelDecreasePosition',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      { name: 'account', internalType: 'address', type: 'address', indexed: true },
      { name: 'path', internalType: 'address[]', type: 'address[]', indexed: false },
      { name: 'indexToken', internalType: 'address', type: 'address', indexed: false },
      { name: 'amountIn', internalType: 'uint256', type: 'uint256', indexed: false },
      { name: 'minOut', internalType: 'uint256', type: 'uint256', indexed: false },
      { name: 'sizeDelta', internalType: 'uint256', type: 'uint256', indexed: false },
      { name: 'isLong', internalType: 'bool', type: 'bool', indexed: false },
      { name: 'acceptablePrice', internalType: 'uint256', type: 'uint256', indexed: false },
      { name: 'executionFee', internalType: 'uint256', type: 'uint256', indexed: false },
      { name: 'blockGap', internalType: 'uint256', type: 'uint256', indexed: false },
      { name: 'timeGap', internalType: 'uint256', type: 'uint256', indexed: false },
    ],
    name: 'CancelIncreasePosition',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      { name: 'account', internalType: 'address', type: 'address', indexed: true },
      { name: 'path', internalType: 'address[]', type: 'address[]', indexed: false },
      { name: 'indexToken', internalType: 'address', type: 'address', indexed: false },
      { name: 'collateralDelta', internalType: 'uint256', type: 'uint256', indexed: false },
      { name: 'sizeDelta', internalType: 'uint256', type: 'uint256', indexed: false },
      { name: 'isLong', internalType: 'bool', type: 'bool', indexed: false },
      { name: 'receiver', internalType: 'address', type: 'address', indexed: false },
      { name: 'acceptablePrice', internalType: 'uint256', type: 'uint256', indexed: false },
      { name: 'minOut', internalType: 'uint256', type: 'uint256', indexed: false },
      { name: 'executionFee', internalType: 'uint256', type: 'uint256', indexed: false },
      { name: 'index', internalType: 'uint256', type: 'uint256', indexed: false },
      { name: 'queueIndex', internalType: 'uint256', type: 'uint256', indexed: false },
      { name: 'blockNumber', internalType: 'uint256', type: 'uint256', indexed: false },
      { name: 'blockTime', internalType: 'uint256', type: 'uint256', indexed: false },
    ],
    name: 'CreateDecreasePosition',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      { name: 'account', internalType: 'address', type: 'address', indexed: true },
      { name: 'path', internalType: 'address[]', type: 'address[]', indexed: false },
      { name: 'indexToken', internalType: 'address', type: 'address', indexed: false },
      { name: 'amountIn', internalType: 'uint256', type: 'uint256', indexed: false },
      { name: 'minOut', internalType: 'uint256', type: 'uint256', indexed: false },
      { name: 'sizeDelta', internalType: 'uint256', type: 'uint256', indexed: false },
      { name: 'isLong', internalType: 'bool', type: 'bool', indexed: false },
      { name: 'acceptablePrice', internalType: 'uint256', type: 'uint256', indexed: false },
      { name: 'executionFee', internalType: 'uint256', type: 'uint256', indexed: false },
      { name: 'index', internalType: 'uint256', type: 'uint256', indexed: false },
      { name: 'queueIndex', internalType: 'uint256', type: 'uint256', indexed: false },
      { name: 'blockNumber', internalType: 'uint256', type: 'uint256', indexed: false },
      { name: 'blockTime', internalType: 'uint256', type: 'uint256', indexed: false },
      { name: 'gasPrice', internalType: 'uint256', type: 'uint256', indexed: false },
    ],
    name: 'CreateIncreasePosition',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      { name: 'account', internalType: 'address', type: 'address', indexed: false },
      { name: 'sizeDelta', internalType: 'uint256', type: 'uint256', indexed: false },
      { name: 'marginFeeBasisPoints', internalType: 'uint256', type: 'uint256', indexed: false },
      { name: 'referralCode', internalType: 'bytes32', type: 'bytes32', indexed: false },
      { name: 'referrer', internalType: 'address', type: 'address', indexed: false },
    ],
    name: 'DecreasePositionReferral',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      { name: 'account', internalType: 'address', type: 'address', indexed: true },
      { name: 'path', internalType: 'address[]', type: 'address[]', indexed: false },
      { name: 'indexToken', internalType: 'address', type: 'address', indexed: false },
      { name: 'collateralDelta', internalType: 'uint256', type: 'uint256', indexed: false },
      { name: 'sizeDelta', internalType: 'uint256', type: 'uint256', indexed: false },
      { name: 'isLong', internalType: 'bool', type: 'bool', indexed: false },
      { name: 'receiver', internalType: 'address', type: 'address', indexed: false },
      { name: 'acceptablePrice', internalType: 'uint256', type: 'uint256', indexed: false },
      { name: 'minOut', internalType: 'uint256', type: 'uint256', indexed: false },
      { name: 'executionFee', internalType: 'uint256', type: 'uint256', indexed: false },
      { name: 'blockGap', internalType: 'uint256', type: 'uint256', indexed: false },
      { name: 'timeGap', internalType: 'uint256', type: 'uint256', indexed: false },
    ],
    name: 'ExecuteDecreasePosition',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      { name: 'account', internalType: 'address', type: 'address', indexed: true },
      { name: 'path', internalType: 'address[]', type: 'address[]', indexed: false },
      { name: 'indexToken', internalType: 'address', type: 'address', indexed: false },
      { name: 'amountIn', internalType: 'uint256', type: 'uint256', indexed: false },
      { name: 'minOut', internalType: 'uint256', type: 'uint256', indexed: false },
      { name: 'sizeDelta', internalType: 'uint256', type: 'uint256', indexed: false },
      { name: 'isLong', internalType: 'bool', type: 'bool', indexed: false },
      { name: 'acceptablePrice', internalType: 'uint256', type: 'uint256', indexed: false },
      { name: 'executionFee', internalType: 'uint256', type: 'uint256', indexed: false },
      { name: 'blockGap', internalType: 'uint256', type: 'uint256', indexed: false },
      { name: 'timeGap', internalType: 'uint256', type: 'uint256', indexed: false },
    ],
    name: 'ExecuteIncreasePosition',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      { name: 'account', internalType: 'address', type: 'address', indexed: false },
      { name: 'sizeDelta', internalType: 'uint256', type: 'uint256', indexed: false },
      { name: 'marginFeeBasisPoints', internalType: 'uint256', type: 'uint256', indexed: false },
      { name: 'referralCode', internalType: 'bytes32', type: 'bytes32', indexed: false },
      { name: 'referrer', internalType: 'address', type: 'address', indexed: false },
    ],
    name: 'IncreasePositionReferral',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [{ name: 'admin', internalType: 'address', type: 'address', indexed: false }],
    name: 'SetAdmin',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [{ name: 'callbackGasLimit', internalType: 'uint256', type: 'uint256', indexed: false }],
    name: 'SetCallbackGasLimit',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      { name: 'minBlockDelayKeeper', internalType: 'uint256', type: 'uint256', indexed: false },
      { name: 'minTimeDelayPublic', internalType: 'uint256', type: 'uint256', indexed: false },
      { name: 'maxTimeDelay', internalType: 'uint256', type: 'uint256', indexed: false },
    ],
    name: 'SetDelayValues',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [{ name: 'depositFee', internalType: 'uint256', type: 'uint256', indexed: false }],
    name: 'SetDepositFee',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [{ name: 'increasePositionBufferBps', internalType: 'uint256', type: 'uint256', indexed: false }],
    name: 'SetIncreasePositionBufferBps',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [{ name: 'isLeverageEnabled', internalType: 'bool', type: 'bool', indexed: false }],
    name: 'SetIsLeverageEnabled',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      { name: 'tokens', internalType: 'address[]', type: 'address[]', indexed: false },
      { name: 'longSizes', internalType: 'uint256[]', type: 'uint256[]', indexed: false },
      { name: 'shortSizes', internalType: 'uint256[]', type: 'uint256[]', indexed: false },
    ],
    name: 'SetMaxGlobalSizes',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [{ name: 'minExecutionFee', internalType: 'uint256', type: 'uint256', indexed: false }],
    name: 'SetMinExecutionFee',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      { name: 'account', internalType: 'address', type: 'address', indexed: true },
      { name: 'isActive', internalType: 'bool', type: 'bool', indexed: false },
    ],
    name: 'SetPositionKeeper',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [{ name: 'referralStorage', internalType: 'address', type: 'address', indexed: false }],
    name: 'SetReferralStorage',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      { name: 'increasePositionRequestKeysStart', internalType: 'uint256', type: 'uint256', indexed: false },
      { name: 'decreasePositionRequestKeysStart', internalType: 'uint256', type: 'uint256', indexed: false },
    ],
    name: 'SetRequestKeysStartValues',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      { name: 'token', internalType: 'address', type: 'address', indexed: false },
      { name: 'receiver', internalType: 'address', type: 'address', indexed: false },
      { name: 'amount', internalType: 'uint256', type: 'uint256', indexed: false },
    ],
    name: 'WithdrawFees',
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'BASIS_POINTS_DIVISOR',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'admin',
    outputs: [{ name: '', internalType: 'address', type: 'address' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: '_token', internalType: 'address', type: 'address' },
      { name: '_spender', internalType: 'address', type: 'address' },
      { name: '_amount', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'approve',
    outputs: [],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'callbackGasLimit',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: '_key', internalType: 'bytes32', type: 'bytes32' },
      { name: '_executionFeeReceiver', internalType: 'address payable', type: 'address' },
    ],
    name: 'cancelDecreasePosition',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: '_key', internalType: 'bytes32', type: 'bytes32' },
      { name: '_executionFeeReceiver', internalType: 'address payable', type: 'address' },
    ],
    name: 'cancelIncreasePosition',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
  {
    stateMutability: 'payable',
    type: 'function',
    inputs: [
      { name: '_path', internalType: 'address[]', type: 'address[]' },
      { name: '_indexToken', internalType: 'address', type: 'address' },
      { name: '_collateralDelta', internalType: 'uint256', type: 'uint256' },
      { name: '_sizeDelta', internalType: 'uint256', type: 'uint256' },
      { name: '_isLong', internalType: 'bool', type: 'bool' },
      { name: '_receiver', internalType: 'address', type: 'address' },
      { name: '_acceptablePrice', internalType: 'uint256', type: 'uint256' },
      { name: '_minOut', internalType: 'uint256', type: 'uint256' },
      { name: '_executionFee', internalType: 'uint256', type: 'uint256' },
      { name: '_withdrawETH', internalType: 'bool', type: 'bool' },
      { name: '_callbackTarget', internalType: 'address', type: 'address' },
    ],
    name: 'createDecreasePosition',
    outputs: [{ name: '', internalType: 'bytes32', type: 'bytes32' }],
  },
  {
    stateMutability: 'payable',
    type: 'function',
    inputs: [
      { name: '_path', internalType: 'address[]', type: 'address[]' },
      { name: '_indexToken', internalType: 'address', type: 'address' },
      { name: '_amountIn', internalType: 'uint256', type: 'uint256' },
      { name: '_minOut', internalType: 'uint256', type: 'uint256' },
      { name: '_sizeDelta', internalType: 'uint256', type: 'uint256' },
      { name: '_isLong', internalType: 'bool', type: 'bool' },
      { name: '_acceptablePrice', internalType: 'uint256', type: 'uint256' },
      { name: '_executionFee', internalType: 'uint256', type: 'uint256' },
      { name: '_referralCode', internalType: 'bytes32', type: 'bytes32' },
      { name: '_callbackTarget', internalType: 'address', type: 'address' },
    ],
    name: 'createIncreasePosition',
    outputs: [{ name: '', internalType: 'bytes32', type: 'bytes32' }],
  },
  {
    stateMutability: 'payable',
    type: 'function',
    inputs: [
      { name: '_path', internalType: 'address[]', type: 'address[]' },
      { name: '_indexToken', internalType: 'address', type: 'address' },
      { name: '_minOut', internalType: 'uint256', type: 'uint256' },
      { name: '_sizeDelta', internalType: 'uint256', type: 'uint256' },
      { name: '_isLong', internalType: 'bool', type: 'bool' },
      { name: '_acceptablePrice', internalType: 'uint256', type: 'uint256' },
      { name: '_executionFee', internalType: 'uint256', type: 'uint256' },
      { name: '_referralCode', internalType: 'bytes32', type: 'bytes32' },
      { name: '_callbackTarget', internalType: 'address', type: 'address' },
    ],
    name: 'createIncreasePositionETH',
    outputs: [{ name: '', internalType: 'bytes32', type: 'bytes32' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
    name: 'decreasePositionRequestKeys',
    outputs: [{ name: '', internalType: 'bytes32', type: 'bytes32' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'decreasePositionRequestKeysStart',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: '', internalType: 'bytes32', type: 'bytes32' }],
    name: 'decreasePositionRequests',
    outputs: [
      { name: 'account', internalType: 'address', type: 'address' },
      { name: 'indexToken', internalType: 'address', type: 'address' },
      { name: 'collateralDelta', internalType: 'uint256', type: 'uint256' },
      { name: 'sizeDelta', internalType: 'uint256', type: 'uint256' },
      { name: 'isLong', internalType: 'bool', type: 'bool' },
      { name: 'receiver', internalType: 'address', type: 'address' },
      { name: 'acceptablePrice', internalType: 'uint256', type: 'uint256' },
      { name: 'minOut', internalType: 'uint256', type: 'uint256' },
      { name: 'executionFee', internalType: 'uint256', type: 'uint256' },
      { name: 'blockNumber', internalType: 'uint256', type: 'uint256' },
      { name: 'blockTime', internalType: 'uint256', type: 'uint256' },
      { name: 'withdrawETH', internalType: 'bool', type: 'bool' },
      { name: 'callbackTarget', internalType: 'address', type: 'address' },
    ],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: '', internalType: 'address', type: 'address' }],
    name: 'decreasePositionsIndex',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'depositFee',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: '_key', internalType: 'bytes32', type: 'bytes32' },
      { name: '_executionFeeReceiver', internalType: 'address payable', type: 'address' },
    ],
    name: 'executeDecreasePosition',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: '_endIndex', internalType: 'uint256', type: 'uint256' },
      { name: '_executionFeeReceiver', internalType: 'address payable', type: 'address' },
    ],
    name: 'executeDecreasePositions',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: '_key', internalType: 'bytes32', type: 'bytes32' },
      { name: '_executionFeeReceiver', internalType: 'address payable', type: 'address' },
    ],
    name: 'executeIncreasePosition',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: '_endIndex', internalType: 'uint256', type: 'uint256' },
      { name: '_executionFeeReceiver', internalType: 'address payable', type: 'address' },
    ],
    name: 'executeIncreasePositions',
    outputs: [],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: '', internalType: 'address', type: 'address' }],
    name: 'feeReserves',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: '_key', internalType: 'bytes32', type: 'bytes32' }],
    name: 'getDecreasePositionRequestPath',
    outputs: [{ name: '', internalType: 'address[]', type: 'address[]' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: '_key', internalType: 'bytes32', type: 'bytes32' }],
    name: 'getIncreasePositionRequestPath',
    outputs: [{ name: '', internalType: 'address[]', type: 'address[]' }],
  },
  {
    stateMutability: 'pure',
    type: 'function',
    inputs: [
      { name: '_account', internalType: 'address', type: 'address' },
      { name: '_index', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'getRequestKey',
    outputs: [{ name: '', internalType: 'bytes32', type: 'bytes32' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'getRequestQueueLengths',
    outputs: [
      { name: '', internalType: 'uint256', type: 'uint256' },
      { name: '', internalType: 'uint256', type: 'uint256' },
      { name: '', internalType: 'uint256', type: 'uint256' },
      { name: '', internalType: 'uint256', type: 'uint256' },
    ],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'gov',
    outputs: [{ name: '', internalType: 'address', type: 'address' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'increasePositionBufferBps',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
    name: 'increasePositionRequestKeys',
    outputs: [{ name: '', internalType: 'bytes32', type: 'bytes32' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'increasePositionRequestKeysStart',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: '', internalType: 'bytes32', type: 'bytes32' }],
    name: 'increasePositionRequests',
    outputs: [
      { name: 'account', internalType: 'address', type: 'address' },
      { name: 'indexToken', internalType: 'address', type: 'address' },
      { name: 'amountIn', internalType: 'uint256', type: 'uint256' },
      { name: 'minOut', internalType: 'uint256', type: 'uint256' },
      { name: 'sizeDelta', internalType: 'uint256', type: 'uint256' },
      { name: 'isLong', internalType: 'bool', type: 'bool' },
      { name: 'acceptablePrice', internalType: 'uint256', type: 'uint256' },
      { name: 'executionFee', internalType: 'uint256', type: 'uint256' },
      { name: 'blockNumber', internalType: 'uint256', type: 'uint256' },
      { name: 'blockTime', internalType: 'uint256', type: 'uint256' },
      { name: 'hasCollateralInETH', internalType: 'bool', type: 'bool' },
      { name: 'callbackTarget', internalType: 'address', type: 'address' },
    ],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: '', internalType: 'address', type: 'address' }],
    name: 'increasePositionsIndex',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'isLeverageEnabled',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: '', internalType: 'address', type: 'address' }],
    name: 'isPositionKeeper',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: '', internalType: 'address', type: 'address' }],
    name: 'maxGlobalLongSizes',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: '', internalType: 'address', type: 'address' }],
    name: 'maxGlobalShortSizes',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'maxTimeDelay',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'minBlockDelayKeeper',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'minExecutionFee',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'minTimeDelayPublic',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'referralStorage',
    outputs: [{ name: '', internalType: 'address', type: 'address' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'router',
    outputs: [{ name: '', internalType: 'address', type: 'address' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: '_receiver', internalType: 'address payable', type: 'address' },
      { name: '_amount', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'sendValue',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: '_admin', internalType: 'address', type: 'address' }],
    name: 'setAdmin',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: '_callbackGasLimit', internalType: 'uint256', type: 'uint256' }],
    name: 'setCallbackGasLimit',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: '_minBlockDelayKeeper', internalType: 'uint256', type: 'uint256' },
      { name: '_minTimeDelayPublic', internalType: 'uint256', type: 'uint256' },
      { name: '_maxTimeDelay', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'setDelayValues',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: '_depositFee', internalType: 'uint256', type: 'uint256' }],
    name: 'setDepositFee',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: '_gov', internalType: 'address', type: 'address' }],
    name: 'setGov',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: '_increasePositionBufferBps', internalType: 'uint256', type: 'uint256' }],
    name: 'setIncreasePositionBufferBps',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: '_isLeverageEnabled', internalType: 'bool', type: 'bool' }],
    name: 'setIsLeverageEnabled',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: '_tokens', internalType: 'address[]', type: 'address[]' },
      { name: '_longSizes', internalType: 'uint256[]', type: 'uint256[]' },
      { name: '_shortSizes', internalType: 'uint256[]', type: 'uint256[]' },
    ],
    name: 'setMaxGlobalSizes',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: '_minExecutionFee', internalType: 'uint256', type: 'uint256' }],
    name: 'setMinExecutionFee',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: '_account', internalType: 'address', type: 'address' },
      { name: '_isActive', internalType: 'bool', type: 'bool' },
    ],
    name: 'setPositionKeeper',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: '_referralStorage', internalType: 'address', type: 'address' }],
    name: 'setReferralStorage',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: '_increasePositionRequestKeysStart', internalType: 'uint256', type: 'uint256' },
      { name: '_decreasePositionRequestKeysStart', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'setRequestKeysStartValues',
    outputs: [],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'shortsTracker',
    outputs: [{ name: '', internalType: 'address', type: 'address' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'vault',
    outputs: [{ name: '', internalType: 'address', type: 'address' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'weth',
    outputs: [{ name: '', internalType: 'address', type: 'address' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: '_token', internalType: 'address', type: 'address' },
      { name: '_receiver', internalType: 'address', type: 'address' },
    ],
    name: 'withdrawFees',
    outputs: [],
  },
  { stateMutability: 'payable', type: 'receive' },
] as const

/**
 * [__View Contract on Arbitrum One Arbiscan__](https://arbiscan.io/address/0xb87a436B93fFE9D75c5cFA7bAcFff96430b09868)
 */
export const gmxPositionRouterAddress = {
  42161: '0xb87a436B93fFE9D75c5cFA7bAcFff96430b09868',
} as const

/**
 * [__View Contract on Arbitrum One Arbiscan__](https://arbiscan.io/address/0xb87a436B93fFE9D75c5cFA7bAcFff96430b09868)
 */
export const gmxPositionRouterConfig = { address: gmxPositionRouterAddress, abi: gmxPositionRouterABI } as const

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// GMXRouter
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

/**
 * [__View Contract on Arbitrum One Arbiscan__](https://arbiscan.io/address/0xaBBc5F99639c9B6bCb58544ddf04EFA6802F4064)
 */
export const gmxRouterABI = [
  {
    stateMutability: 'nonpayable',
    type: 'constructor',
    inputs: [
      { name: '_vault', internalType: 'address', type: 'address' },
      { name: '_usdg', internalType: 'address', type: 'address' },
      { name: '_weth', internalType: 'address', type: 'address' },
    ],
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      { name: 'account', internalType: 'address', type: 'address', indexed: false },
      { name: 'tokenIn', internalType: 'address', type: 'address', indexed: false },
      { name: 'tokenOut', internalType: 'address', type: 'address', indexed: false },
      { name: 'amountIn', internalType: 'uint256', type: 'uint256', indexed: false },
      { name: 'amountOut', internalType: 'uint256', type: 'uint256', indexed: false },
    ],
    name: 'Swap',
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: '_plugin', internalType: 'address', type: 'address' }],
    name: 'addPlugin',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: '_plugin', internalType: 'address', type: 'address' }],
    name: 'approvePlugin',
    outputs: [],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [
      { name: '', internalType: 'address', type: 'address' },
      { name: '', internalType: 'address', type: 'address' },
    ],
    name: 'approvedPlugins',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: '_collateralToken', internalType: 'address', type: 'address' },
      { name: '_indexToken', internalType: 'address', type: 'address' },
      { name: '_collateralDelta', internalType: 'uint256', type: 'uint256' },
      { name: '_sizeDelta', internalType: 'uint256', type: 'uint256' },
      { name: '_isLong', internalType: 'bool', type: 'bool' },
      { name: '_receiver', internalType: 'address', type: 'address' },
      { name: '_price', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'decreasePosition',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: '_path', internalType: 'address[]', type: 'address[]' },
      { name: '_indexToken', internalType: 'address', type: 'address' },
      { name: '_collateralDelta', internalType: 'uint256', type: 'uint256' },
      { name: '_sizeDelta', internalType: 'uint256', type: 'uint256' },
      { name: '_isLong', internalType: 'bool', type: 'bool' },
      { name: '_receiver', internalType: 'address', type: 'address' },
      { name: '_price', internalType: 'uint256', type: 'uint256' },
      { name: '_minOut', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'decreasePositionAndSwap',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: '_path', internalType: 'address[]', type: 'address[]' },
      { name: '_indexToken', internalType: 'address', type: 'address' },
      { name: '_collateralDelta', internalType: 'uint256', type: 'uint256' },
      { name: '_sizeDelta', internalType: 'uint256', type: 'uint256' },
      { name: '_isLong', internalType: 'bool', type: 'bool' },
      { name: '_receiver', internalType: 'address payable', type: 'address' },
      { name: '_price', internalType: 'uint256', type: 'uint256' },
      { name: '_minOut', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'decreasePositionAndSwapETH',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: '_collateralToken', internalType: 'address', type: 'address' },
      { name: '_indexToken', internalType: 'address', type: 'address' },
      { name: '_collateralDelta', internalType: 'uint256', type: 'uint256' },
      { name: '_sizeDelta', internalType: 'uint256', type: 'uint256' },
      { name: '_isLong', internalType: 'bool', type: 'bool' },
      { name: '_receiver', internalType: 'address payable', type: 'address' },
      { name: '_price', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'decreasePositionETH',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: '_plugin', internalType: 'address', type: 'address' }],
    name: 'denyPlugin',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: '_token', internalType: 'address', type: 'address' },
      { name: '_amount', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'directPoolDeposit',
    outputs: [],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'gov',
    outputs: [{ name: '', internalType: 'address', type: 'address' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: '_path', internalType: 'address[]', type: 'address[]' },
      { name: '_indexToken', internalType: 'address', type: 'address' },
      { name: '_amountIn', internalType: 'uint256', type: 'uint256' },
      { name: '_minOut', internalType: 'uint256', type: 'uint256' },
      { name: '_sizeDelta', internalType: 'uint256', type: 'uint256' },
      { name: '_isLong', internalType: 'bool', type: 'bool' },
      { name: '_price', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'increasePosition',
    outputs: [],
  },
  {
    stateMutability: 'payable',
    type: 'function',
    inputs: [
      { name: '_path', internalType: 'address[]', type: 'address[]' },
      { name: '_indexToken', internalType: 'address', type: 'address' },
      { name: '_minOut', internalType: 'uint256', type: 'uint256' },
      { name: '_sizeDelta', internalType: 'uint256', type: 'uint256' },
      { name: '_isLong', internalType: 'bool', type: 'bool' },
      { name: '_price', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'increasePositionETH',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: '_account', internalType: 'address', type: 'address' },
      { name: '_collateralToken', internalType: 'address', type: 'address' },
      { name: '_indexToken', internalType: 'address', type: 'address' },
      { name: '_collateralDelta', internalType: 'uint256', type: 'uint256' },
      { name: '_sizeDelta', internalType: 'uint256', type: 'uint256' },
      { name: '_isLong', internalType: 'bool', type: 'bool' },
      { name: '_receiver', internalType: 'address', type: 'address' },
    ],
    name: 'pluginDecreasePosition',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: '_account', internalType: 'address', type: 'address' },
      { name: '_collateralToken', internalType: 'address', type: 'address' },
      { name: '_indexToken', internalType: 'address', type: 'address' },
      { name: '_sizeDelta', internalType: 'uint256', type: 'uint256' },
      { name: '_isLong', internalType: 'bool', type: 'bool' },
    ],
    name: 'pluginIncreasePosition',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: '_token', internalType: 'address', type: 'address' },
      { name: '_account', internalType: 'address', type: 'address' },
      { name: '_receiver', internalType: 'address', type: 'address' },
      { name: '_amount', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'pluginTransfer',
    outputs: [],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: '', internalType: 'address', type: 'address' }],
    name: 'plugins',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: '_plugin', internalType: 'address', type: 'address' }],
    name: 'removePlugin',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: '_gov', internalType: 'address', type: 'address' }],
    name: 'setGov',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: '_path', internalType: 'address[]', type: 'address[]' },
      { name: '_amountIn', internalType: 'uint256', type: 'uint256' },
      { name: '_minOut', internalType: 'uint256', type: 'uint256' },
      { name: '_receiver', internalType: 'address', type: 'address' },
    ],
    name: 'swap',
    outputs: [],
  },
  {
    stateMutability: 'payable',
    type: 'function',
    inputs: [
      { name: '_path', internalType: 'address[]', type: 'address[]' },
      { name: '_minOut', internalType: 'uint256', type: 'uint256' },
      { name: '_receiver', internalType: 'address', type: 'address' },
    ],
    name: 'swapETHToTokens',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: '_path', internalType: 'address[]', type: 'address[]' },
      { name: '_amountIn', internalType: 'uint256', type: 'uint256' },
      { name: '_minOut', internalType: 'uint256', type: 'uint256' },
      { name: '_receiver', internalType: 'address payable', type: 'address' },
    ],
    name: 'swapTokensToETH',
    outputs: [],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'usdg',
    outputs: [{ name: '', internalType: 'address', type: 'address' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'vault',
    outputs: [{ name: '', internalType: 'address', type: 'address' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'weth',
    outputs: [{ name: '', internalType: 'address', type: 'address' }],
  },
  { stateMutability: 'payable', type: 'receive' },
] as const

/**
 * [__View Contract on Arbitrum One Arbiscan__](https://arbiscan.io/address/0xaBBc5F99639c9B6bCb58544ddf04EFA6802F4064)
 */
export const gmxRouterAddress = {
  42161: '0xaBBc5F99639c9B6bCb58544ddf04EFA6802F4064',
} as const

/**
 * [__View Contract on Arbitrum One Arbiscan__](https://arbiscan.io/address/0xaBBc5F99639c9B6bCb58544ddf04EFA6802F4064)
 */
export const gmxRouterConfig = { address: gmxRouterAddress, abi: gmxRouterABI } as const

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// OrderManager
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

/**
 * [__View Contract on Arbitrum One Arbiscan__](https://arbiscan.io/address/0x5b5d94B1574a8A910E6FC0a38949f5B256f22FF9)
 */
export const orderManagerABI = [
  { stateMutability: 'nonpayable', type: 'constructor', inputs: [] },
  { type: 'error', inputs: [], name: 'ExecutionDelay' },
  { type: 'error', inputs: [], name: 'ExecutionFeeTooLow' },
  { type: 'error', inputs: [], name: 'InvalidExecutionFee' },
  {
    type: 'error',
    inputs: [
      { name: 'indexToken', internalType: 'address', type: 'address' },
      { name: 'collateralToken', internalType: 'address', type: 'address' },
    ],
    name: 'InvalidLeverageTokenPair',
  },
  { type: 'error', inputs: [], name: 'InvalidPurchaseToken' },
  { type: 'error', inputs: [], name: 'InvalidSwapPair' },
  { type: 'error', inputs: [], name: 'OnlyExecutor' },
  { type: 'error', inputs: [], name: 'OnlyOrderOwner' },
  { type: 'error', inputs: [], name: 'OnlyOwnerOrController' },
  { type: 'error', inputs: [], name: 'OnlyWeth' },
  { type: 'error', inputs: [], name: 'OrderNotOpen' },
  { type: 'error', inputs: [], name: 'SameTokenSwap' },
  { type: 'error', inputs: [], name: 'SlippageReached' },
  { type: 'error', inputs: [], name: 'ZeroAddress' },
  { type: 'error', inputs: [], name: 'ZeroPurchaseAmount' },
  {
    type: 'event',
    anonymous: false,
    inputs: [{ name: 'controller', internalType: 'address', type: 'address', indexed: true }],
    name: 'ControllerSet',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [{ name: 'executor', internalType: 'address', type: 'address', indexed: true }],
    name: 'ExecutorSet',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [{ name: 'version', internalType: 'uint8', type: 'uint8', indexed: false }],
    name: 'Initialized',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [{ name: 'key', internalType: 'uint256', type: 'uint256', indexed: true }],
    name: 'LeverageOrderCancelled',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      { name: 'key', internalType: 'uint256', type: 'uint256', indexed: true },
      {
        name: 'order',
        internalType: 'struct DataTypes.LeverageOrder',
        type: 'tuple',
        components: [
          { name: 'owner', internalType: 'address', type: 'address' },
          { name: 'indexToken', internalType: 'address', type: 'address' },
          { name: 'collateralToken', internalType: 'address', type: 'address' },
          { name: 'status', internalType: 'enum DataTypes.OrderStatus', type: 'uint8' },
          { name: 'triggerAboveThreshold', internalType: 'bool', type: 'bool' },
          { name: 'payToken', internalType: 'address', type: 'address' },
          { name: 'price', internalType: 'uint256', type: 'uint256' },
          { name: 'executionFee', internalType: 'uint256', type: 'uint256' },
          { name: 'submissionBlock', internalType: 'uint256', type: 'uint256' },
          { name: 'expiresAt', internalType: 'uint256', type: 'uint256' },
          { name: 'submissionTimestamp', internalType: 'uint256', type: 'uint256' },
        ],
        indexed: false,
      },
      {
        name: 'request',
        internalType: 'struct DataTypes.UpdatePositionRequest',
        type: 'tuple',
        components: [
          { name: 'sizeChange', internalType: 'uint256', type: 'uint256' },
          { name: 'collateral', internalType: 'uint256', type: 'uint256' },
          { name: 'updateType', internalType: 'enum DataTypes.UpdatePositionType', type: 'uint8' },
          { name: 'side', internalType: 'enum DataTypes.Side', type: 'uint8' },
        ],
        indexed: false,
      },
      { name: 'fillPrice', internalType: 'uint256', type: 'uint256', indexed: false },
    ],
    name: 'LeverageOrderExecuted',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [{ name: 'key', internalType: 'uint256', type: 'uint256', indexed: true }],
    name: 'LeverageOrderExpired',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      { name: 'key', internalType: 'uint256', type: 'uint256', indexed: true },
      {
        name: 'order',
        internalType: 'struct DataTypes.LeverageOrder',
        type: 'tuple',
        components: [
          { name: 'owner', internalType: 'address', type: 'address' },
          { name: 'indexToken', internalType: 'address', type: 'address' },
          { name: 'collateralToken', internalType: 'address', type: 'address' },
          { name: 'status', internalType: 'enum DataTypes.OrderStatus', type: 'uint8' },
          { name: 'triggerAboveThreshold', internalType: 'bool', type: 'bool' },
          { name: 'payToken', internalType: 'address', type: 'address' },
          { name: 'price', internalType: 'uint256', type: 'uint256' },
          { name: 'executionFee', internalType: 'uint256', type: 'uint256' },
          { name: 'submissionBlock', internalType: 'uint256', type: 'uint256' },
          { name: 'expiresAt', internalType: 'uint256', type: 'uint256' },
          { name: 'submissionTimestamp', internalType: 'uint256', type: 'uint256' },
        ],
        indexed: false,
      },
      {
        name: 'request',
        internalType: 'struct DataTypes.UpdatePositionRequest',
        type: 'tuple',
        components: [
          { name: 'sizeChange', internalType: 'uint256', type: 'uint256' },
          { name: 'collateral', internalType: 'uint256', type: 'uint256' },
          { name: 'updateType', internalType: 'enum DataTypes.UpdatePositionType', type: 'uint8' },
          { name: 'side', internalType: 'enum DataTypes.Side', type: 'uint8' },
        ],
        indexed: false,
      },
    ],
    name: 'LeverageOrderPlaced',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [{ name: 'leverageExecutionFee', internalType: 'uint256', type: 'uint256', indexed: false }],
    name: 'MinLeverageExecutionFeeSet',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [{ name: 'swapExecutionFee', internalType: 'uint256', type: 'uint256', indexed: false }],
    name: 'MinSwapExecutionFeeSet',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [{ name: '', internalType: 'address', type: 'address', indexed: false }],
    name: 'OracleChanged',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [{ name: 'hook', internalType: 'address', type: 'address', indexed: true }],
    name: 'OrderHookSet',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      { name: 'previousOwner', internalType: 'address', type: 'address', indexed: true },
      { name: 'newOwner', internalType: 'address', type: 'address', indexed: true },
    ],
    name: 'OwnershipTransferred',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [{ name: 'pool', internalType: 'address', type: 'address', indexed: true }],
    name: 'PoolSet',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [{ name: 'isEnable', internalType: 'bool', type: 'bool', indexed: false }],
    name: 'SetEnablePublicExecution',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [{ name: 'delay', internalType: 'uint256', type: 'uint256', indexed: false }],
    name: 'SetExecutionDelayTime',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      { name: 'account', internalType: 'address', type: 'address', indexed: true },
      { name: 'tokenIn', internalType: 'address', type: 'address', indexed: true },
      { name: 'tokenOut', internalType: 'address', type: 'address', indexed: true },
      { name: 'pool', internalType: 'address', type: 'address', indexed: false },
      { name: 'amountIn', internalType: 'uint256', type: 'uint256', indexed: false },
      { name: 'amountOut', internalType: 'uint256', type: 'uint256', indexed: false },
    ],
    name: 'Swap',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [{ name: 'key', internalType: 'uint256', type: 'uint256', indexed: true }],
    name: 'SwapOrderCancelled',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      { name: 'key', internalType: 'uint256', type: 'uint256', indexed: true },
      { name: 'amountIn', internalType: 'uint256', type: 'uint256', indexed: false },
      { name: 'amountOut', internalType: 'uint256', type: 'uint256', indexed: false },
    ],
    name: 'SwapOrderExecuted',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      { name: 'key', internalType: 'uint256', type: 'uint256', indexed: true },
      {
        name: 'order',
        internalType: 'struct DataTypes.SwapOrder',
        type: 'tuple',
        components: [
          { name: 'owner', internalType: 'address', type: 'address' },
          { name: 'tokenIn', internalType: 'address', type: 'address' },
          { name: 'tokenOut', internalType: 'address', type: 'address' },
          { name: 'status', internalType: 'enum DataTypes.OrderStatus', type: 'uint8' },
          { name: 'amountIn', internalType: 'uint256', type: 'uint256' },
          { name: 'minAmountOut', internalType: 'uint256', type: 'uint256' },
          { name: 'price', internalType: 'uint256', type: 'uint256' },
          { name: 'executionFee', internalType: 'uint256', type: 'uint256' },
          { name: 'submissionBlock', internalType: 'uint256', type: 'uint256' },
          { name: 'submissionTimestamp', internalType: 'uint256', type: 'uint256' },
        ],
        indexed: false,
      },
    ],
    name: 'SwapOrderPlaced',
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'ETH',
    outputs: [{ name: '', internalType: 'address', type: 'address' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'ETH_UNWRAPPER',
    outputs: [{ name: '', internalType: 'address', type: 'address' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'VERSION',
    outputs: [{ name: '', internalType: 'uint8', type: 'uint8' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: '_orderId', internalType: 'uint256', type: 'uint256' }],
    name: 'cancelLeverageOrder',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: '_orderId', internalType: 'uint256', type: 'uint256' }],
    name: 'cancelSwapOrder',
    outputs: [],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'controller',
    outputs: [{ name: '', internalType: 'address', type: 'address' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'enablePublicExecution',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: '_orderId', internalType: 'uint256', type: 'uint256' },
      { name: '_feeTo', internalType: 'address payable', type: 'address' },
    ],
    name: 'executeLeverageOrder',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: '_orderId', internalType: 'uint256', type: 'uint256' },
      { name: '_feeTo', internalType: 'address payable', type: 'address' },
    ],
    name: 'executeSwapOrder',
    outputs: [],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'executionDelayTime',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'executor',
    outputs: [{ name: '', internalType: 'address', type: 'address' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [
      { name: 'user', internalType: 'address', type: 'address' },
      { name: 'skip', internalType: 'uint256', type: 'uint256' },
      { name: 'take', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'getOrders',
    outputs: [
      { name: 'orderIds', internalType: 'uint256[]', type: 'uint256[]' },
      { name: 'total', internalType: 'uint256', type: 'uint256' },
    ],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [
      { name: 'user', internalType: 'address', type: 'address' },
      { name: 'skip', internalType: 'uint256', type: 'uint256' },
      { name: 'take', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'getSwapOrders',
    outputs: [
      { name: 'orderIds', internalType: 'uint256[]', type: 'uint256[]' },
      { name: 'total', internalType: 'uint256', type: 'uint256' },
    ],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: '_weth', internalType: 'address', type: 'address' },
      { name: '_oracle', internalType: 'address', type: 'address' },
      { name: '_pool', internalType: 'address', type: 'address' },
      { name: '_minLeverageExecutionFee', internalType: 'uint256', type: 'uint256' },
      { name: '_minSwapExecutionFee', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'initialize',
    outputs: [],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'orderId', internalType: 'uint256', type: 'uint256' }],
    name: 'leverageOrders',
    outputs: [
      { name: 'owner', internalType: 'address', type: 'address' },
      { name: 'indexToken', internalType: 'address', type: 'address' },
      { name: 'collateralToken', internalType: 'address', type: 'address' },
      { name: 'status', internalType: 'enum DataTypes.OrderStatus', type: 'uint8' },
      { name: 'triggerAboveThreshold', internalType: 'bool', type: 'bool' },
      { name: 'payToken', internalType: 'address', type: 'address' },
      { name: 'price', internalType: 'uint256', type: 'uint256' },
      { name: 'executionFee', internalType: 'uint256', type: 'uint256' },
      { name: 'submissionBlock', internalType: 'uint256', type: 'uint256' },
      { name: 'expiresAt', internalType: 'uint256', type: 'uint256' },
      { name: 'submissionTimestamp', internalType: 'uint256', type: 'uint256' },
    ],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'minLeverageExecutionFee',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'minSwapExecutionFee',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'nextLeverageOrderId',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'nextSwapOrderId',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'oracle',
    outputs: [{ name: '', internalType: 'contract ILevelOracle', type: 'address' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'orderHook',
    outputs: [{ name: '', internalType: 'contract IOrderHook', type: 'address' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'owner',
    outputs: [{ name: '', internalType: 'address', type: 'address' }],
  },
  {
    stateMutability: 'payable',
    type: 'function',
    inputs: [
      { name: '_updateType', internalType: 'enum DataTypes.UpdatePositionType', type: 'uint8' },
      { name: '_side', internalType: 'enum DataTypes.Side', type: 'uint8' },
      { name: '_indexToken', internalType: 'address', type: 'address' },
      { name: '_collateralToken', internalType: 'address', type: 'address' },
      { name: '_orderType', internalType: 'enum DataTypes.OrderType', type: 'uint8' },
      { name: 'data', internalType: 'bytes', type: 'bytes' },
    ],
    name: 'placeLeverageOrder',
    outputs: [{ name: 'orderId', internalType: 'uint256', type: 'uint256' }],
  },
  {
    stateMutability: 'payable',
    type: 'function',
    inputs: [
      { name: '_tokenIn', internalType: 'address', type: 'address' },
      { name: '_tokenOut', internalType: 'address', type: 'address' },
      { name: '_amountIn', internalType: 'uint256', type: 'uint256' },
      { name: '_minOut', internalType: 'uint256', type: 'uint256' },
      { name: '_price', internalType: 'uint256', type: 'uint256' },
      { name: '_extradata', internalType: 'bytes', type: 'bytes' },
    ],
    name: 'placeSwapOrder',
    outputs: [{ name: 'orderId', internalType: 'uint256', type: 'uint256' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'pool',
    outputs: [{ name: '', internalType: 'contract IPool', type: 'address' }],
  },
  { stateMutability: 'nonpayable', type: 'function', inputs: [], name: 'renounceOwnership', outputs: [] },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: '_controller', internalType: 'address', type: 'address' }],
    name: 'setController',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: '_isEnable', internalType: 'bool', type: 'bool' }],
    name: 'setEnablePublicExecution',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: '_delay', internalType: 'uint256', type: 'uint256' }],
    name: 'setExecutionDelayTime',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: '_executor', internalType: 'address', type: 'address' }],
    name: 'setExecutor',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: '_leverageExecutionFee', internalType: 'uint256', type: 'uint256' },
      { name: '_swapExecutionFee', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'setMinExecutionFee',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: '_oracle', internalType: 'address', type: 'address' }],
    name: 'setOracle',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: '_hook', internalType: 'address', type: 'address' }],
    name: 'setOrderHook',
    outputs: [],
  },
  {
    stateMutability: 'payable',
    type: 'function',
    inputs: [
      { name: '_fromToken', internalType: 'address', type: 'address' },
      { name: '_toToken', internalType: 'address', type: 'address' },
      { name: '_amountIn', internalType: 'uint256', type: 'uint256' },
      { name: '_minAmountOut', internalType: 'uint256', type: 'uint256' },
      { name: '_extradata', internalType: 'bytes', type: 'bytes' },
    ],
    name: 'swap',
    outputs: [],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'orderId', internalType: 'uint256', type: 'uint256' }],
    name: 'swapOrders',
    outputs: [
      { name: 'owner', internalType: 'address', type: 'address' },
      { name: 'tokenIn', internalType: 'address', type: 'address' },
      { name: 'tokenOut', internalType: 'address', type: 'address' },
      { name: 'status', internalType: 'enum DataTypes.OrderStatus', type: 'uint8' },
      { name: 'amountIn', internalType: 'uint256', type: 'uint256' },
      { name: 'minAmountOut', internalType: 'uint256', type: 'uint256' },
      { name: 'price', internalType: 'uint256', type: 'uint256' },
      { name: 'executionFee', internalType: 'uint256', type: 'uint256' },
      { name: 'submissionBlock', internalType: 'uint256', type: 'uint256' },
      { name: 'submissionTimestamp', internalType: 'uint256', type: 'uint256' },
    ],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'newOwner', internalType: 'address', type: 'address' }],
    name: 'transferOwnership',
    outputs: [],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'orderId', internalType: 'uint256', type: 'uint256' }],
    name: 'updatePositionRequests',
    outputs: [
      { name: 'sizeChange', internalType: 'uint256', type: 'uint256' },
      { name: 'collateral', internalType: 'uint256', type: 'uint256' },
      { name: 'updateType', internalType: 'enum DataTypes.UpdatePositionType', type: 'uint8' },
      { name: 'side', internalType: 'enum DataTypes.Side', type: 'uint8' },
    ],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'user', internalType: 'address', type: 'address' }],
    name: 'userLeverageOrderCount',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [
      { name: 'user', internalType: 'address', type: 'address' },
      { name: '', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'userLeverageOrders',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'user', internalType: 'address', type: 'address' }],
    name: 'userSwapOrderCount',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [
      { name: 'user', internalType: 'address', type: 'address' },
      { name: '', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'userSwapOrders',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'weth',
    outputs: [{ name: '', internalType: 'contract IWETH', type: 'address' }],
  },
  { stateMutability: 'payable', type: 'receive' },
] as const

/**
 * [__View Contract on Arbitrum One Arbiscan__](https://arbiscan.io/address/0x5b5d94B1574a8A910E6FC0a38949f5B256f22FF9)
 */
export const orderManagerAddress = {
  42161: '0x5b5d94B1574a8A910E6FC0a38949f5B256f22FF9',
} as const

/**
 * [__View Contract on Arbitrum One Arbiscan__](https://arbiscan.io/address/0x5b5d94B1574a8A910E6FC0a38949f5B256f22FF9)
 */
export const orderManagerConfig = { address: orderManagerAddress, abi: orderManagerABI } as const

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// TransparentUpgradeableProxy
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

/**
 * [__View Contract on Arbitrum One Arbiscan__](https://arbiscan.io/address/0x2215298606C9D0274527b13519Ec50c3A7f1c1eF)
 */
export const transparentUpgradeableProxyABI = [
  {
    stateMutability: 'payable',
    type: 'constructor',
    inputs: [
      { name: '_logic', internalType: 'address', type: 'address' },
      { name: 'admin_', internalType: 'address', type: 'address' },
      { name: '_data', internalType: 'bytes', type: 'bytes' },
    ],
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      { name: 'previousAdmin', internalType: 'address', type: 'address', indexed: false },
      { name: 'newAdmin', internalType: 'address', type: 'address', indexed: false },
    ],
    name: 'AdminChanged',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [{ name: 'beacon', internalType: 'address', type: 'address', indexed: true }],
    name: 'BeaconUpgraded',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [{ name: 'implementation', internalType: 'address', type: 'address', indexed: true }],
    name: 'Upgraded',
  },
  { stateMutability: 'payable', type: 'fallback' },
  { stateMutability: 'payable', type: 'receive' },
] as const

/**
 * [__View Contract on Arbitrum One Arbiscan__](https://arbiscan.io/address/0x2215298606C9D0274527b13519Ec50c3A7f1c1eF)
 */
export const transparentUpgradeableProxyAddress = {
  42161: '0x2215298606C9D0274527b13519Ec50c3A7f1c1eF',
} as const

/**
 * [__View Contract on Arbitrum One Arbiscan__](https://arbiscan.io/address/0x2215298606C9D0274527b13519Ec50c3A7f1c1eF)
 */
export const transparentUpgradeableProxyConfig = {
  address: transparentUpgradeableProxyAddress,
  abi: transparentUpgradeableProxyABI,
} as const

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// React
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link gmxPositionRouterABI}__.
 *
 * [__View Contract on Arbitrum One Arbiscan__](https://arbiscan.io/address/0xb87a436B93fFE9D75c5cFA7bAcFff96430b09868)
 */
export function useGmxPositionRouterRead<
  TFunctionName extends string,
  TSelectData = ReadContractResult<typeof gmxPositionRouterABI, TFunctionName>,
>(
  config: Omit<UseContractReadConfig<typeof gmxPositionRouterABI, TFunctionName, TSelectData>, 'abi' | 'address'> & {
    chainId?: keyof typeof gmxPositionRouterAddress
  } = {} as any,
) {
  return useContractRead({
    abi: gmxPositionRouterABI,
    address: gmxPositionRouterAddress[42161],
    ...config,
  } as UseContractReadConfig<typeof gmxPositionRouterABI, TFunctionName, TSelectData>)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link gmxPositionRouterABI}__ and `functionName` set to `"BASIS_POINTS_DIVISOR"`.
 *
 * [__View Contract on Arbitrum One Arbiscan__](https://arbiscan.io/address/0xb87a436B93fFE9D75c5cFA7bAcFff96430b09868)
 */
export function useGmxPositionRouterBasisPointsDivisor<
  TFunctionName extends 'BASIS_POINTS_DIVISOR',
  TSelectData = ReadContractResult<typeof gmxPositionRouterABI, TFunctionName>,
>(
  config: Omit<
    UseContractReadConfig<typeof gmxPositionRouterABI, TFunctionName, TSelectData>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof gmxPositionRouterAddress } = {} as any,
) {
  return useContractRead({
    abi: gmxPositionRouterABI,
    address: gmxPositionRouterAddress[42161],
    functionName: 'BASIS_POINTS_DIVISOR',
    ...config,
  } as UseContractReadConfig<typeof gmxPositionRouterABI, TFunctionName, TSelectData>)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link gmxPositionRouterABI}__ and `functionName` set to `"admin"`.
 *
 * [__View Contract on Arbitrum One Arbiscan__](https://arbiscan.io/address/0xb87a436B93fFE9D75c5cFA7bAcFff96430b09868)
 */
export function useGmxPositionRouterAdmin<
  TFunctionName extends 'admin',
  TSelectData = ReadContractResult<typeof gmxPositionRouterABI, TFunctionName>,
>(
  config: Omit<
    UseContractReadConfig<typeof gmxPositionRouterABI, TFunctionName, TSelectData>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof gmxPositionRouterAddress } = {} as any,
) {
  return useContractRead({
    abi: gmxPositionRouterABI,
    address: gmxPositionRouterAddress[42161],
    functionName: 'admin',
    ...config,
  } as UseContractReadConfig<typeof gmxPositionRouterABI, TFunctionName, TSelectData>)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link gmxPositionRouterABI}__ and `functionName` set to `"callbackGasLimit"`.
 *
 * [__View Contract on Arbitrum One Arbiscan__](https://arbiscan.io/address/0xb87a436B93fFE9D75c5cFA7bAcFff96430b09868)
 */
export function useGmxPositionRouterCallbackGasLimit<
  TFunctionName extends 'callbackGasLimit',
  TSelectData = ReadContractResult<typeof gmxPositionRouterABI, TFunctionName>,
>(
  config: Omit<
    UseContractReadConfig<typeof gmxPositionRouterABI, TFunctionName, TSelectData>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof gmxPositionRouterAddress } = {} as any,
) {
  return useContractRead({
    abi: gmxPositionRouterABI,
    address: gmxPositionRouterAddress[42161],
    functionName: 'callbackGasLimit',
    ...config,
  } as UseContractReadConfig<typeof gmxPositionRouterABI, TFunctionName, TSelectData>)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link gmxPositionRouterABI}__ and `functionName` set to `"decreasePositionRequestKeys"`.
 *
 * [__View Contract on Arbitrum One Arbiscan__](https://arbiscan.io/address/0xb87a436B93fFE9D75c5cFA7bAcFff96430b09868)
 */
export function useGmxPositionRouterDecreasePositionRequestKeys<
  TFunctionName extends 'decreasePositionRequestKeys',
  TSelectData = ReadContractResult<typeof gmxPositionRouterABI, TFunctionName>,
>(
  config: Omit<
    UseContractReadConfig<typeof gmxPositionRouterABI, TFunctionName, TSelectData>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof gmxPositionRouterAddress } = {} as any,
) {
  return useContractRead({
    abi: gmxPositionRouterABI,
    address: gmxPositionRouterAddress[42161],
    functionName: 'decreasePositionRequestKeys',
    ...config,
  } as UseContractReadConfig<typeof gmxPositionRouterABI, TFunctionName, TSelectData>)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link gmxPositionRouterABI}__ and `functionName` set to `"decreasePositionRequestKeysStart"`.
 *
 * [__View Contract on Arbitrum One Arbiscan__](https://arbiscan.io/address/0xb87a436B93fFE9D75c5cFA7bAcFff96430b09868)
 */
export function useGmxPositionRouterDecreasePositionRequestKeysStart<
  TFunctionName extends 'decreasePositionRequestKeysStart',
  TSelectData = ReadContractResult<typeof gmxPositionRouterABI, TFunctionName>,
>(
  config: Omit<
    UseContractReadConfig<typeof gmxPositionRouterABI, TFunctionName, TSelectData>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof gmxPositionRouterAddress } = {} as any,
) {
  return useContractRead({
    abi: gmxPositionRouterABI,
    address: gmxPositionRouterAddress[42161],
    functionName: 'decreasePositionRequestKeysStart',
    ...config,
  } as UseContractReadConfig<typeof gmxPositionRouterABI, TFunctionName, TSelectData>)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link gmxPositionRouterABI}__ and `functionName` set to `"decreasePositionRequests"`.
 *
 * [__View Contract on Arbitrum One Arbiscan__](https://arbiscan.io/address/0xb87a436B93fFE9D75c5cFA7bAcFff96430b09868)
 */
export function useGmxPositionRouterDecreasePositionRequests<
  TFunctionName extends 'decreasePositionRequests',
  TSelectData = ReadContractResult<typeof gmxPositionRouterABI, TFunctionName>,
>(
  config: Omit<
    UseContractReadConfig<typeof gmxPositionRouterABI, TFunctionName, TSelectData>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof gmxPositionRouterAddress } = {} as any,
) {
  return useContractRead({
    abi: gmxPositionRouterABI,
    address: gmxPositionRouterAddress[42161],
    functionName: 'decreasePositionRequests',
    ...config,
  } as UseContractReadConfig<typeof gmxPositionRouterABI, TFunctionName, TSelectData>)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link gmxPositionRouterABI}__ and `functionName` set to `"decreasePositionsIndex"`.
 *
 * [__View Contract on Arbitrum One Arbiscan__](https://arbiscan.io/address/0xb87a436B93fFE9D75c5cFA7bAcFff96430b09868)
 */
export function useGmxPositionRouterDecreasePositionsIndex<
  TFunctionName extends 'decreasePositionsIndex',
  TSelectData = ReadContractResult<typeof gmxPositionRouterABI, TFunctionName>,
>(
  config: Omit<
    UseContractReadConfig<typeof gmxPositionRouterABI, TFunctionName, TSelectData>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof gmxPositionRouterAddress } = {} as any,
) {
  return useContractRead({
    abi: gmxPositionRouterABI,
    address: gmxPositionRouterAddress[42161],
    functionName: 'decreasePositionsIndex',
    ...config,
  } as UseContractReadConfig<typeof gmxPositionRouterABI, TFunctionName, TSelectData>)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link gmxPositionRouterABI}__ and `functionName` set to `"depositFee"`.
 *
 * [__View Contract on Arbitrum One Arbiscan__](https://arbiscan.io/address/0xb87a436B93fFE9D75c5cFA7bAcFff96430b09868)
 */
export function useGmxPositionRouterDepositFee<
  TFunctionName extends 'depositFee',
  TSelectData = ReadContractResult<typeof gmxPositionRouterABI, TFunctionName>,
>(
  config: Omit<
    UseContractReadConfig<typeof gmxPositionRouterABI, TFunctionName, TSelectData>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof gmxPositionRouterAddress } = {} as any,
) {
  return useContractRead({
    abi: gmxPositionRouterABI,
    address: gmxPositionRouterAddress[42161],
    functionName: 'depositFee',
    ...config,
  } as UseContractReadConfig<typeof gmxPositionRouterABI, TFunctionName, TSelectData>)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link gmxPositionRouterABI}__ and `functionName` set to `"feeReserves"`.
 *
 * [__View Contract on Arbitrum One Arbiscan__](https://arbiscan.io/address/0xb87a436B93fFE9D75c5cFA7bAcFff96430b09868)
 */
export function useGmxPositionRouterFeeReserves<
  TFunctionName extends 'feeReserves',
  TSelectData = ReadContractResult<typeof gmxPositionRouterABI, TFunctionName>,
>(
  config: Omit<
    UseContractReadConfig<typeof gmxPositionRouterABI, TFunctionName, TSelectData>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof gmxPositionRouterAddress } = {} as any,
) {
  return useContractRead({
    abi: gmxPositionRouterABI,
    address: gmxPositionRouterAddress[42161],
    functionName: 'feeReserves',
    ...config,
  } as UseContractReadConfig<typeof gmxPositionRouterABI, TFunctionName, TSelectData>)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link gmxPositionRouterABI}__ and `functionName` set to `"getDecreasePositionRequestPath"`.
 *
 * [__View Contract on Arbitrum One Arbiscan__](https://arbiscan.io/address/0xb87a436B93fFE9D75c5cFA7bAcFff96430b09868)
 */
export function useGmxPositionRouterGetDecreasePositionRequestPath<
  TFunctionName extends 'getDecreasePositionRequestPath',
  TSelectData = ReadContractResult<typeof gmxPositionRouterABI, TFunctionName>,
>(
  config: Omit<
    UseContractReadConfig<typeof gmxPositionRouterABI, TFunctionName, TSelectData>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof gmxPositionRouterAddress } = {} as any,
) {
  return useContractRead({
    abi: gmxPositionRouterABI,
    address: gmxPositionRouterAddress[42161],
    functionName: 'getDecreasePositionRequestPath',
    ...config,
  } as UseContractReadConfig<typeof gmxPositionRouterABI, TFunctionName, TSelectData>)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link gmxPositionRouterABI}__ and `functionName` set to `"getIncreasePositionRequestPath"`.
 *
 * [__View Contract on Arbitrum One Arbiscan__](https://arbiscan.io/address/0xb87a436B93fFE9D75c5cFA7bAcFff96430b09868)
 */
export function useGmxPositionRouterGetIncreasePositionRequestPath<
  TFunctionName extends 'getIncreasePositionRequestPath',
  TSelectData = ReadContractResult<typeof gmxPositionRouterABI, TFunctionName>,
>(
  config: Omit<
    UseContractReadConfig<typeof gmxPositionRouterABI, TFunctionName, TSelectData>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof gmxPositionRouterAddress } = {} as any,
) {
  return useContractRead({
    abi: gmxPositionRouterABI,
    address: gmxPositionRouterAddress[42161],
    functionName: 'getIncreasePositionRequestPath',
    ...config,
  } as UseContractReadConfig<typeof gmxPositionRouterABI, TFunctionName, TSelectData>)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link gmxPositionRouterABI}__ and `functionName` set to `"getRequestKey"`.
 *
 * [__View Contract on Arbitrum One Arbiscan__](https://arbiscan.io/address/0xb87a436B93fFE9D75c5cFA7bAcFff96430b09868)
 */
export function useGmxPositionRouterGetRequestKey<
  TFunctionName extends 'getRequestKey',
  TSelectData = ReadContractResult<typeof gmxPositionRouterABI, TFunctionName>,
>(
  config: Omit<
    UseContractReadConfig<typeof gmxPositionRouterABI, TFunctionName, TSelectData>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof gmxPositionRouterAddress } = {} as any,
) {
  return useContractRead({
    abi: gmxPositionRouterABI,
    address: gmxPositionRouterAddress[42161],
    functionName: 'getRequestKey',
    ...config,
  } as UseContractReadConfig<typeof gmxPositionRouterABI, TFunctionName, TSelectData>)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link gmxPositionRouterABI}__ and `functionName` set to `"getRequestQueueLengths"`.
 *
 * [__View Contract on Arbitrum One Arbiscan__](https://arbiscan.io/address/0xb87a436B93fFE9D75c5cFA7bAcFff96430b09868)
 */
export function useGmxPositionRouterGetRequestQueueLengths<
  TFunctionName extends 'getRequestQueueLengths',
  TSelectData = ReadContractResult<typeof gmxPositionRouterABI, TFunctionName>,
>(
  config: Omit<
    UseContractReadConfig<typeof gmxPositionRouterABI, TFunctionName, TSelectData>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof gmxPositionRouterAddress } = {} as any,
) {
  return useContractRead({
    abi: gmxPositionRouterABI,
    address: gmxPositionRouterAddress[42161],
    functionName: 'getRequestQueueLengths',
    ...config,
  } as UseContractReadConfig<typeof gmxPositionRouterABI, TFunctionName, TSelectData>)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link gmxPositionRouterABI}__ and `functionName` set to `"gov"`.
 *
 * [__View Contract on Arbitrum One Arbiscan__](https://arbiscan.io/address/0xb87a436B93fFE9D75c5cFA7bAcFff96430b09868)
 */
export function useGmxPositionRouterGov<
  TFunctionName extends 'gov',
  TSelectData = ReadContractResult<typeof gmxPositionRouterABI, TFunctionName>,
>(
  config: Omit<
    UseContractReadConfig<typeof gmxPositionRouterABI, TFunctionName, TSelectData>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof gmxPositionRouterAddress } = {} as any,
) {
  return useContractRead({
    abi: gmxPositionRouterABI,
    address: gmxPositionRouterAddress[42161],
    functionName: 'gov',
    ...config,
  } as UseContractReadConfig<typeof gmxPositionRouterABI, TFunctionName, TSelectData>)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link gmxPositionRouterABI}__ and `functionName` set to `"increasePositionBufferBps"`.
 *
 * [__View Contract on Arbitrum One Arbiscan__](https://arbiscan.io/address/0xb87a436B93fFE9D75c5cFA7bAcFff96430b09868)
 */
export function useGmxPositionRouterIncreasePositionBufferBps<
  TFunctionName extends 'increasePositionBufferBps',
  TSelectData = ReadContractResult<typeof gmxPositionRouterABI, TFunctionName>,
>(
  config: Omit<
    UseContractReadConfig<typeof gmxPositionRouterABI, TFunctionName, TSelectData>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof gmxPositionRouterAddress } = {} as any,
) {
  return useContractRead({
    abi: gmxPositionRouterABI,
    address: gmxPositionRouterAddress[42161],
    functionName: 'increasePositionBufferBps',
    ...config,
  } as UseContractReadConfig<typeof gmxPositionRouterABI, TFunctionName, TSelectData>)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link gmxPositionRouterABI}__ and `functionName` set to `"increasePositionRequestKeys"`.
 *
 * [__View Contract on Arbitrum One Arbiscan__](https://arbiscan.io/address/0xb87a436B93fFE9D75c5cFA7bAcFff96430b09868)
 */
export function useGmxPositionRouterIncreasePositionRequestKeys<
  TFunctionName extends 'increasePositionRequestKeys',
  TSelectData = ReadContractResult<typeof gmxPositionRouterABI, TFunctionName>,
>(
  config: Omit<
    UseContractReadConfig<typeof gmxPositionRouterABI, TFunctionName, TSelectData>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof gmxPositionRouterAddress } = {} as any,
) {
  return useContractRead({
    abi: gmxPositionRouterABI,
    address: gmxPositionRouterAddress[42161],
    functionName: 'increasePositionRequestKeys',
    ...config,
  } as UseContractReadConfig<typeof gmxPositionRouterABI, TFunctionName, TSelectData>)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link gmxPositionRouterABI}__ and `functionName` set to `"increasePositionRequestKeysStart"`.
 *
 * [__View Contract on Arbitrum One Arbiscan__](https://arbiscan.io/address/0xb87a436B93fFE9D75c5cFA7bAcFff96430b09868)
 */
export function useGmxPositionRouterIncreasePositionRequestKeysStart<
  TFunctionName extends 'increasePositionRequestKeysStart',
  TSelectData = ReadContractResult<typeof gmxPositionRouterABI, TFunctionName>,
>(
  config: Omit<
    UseContractReadConfig<typeof gmxPositionRouterABI, TFunctionName, TSelectData>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof gmxPositionRouterAddress } = {} as any,
) {
  return useContractRead({
    abi: gmxPositionRouterABI,
    address: gmxPositionRouterAddress[42161],
    functionName: 'increasePositionRequestKeysStart',
    ...config,
  } as UseContractReadConfig<typeof gmxPositionRouterABI, TFunctionName, TSelectData>)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link gmxPositionRouterABI}__ and `functionName` set to `"increasePositionRequests"`.
 *
 * [__View Contract on Arbitrum One Arbiscan__](https://arbiscan.io/address/0xb87a436B93fFE9D75c5cFA7bAcFff96430b09868)
 */
export function useGmxPositionRouterIncreasePositionRequests<
  TFunctionName extends 'increasePositionRequests',
  TSelectData = ReadContractResult<typeof gmxPositionRouterABI, TFunctionName>,
>(
  config: Omit<
    UseContractReadConfig<typeof gmxPositionRouterABI, TFunctionName, TSelectData>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof gmxPositionRouterAddress } = {} as any,
) {
  return useContractRead({
    abi: gmxPositionRouterABI,
    address: gmxPositionRouterAddress[42161],
    functionName: 'increasePositionRequests',
    ...config,
  } as UseContractReadConfig<typeof gmxPositionRouterABI, TFunctionName, TSelectData>)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link gmxPositionRouterABI}__ and `functionName` set to `"increasePositionsIndex"`.
 *
 * [__View Contract on Arbitrum One Arbiscan__](https://arbiscan.io/address/0xb87a436B93fFE9D75c5cFA7bAcFff96430b09868)
 */
export function useGmxPositionRouterIncreasePositionsIndex<
  TFunctionName extends 'increasePositionsIndex',
  TSelectData = ReadContractResult<typeof gmxPositionRouterABI, TFunctionName>,
>(
  config: Omit<
    UseContractReadConfig<typeof gmxPositionRouterABI, TFunctionName, TSelectData>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof gmxPositionRouterAddress } = {} as any,
) {
  return useContractRead({
    abi: gmxPositionRouterABI,
    address: gmxPositionRouterAddress[42161],
    functionName: 'increasePositionsIndex',
    ...config,
  } as UseContractReadConfig<typeof gmxPositionRouterABI, TFunctionName, TSelectData>)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link gmxPositionRouterABI}__ and `functionName` set to `"isLeverageEnabled"`.
 *
 * [__View Contract on Arbitrum One Arbiscan__](https://arbiscan.io/address/0xb87a436B93fFE9D75c5cFA7bAcFff96430b09868)
 */
export function useGmxPositionRouterIsLeverageEnabled<
  TFunctionName extends 'isLeverageEnabled',
  TSelectData = ReadContractResult<typeof gmxPositionRouterABI, TFunctionName>,
>(
  config: Omit<
    UseContractReadConfig<typeof gmxPositionRouterABI, TFunctionName, TSelectData>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof gmxPositionRouterAddress } = {} as any,
) {
  return useContractRead({
    abi: gmxPositionRouterABI,
    address: gmxPositionRouterAddress[42161],
    functionName: 'isLeverageEnabled',
    ...config,
  } as UseContractReadConfig<typeof gmxPositionRouterABI, TFunctionName, TSelectData>)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link gmxPositionRouterABI}__ and `functionName` set to `"isPositionKeeper"`.
 *
 * [__View Contract on Arbitrum One Arbiscan__](https://arbiscan.io/address/0xb87a436B93fFE9D75c5cFA7bAcFff96430b09868)
 */
export function useGmxPositionRouterIsPositionKeeper<
  TFunctionName extends 'isPositionKeeper',
  TSelectData = ReadContractResult<typeof gmxPositionRouterABI, TFunctionName>,
>(
  config: Omit<
    UseContractReadConfig<typeof gmxPositionRouterABI, TFunctionName, TSelectData>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof gmxPositionRouterAddress } = {} as any,
) {
  return useContractRead({
    abi: gmxPositionRouterABI,
    address: gmxPositionRouterAddress[42161],
    functionName: 'isPositionKeeper',
    ...config,
  } as UseContractReadConfig<typeof gmxPositionRouterABI, TFunctionName, TSelectData>)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link gmxPositionRouterABI}__ and `functionName` set to `"maxGlobalLongSizes"`.
 *
 * [__View Contract on Arbitrum One Arbiscan__](https://arbiscan.io/address/0xb87a436B93fFE9D75c5cFA7bAcFff96430b09868)
 */
export function useGmxPositionRouterMaxGlobalLongSizes<
  TFunctionName extends 'maxGlobalLongSizes',
  TSelectData = ReadContractResult<typeof gmxPositionRouterABI, TFunctionName>,
>(
  config: Omit<
    UseContractReadConfig<typeof gmxPositionRouterABI, TFunctionName, TSelectData>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof gmxPositionRouterAddress } = {} as any,
) {
  return useContractRead({
    abi: gmxPositionRouterABI,
    address: gmxPositionRouterAddress[42161],
    functionName: 'maxGlobalLongSizes',
    ...config,
  } as UseContractReadConfig<typeof gmxPositionRouterABI, TFunctionName, TSelectData>)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link gmxPositionRouterABI}__ and `functionName` set to `"maxGlobalShortSizes"`.
 *
 * [__View Contract on Arbitrum One Arbiscan__](https://arbiscan.io/address/0xb87a436B93fFE9D75c5cFA7bAcFff96430b09868)
 */
export function useGmxPositionRouterMaxGlobalShortSizes<
  TFunctionName extends 'maxGlobalShortSizes',
  TSelectData = ReadContractResult<typeof gmxPositionRouterABI, TFunctionName>,
>(
  config: Omit<
    UseContractReadConfig<typeof gmxPositionRouterABI, TFunctionName, TSelectData>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof gmxPositionRouterAddress } = {} as any,
) {
  return useContractRead({
    abi: gmxPositionRouterABI,
    address: gmxPositionRouterAddress[42161],
    functionName: 'maxGlobalShortSizes',
    ...config,
  } as UseContractReadConfig<typeof gmxPositionRouterABI, TFunctionName, TSelectData>)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link gmxPositionRouterABI}__ and `functionName` set to `"maxTimeDelay"`.
 *
 * [__View Contract on Arbitrum One Arbiscan__](https://arbiscan.io/address/0xb87a436B93fFE9D75c5cFA7bAcFff96430b09868)
 */
export function useGmxPositionRouterMaxTimeDelay<
  TFunctionName extends 'maxTimeDelay',
  TSelectData = ReadContractResult<typeof gmxPositionRouterABI, TFunctionName>,
>(
  config: Omit<
    UseContractReadConfig<typeof gmxPositionRouterABI, TFunctionName, TSelectData>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof gmxPositionRouterAddress } = {} as any,
) {
  return useContractRead({
    abi: gmxPositionRouterABI,
    address: gmxPositionRouterAddress[42161],
    functionName: 'maxTimeDelay',
    ...config,
  } as UseContractReadConfig<typeof gmxPositionRouterABI, TFunctionName, TSelectData>)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link gmxPositionRouterABI}__ and `functionName` set to `"minBlockDelayKeeper"`.
 *
 * [__View Contract on Arbitrum One Arbiscan__](https://arbiscan.io/address/0xb87a436B93fFE9D75c5cFA7bAcFff96430b09868)
 */
export function useGmxPositionRouterMinBlockDelayKeeper<
  TFunctionName extends 'minBlockDelayKeeper',
  TSelectData = ReadContractResult<typeof gmxPositionRouterABI, TFunctionName>,
>(
  config: Omit<
    UseContractReadConfig<typeof gmxPositionRouterABI, TFunctionName, TSelectData>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof gmxPositionRouterAddress } = {} as any,
) {
  return useContractRead({
    abi: gmxPositionRouterABI,
    address: gmxPositionRouterAddress[42161],
    functionName: 'minBlockDelayKeeper',
    ...config,
  } as UseContractReadConfig<typeof gmxPositionRouterABI, TFunctionName, TSelectData>)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link gmxPositionRouterABI}__ and `functionName` set to `"minExecutionFee"`.
 *
 * [__View Contract on Arbitrum One Arbiscan__](https://arbiscan.io/address/0xb87a436B93fFE9D75c5cFA7bAcFff96430b09868)
 */
export function useGmxPositionRouterMinExecutionFee<
  TFunctionName extends 'minExecutionFee',
  TSelectData = ReadContractResult<typeof gmxPositionRouterABI, TFunctionName>,
>(
  config: Omit<
    UseContractReadConfig<typeof gmxPositionRouterABI, TFunctionName, TSelectData>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof gmxPositionRouterAddress } = {} as any,
) {
  return useContractRead({
    abi: gmxPositionRouterABI,
    address: gmxPositionRouterAddress[42161],
    functionName: 'minExecutionFee',
    ...config,
  } as UseContractReadConfig<typeof gmxPositionRouterABI, TFunctionName, TSelectData>)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link gmxPositionRouterABI}__ and `functionName` set to `"minTimeDelayPublic"`.
 *
 * [__View Contract on Arbitrum One Arbiscan__](https://arbiscan.io/address/0xb87a436B93fFE9D75c5cFA7bAcFff96430b09868)
 */
export function useGmxPositionRouterMinTimeDelayPublic<
  TFunctionName extends 'minTimeDelayPublic',
  TSelectData = ReadContractResult<typeof gmxPositionRouterABI, TFunctionName>,
>(
  config: Omit<
    UseContractReadConfig<typeof gmxPositionRouterABI, TFunctionName, TSelectData>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof gmxPositionRouterAddress } = {} as any,
) {
  return useContractRead({
    abi: gmxPositionRouterABI,
    address: gmxPositionRouterAddress[42161],
    functionName: 'minTimeDelayPublic',
    ...config,
  } as UseContractReadConfig<typeof gmxPositionRouterABI, TFunctionName, TSelectData>)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link gmxPositionRouterABI}__ and `functionName` set to `"referralStorage"`.
 *
 * [__View Contract on Arbitrum One Arbiscan__](https://arbiscan.io/address/0xb87a436B93fFE9D75c5cFA7bAcFff96430b09868)
 */
export function useGmxPositionRouterReferralStorage<
  TFunctionName extends 'referralStorage',
  TSelectData = ReadContractResult<typeof gmxPositionRouterABI, TFunctionName>,
>(
  config: Omit<
    UseContractReadConfig<typeof gmxPositionRouterABI, TFunctionName, TSelectData>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof gmxPositionRouterAddress } = {} as any,
) {
  return useContractRead({
    abi: gmxPositionRouterABI,
    address: gmxPositionRouterAddress[42161],
    functionName: 'referralStorage',
    ...config,
  } as UseContractReadConfig<typeof gmxPositionRouterABI, TFunctionName, TSelectData>)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link gmxPositionRouterABI}__ and `functionName` set to `"router"`.
 *
 * [__View Contract on Arbitrum One Arbiscan__](https://arbiscan.io/address/0xb87a436B93fFE9D75c5cFA7bAcFff96430b09868)
 */
export function useGmxPositionRouterRouter<
  TFunctionName extends 'router',
  TSelectData = ReadContractResult<typeof gmxPositionRouterABI, TFunctionName>,
>(
  config: Omit<
    UseContractReadConfig<typeof gmxPositionRouterABI, TFunctionName, TSelectData>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof gmxPositionRouterAddress } = {} as any,
) {
  return useContractRead({
    abi: gmxPositionRouterABI,
    address: gmxPositionRouterAddress[42161],
    functionName: 'router',
    ...config,
  } as UseContractReadConfig<typeof gmxPositionRouterABI, TFunctionName, TSelectData>)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link gmxPositionRouterABI}__ and `functionName` set to `"shortsTracker"`.
 *
 * [__View Contract on Arbitrum One Arbiscan__](https://arbiscan.io/address/0xb87a436B93fFE9D75c5cFA7bAcFff96430b09868)
 */
export function useGmxPositionRouterShortsTracker<
  TFunctionName extends 'shortsTracker',
  TSelectData = ReadContractResult<typeof gmxPositionRouterABI, TFunctionName>,
>(
  config: Omit<
    UseContractReadConfig<typeof gmxPositionRouterABI, TFunctionName, TSelectData>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof gmxPositionRouterAddress } = {} as any,
) {
  return useContractRead({
    abi: gmxPositionRouterABI,
    address: gmxPositionRouterAddress[42161],
    functionName: 'shortsTracker',
    ...config,
  } as UseContractReadConfig<typeof gmxPositionRouterABI, TFunctionName, TSelectData>)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link gmxPositionRouterABI}__ and `functionName` set to `"vault"`.
 *
 * [__View Contract on Arbitrum One Arbiscan__](https://arbiscan.io/address/0xb87a436B93fFE9D75c5cFA7bAcFff96430b09868)
 */
export function useGmxPositionRouterVault<
  TFunctionName extends 'vault',
  TSelectData = ReadContractResult<typeof gmxPositionRouterABI, TFunctionName>,
>(
  config: Omit<
    UseContractReadConfig<typeof gmxPositionRouterABI, TFunctionName, TSelectData>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof gmxPositionRouterAddress } = {} as any,
) {
  return useContractRead({
    abi: gmxPositionRouterABI,
    address: gmxPositionRouterAddress[42161],
    functionName: 'vault',
    ...config,
  } as UseContractReadConfig<typeof gmxPositionRouterABI, TFunctionName, TSelectData>)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link gmxPositionRouterABI}__ and `functionName` set to `"weth"`.
 *
 * [__View Contract on Arbitrum One Arbiscan__](https://arbiscan.io/address/0xb87a436B93fFE9D75c5cFA7bAcFff96430b09868)
 */
export function useGmxPositionRouterWeth<
  TFunctionName extends 'weth',
  TSelectData = ReadContractResult<typeof gmxPositionRouterABI, TFunctionName>,
>(
  config: Omit<
    UseContractReadConfig<typeof gmxPositionRouterABI, TFunctionName, TSelectData>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof gmxPositionRouterAddress } = {} as any,
) {
  return useContractRead({
    abi: gmxPositionRouterABI,
    address: gmxPositionRouterAddress[42161],
    functionName: 'weth',
    ...config,
  } as UseContractReadConfig<typeof gmxPositionRouterABI, TFunctionName, TSelectData>)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link gmxPositionRouterABI}__.
 *
 * [__View Contract on Arbitrum One Arbiscan__](https://arbiscan.io/address/0xb87a436B93fFE9D75c5cFA7bAcFff96430b09868)
 */
export function useGmxPositionRouterWrite<
  TFunctionName extends string,
  TMode extends WriteContractMode = undefined,
  TChainId extends number = keyof typeof gmxPositionRouterAddress,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        PrepareWriteContractResult<typeof gmxPositionRouterABI, string>['request']['abi'],
        TFunctionName,
        TMode
      > & { address?: Address; chainId?: TChainId }
    : UseContractWriteConfig<typeof gmxPositionRouterABI, TFunctionName, TMode> & {
        abi?: never
        address?: never
        chainId?: TChainId
      } = {} as any,
) {
  return useContractWrite<typeof gmxPositionRouterABI, TFunctionName, TMode>({
    abi: gmxPositionRouterABI,
    address: gmxPositionRouterAddress[42161],
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link gmxPositionRouterABI}__ and `functionName` set to `"approve"`.
 *
 * [__View Contract on Arbitrum One Arbiscan__](https://arbiscan.io/address/0xb87a436B93fFE9D75c5cFA7bAcFff96430b09868)
 */
export function useGmxPositionRouterApprove<
  TMode extends WriteContractMode = undefined,
  TChainId extends number = keyof typeof gmxPositionRouterAddress,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        PrepareWriteContractResult<typeof gmxPositionRouterABI, 'approve'>['request']['abi'],
        'approve',
        TMode
      > & { address?: Address; chainId?: TChainId; functionName?: 'approve' }
    : UseContractWriteConfig<typeof gmxPositionRouterABI, 'approve', TMode> & {
        abi?: never
        address?: never
        chainId?: TChainId
        functionName?: 'approve'
      } = {} as any,
) {
  return useContractWrite<typeof gmxPositionRouterABI, 'approve', TMode>({
    abi: gmxPositionRouterABI,
    address: gmxPositionRouterAddress[42161],
    functionName: 'approve',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link gmxPositionRouterABI}__ and `functionName` set to `"cancelDecreasePosition"`.
 *
 * [__View Contract on Arbitrum One Arbiscan__](https://arbiscan.io/address/0xb87a436B93fFE9D75c5cFA7bAcFff96430b09868)
 */
export function useGmxPositionRouterCancelDecreasePosition<
  TMode extends WriteContractMode = undefined,
  TChainId extends number = keyof typeof gmxPositionRouterAddress,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        PrepareWriteContractResult<typeof gmxPositionRouterABI, 'cancelDecreasePosition'>['request']['abi'],
        'cancelDecreasePosition',
        TMode
      > & { address?: Address; chainId?: TChainId; functionName?: 'cancelDecreasePosition' }
    : UseContractWriteConfig<typeof gmxPositionRouterABI, 'cancelDecreasePosition', TMode> & {
        abi?: never
        address?: never
        chainId?: TChainId
        functionName?: 'cancelDecreasePosition'
      } = {} as any,
) {
  return useContractWrite<typeof gmxPositionRouterABI, 'cancelDecreasePosition', TMode>({
    abi: gmxPositionRouterABI,
    address: gmxPositionRouterAddress[42161],
    functionName: 'cancelDecreasePosition',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link gmxPositionRouterABI}__ and `functionName` set to `"cancelIncreasePosition"`.
 *
 * [__View Contract on Arbitrum One Arbiscan__](https://arbiscan.io/address/0xb87a436B93fFE9D75c5cFA7bAcFff96430b09868)
 */
export function useGmxPositionRouterCancelIncreasePosition<
  TMode extends WriteContractMode = undefined,
  TChainId extends number = keyof typeof gmxPositionRouterAddress,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        PrepareWriteContractResult<typeof gmxPositionRouterABI, 'cancelIncreasePosition'>['request']['abi'],
        'cancelIncreasePosition',
        TMode
      > & { address?: Address; chainId?: TChainId; functionName?: 'cancelIncreasePosition' }
    : UseContractWriteConfig<typeof gmxPositionRouterABI, 'cancelIncreasePosition', TMode> & {
        abi?: never
        address?: never
        chainId?: TChainId
        functionName?: 'cancelIncreasePosition'
      } = {} as any,
) {
  return useContractWrite<typeof gmxPositionRouterABI, 'cancelIncreasePosition', TMode>({
    abi: gmxPositionRouterABI,
    address: gmxPositionRouterAddress[42161],
    functionName: 'cancelIncreasePosition',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link gmxPositionRouterABI}__ and `functionName` set to `"createDecreasePosition"`.
 *
 * [__View Contract on Arbitrum One Arbiscan__](https://arbiscan.io/address/0xb87a436B93fFE9D75c5cFA7bAcFff96430b09868)
 */
export function useGmxPositionRouterCreateDecreasePosition<
  TMode extends WriteContractMode = undefined,
  TChainId extends number = keyof typeof gmxPositionRouterAddress,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        PrepareWriteContractResult<typeof gmxPositionRouterABI, 'createDecreasePosition'>['request']['abi'],
        'createDecreasePosition',
        TMode
      > & { address?: Address; chainId?: TChainId; functionName?: 'createDecreasePosition' }
    : UseContractWriteConfig<typeof gmxPositionRouterABI, 'createDecreasePosition', TMode> & {
        abi?: never
        address?: never
        chainId?: TChainId
        functionName?: 'createDecreasePosition'
      } = {} as any,
) {
  return useContractWrite<typeof gmxPositionRouterABI, 'createDecreasePosition', TMode>({
    abi: gmxPositionRouterABI,
    address: gmxPositionRouterAddress[42161],
    functionName: 'createDecreasePosition',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link gmxPositionRouterABI}__ and `functionName` set to `"createIncreasePosition"`.
 *
 * [__View Contract on Arbitrum One Arbiscan__](https://arbiscan.io/address/0xb87a436B93fFE9D75c5cFA7bAcFff96430b09868)
 */
export function useGmxPositionRouterCreateIncreasePosition<
  TMode extends WriteContractMode = undefined,
  TChainId extends number = keyof typeof gmxPositionRouterAddress,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        PrepareWriteContractResult<typeof gmxPositionRouterABI, 'createIncreasePosition'>['request']['abi'],
        'createIncreasePosition',
        TMode
      > & { address?: Address; chainId?: TChainId; functionName?: 'createIncreasePosition' }
    : UseContractWriteConfig<typeof gmxPositionRouterABI, 'createIncreasePosition', TMode> & {
        abi?: never
        address?: never
        chainId?: TChainId
        functionName?: 'createIncreasePosition'
      } = {} as any,
) {
  return useContractWrite<typeof gmxPositionRouterABI, 'createIncreasePosition', TMode>({
    abi: gmxPositionRouterABI,
    address: gmxPositionRouterAddress[42161],
    functionName: 'createIncreasePosition',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link gmxPositionRouterABI}__ and `functionName` set to `"createIncreasePositionETH"`.
 *
 * [__View Contract on Arbitrum One Arbiscan__](https://arbiscan.io/address/0xb87a436B93fFE9D75c5cFA7bAcFff96430b09868)
 */
export function useGmxPositionRouterCreateIncreasePositionEth<
  TMode extends WriteContractMode = undefined,
  TChainId extends number = keyof typeof gmxPositionRouterAddress,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        PrepareWriteContractResult<typeof gmxPositionRouterABI, 'createIncreasePositionETH'>['request']['abi'],
        'createIncreasePositionETH',
        TMode
      > & { address?: Address; chainId?: TChainId; functionName?: 'createIncreasePositionETH' }
    : UseContractWriteConfig<typeof gmxPositionRouterABI, 'createIncreasePositionETH', TMode> & {
        abi?: never
        address?: never
        chainId?: TChainId
        functionName?: 'createIncreasePositionETH'
      } = {} as any,
) {
  return useContractWrite<typeof gmxPositionRouterABI, 'createIncreasePositionETH', TMode>({
    abi: gmxPositionRouterABI,
    address: gmxPositionRouterAddress[42161],
    functionName: 'createIncreasePositionETH',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link gmxPositionRouterABI}__ and `functionName` set to `"executeDecreasePosition"`.
 *
 * [__View Contract on Arbitrum One Arbiscan__](https://arbiscan.io/address/0xb87a436B93fFE9D75c5cFA7bAcFff96430b09868)
 */
export function useGmxPositionRouterExecuteDecreasePosition<
  TMode extends WriteContractMode = undefined,
  TChainId extends number = keyof typeof gmxPositionRouterAddress,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        PrepareWriteContractResult<typeof gmxPositionRouterABI, 'executeDecreasePosition'>['request']['abi'],
        'executeDecreasePosition',
        TMode
      > & { address?: Address; chainId?: TChainId; functionName?: 'executeDecreasePosition' }
    : UseContractWriteConfig<typeof gmxPositionRouterABI, 'executeDecreasePosition', TMode> & {
        abi?: never
        address?: never
        chainId?: TChainId
        functionName?: 'executeDecreasePosition'
      } = {} as any,
) {
  return useContractWrite<typeof gmxPositionRouterABI, 'executeDecreasePosition', TMode>({
    abi: gmxPositionRouterABI,
    address: gmxPositionRouterAddress[42161],
    functionName: 'executeDecreasePosition',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link gmxPositionRouterABI}__ and `functionName` set to `"executeDecreasePositions"`.
 *
 * [__View Contract on Arbitrum One Arbiscan__](https://arbiscan.io/address/0xb87a436B93fFE9D75c5cFA7bAcFff96430b09868)
 */
export function useGmxPositionRouterExecuteDecreasePositions<
  TMode extends WriteContractMode = undefined,
  TChainId extends number = keyof typeof gmxPositionRouterAddress,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        PrepareWriteContractResult<typeof gmxPositionRouterABI, 'executeDecreasePositions'>['request']['abi'],
        'executeDecreasePositions',
        TMode
      > & { address?: Address; chainId?: TChainId; functionName?: 'executeDecreasePositions' }
    : UseContractWriteConfig<typeof gmxPositionRouterABI, 'executeDecreasePositions', TMode> & {
        abi?: never
        address?: never
        chainId?: TChainId
        functionName?: 'executeDecreasePositions'
      } = {} as any,
) {
  return useContractWrite<typeof gmxPositionRouterABI, 'executeDecreasePositions', TMode>({
    abi: gmxPositionRouterABI,
    address: gmxPositionRouterAddress[42161],
    functionName: 'executeDecreasePositions',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link gmxPositionRouterABI}__ and `functionName` set to `"executeIncreasePosition"`.
 *
 * [__View Contract on Arbitrum One Arbiscan__](https://arbiscan.io/address/0xb87a436B93fFE9D75c5cFA7bAcFff96430b09868)
 */
export function useGmxPositionRouterExecuteIncreasePosition<
  TMode extends WriteContractMode = undefined,
  TChainId extends number = keyof typeof gmxPositionRouterAddress,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        PrepareWriteContractResult<typeof gmxPositionRouterABI, 'executeIncreasePosition'>['request']['abi'],
        'executeIncreasePosition',
        TMode
      > & { address?: Address; chainId?: TChainId; functionName?: 'executeIncreasePosition' }
    : UseContractWriteConfig<typeof gmxPositionRouterABI, 'executeIncreasePosition', TMode> & {
        abi?: never
        address?: never
        chainId?: TChainId
        functionName?: 'executeIncreasePosition'
      } = {} as any,
) {
  return useContractWrite<typeof gmxPositionRouterABI, 'executeIncreasePosition', TMode>({
    abi: gmxPositionRouterABI,
    address: gmxPositionRouterAddress[42161],
    functionName: 'executeIncreasePosition',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link gmxPositionRouterABI}__ and `functionName` set to `"executeIncreasePositions"`.
 *
 * [__View Contract on Arbitrum One Arbiscan__](https://arbiscan.io/address/0xb87a436B93fFE9D75c5cFA7bAcFff96430b09868)
 */
export function useGmxPositionRouterExecuteIncreasePositions<
  TMode extends WriteContractMode = undefined,
  TChainId extends number = keyof typeof gmxPositionRouterAddress,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        PrepareWriteContractResult<typeof gmxPositionRouterABI, 'executeIncreasePositions'>['request']['abi'],
        'executeIncreasePositions',
        TMode
      > & { address?: Address; chainId?: TChainId; functionName?: 'executeIncreasePositions' }
    : UseContractWriteConfig<typeof gmxPositionRouterABI, 'executeIncreasePositions', TMode> & {
        abi?: never
        address?: never
        chainId?: TChainId
        functionName?: 'executeIncreasePositions'
      } = {} as any,
) {
  return useContractWrite<typeof gmxPositionRouterABI, 'executeIncreasePositions', TMode>({
    abi: gmxPositionRouterABI,
    address: gmxPositionRouterAddress[42161],
    functionName: 'executeIncreasePositions',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link gmxPositionRouterABI}__ and `functionName` set to `"sendValue"`.
 *
 * [__View Contract on Arbitrum One Arbiscan__](https://arbiscan.io/address/0xb87a436B93fFE9D75c5cFA7bAcFff96430b09868)
 */
export function useGmxPositionRouterSendValue<
  TMode extends WriteContractMode = undefined,
  TChainId extends number = keyof typeof gmxPositionRouterAddress,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        PrepareWriteContractResult<typeof gmxPositionRouterABI, 'sendValue'>['request']['abi'],
        'sendValue',
        TMode
      > & { address?: Address; chainId?: TChainId; functionName?: 'sendValue' }
    : UseContractWriteConfig<typeof gmxPositionRouterABI, 'sendValue', TMode> & {
        abi?: never
        address?: never
        chainId?: TChainId
        functionName?: 'sendValue'
      } = {} as any,
) {
  return useContractWrite<typeof gmxPositionRouterABI, 'sendValue', TMode>({
    abi: gmxPositionRouterABI,
    address: gmxPositionRouterAddress[42161],
    functionName: 'sendValue',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link gmxPositionRouterABI}__ and `functionName` set to `"setAdmin"`.
 *
 * [__View Contract on Arbitrum One Arbiscan__](https://arbiscan.io/address/0xb87a436B93fFE9D75c5cFA7bAcFff96430b09868)
 */
export function useGmxPositionRouterSetAdmin<
  TMode extends WriteContractMode = undefined,
  TChainId extends number = keyof typeof gmxPositionRouterAddress,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        PrepareWriteContractResult<typeof gmxPositionRouterABI, 'setAdmin'>['request']['abi'],
        'setAdmin',
        TMode
      > & { address?: Address; chainId?: TChainId; functionName?: 'setAdmin' }
    : UseContractWriteConfig<typeof gmxPositionRouterABI, 'setAdmin', TMode> & {
        abi?: never
        address?: never
        chainId?: TChainId
        functionName?: 'setAdmin'
      } = {} as any,
) {
  return useContractWrite<typeof gmxPositionRouterABI, 'setAdmin', TMode>({
    abi: gmxPositionRouterABI,
    address: gmxPositionRouterAddress[42161],
    functionName: 'setAdmin',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link gmxPositionRouterABI}__ and `functionName` set to `"setCallbackGasLimit"`.
 *
 * [__View Contract on Arbitrum One Arbiscan__](https://arbiscan.io/address/0xb87a436B93fFE9D75c5cFA7bAcFff96430b09868)
 */
export function useGmxPositionRouterSetCallbackGasLimit<
  TMode extends WriteContractMode = undefined,
  TChainId extends number = keyof typeof gmxPositionRouterAddress,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        PrepareWriteContractResult<typeof gmxPositionRouterABI, 'setCallbackGasLimit'>['request']['abi'],
        'setCallbackGasLimit',
        TMode
      > & { address?: Address; chainId?: TChainId; functionName?: 'setCallbackGasLimit' }
    : UseContractWriteConfig<typeof gmxPositionRouterABI, 'setCallbackGasLimit', TMode> & {
        abi?: never
        address?: never
        chainId?: TChainId
        functionName?: 'setCallbackGasLimit'
      } = {} as any,
) {
  return useContractWrite<typeof gmxPositionRouterABI, 'setCallbackGasLimit', TMode>({
    abi: gmxPositionRouterABI,
    address: gmxPositionRouterAddress[42161],
    functionName: 'setCallbackGasLimit',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link gmxPositionRouterABI}__ and `functionName` set to `"setDelayValues"`.
 *
 * [__View Contract on Arbitrum One Arbiscan__](https://arbiscan.io/address/0xb87a436B93fFE9D75c5cFA7bAcFff96430b09868)
 */
export function useGmxPositionRouterSetDelayValues<
  TMode extends WriteContractMode = undefined,
  TChainId extends number = keyof typeof gmxPositionRouterAddress,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        PrepareWriteContractResult<typeof gmxPositionRouterABI, 'setDelayValues'>['request']['abi'],
        'setDelayValues',
        TMode
      > & { address?: Address; chainId?: TChainId; functionName?: 'setDelayValues' }
    : UseContractWriteConfig<typeof gmxPositionRouterABI, 'setDelayValues', TMode> & {
        abi?: never
        address?: never
        chainId?: TChainId
        functionName?: 'setDelayValues'
      } = {} as any,
) {
  return useContractWrite<typeof gmxPositionRouterABI, 'setDelayValues', TMode>({
    abi: gmxPositionRouterABI,
    address: gmxPositionRouterAddress[42161],
    functionName: 'setDelayValues',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link gmxPositionRouterABI}__ and `functionName` set to `"setDepositFee"`.
 *
 * [__View Contract on Arbitrum One Arbiscan__](https://arbiscan.io/address/0xb87a436B93fFE9D75c5cFA7bAcFff96430b09868)
 */
export function useGmxPositionRouterSetDepositFee<
  TMode extends WriteContractMode = undefined,
  TChainId extends number = keyof typeof gmxPositionRouterAddress,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        PrepareWriteContractResult<typeof gmxPositionRouterABI, 'setDepositFee'>['request']['abi'],
        'setDepositFee',
        TMode
      > & { address?: Address; chainId?: TChainId; functionName?: 'setDepositFee' }
    : UseContractWriteConfig<typeof gmxPositionRouterABI, 'setDepositFee', TMode> & {
        abi?: never
        address?: never
        chainId?: TChainId
        functionName?: 'setDepositFee'
      } = {} as any,
) {
  return useContractWrite<typeof gmxPositionRouterABI, 'setDepositFee', TMode>({
    abi: gmxPositionRouterABI,
    address: gmxPositionRouterAddress[42161],
    functionName: 'setDepositFee',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link gmxPositionRouterABI}__ and `functionName` set to `"setGov"`.
 *
 * [__View Contract on Arbitrum One Arbiscan__](https://arbiscan.io/address/0xb87a436B93fFE9D75c5cFA7bAcFff96430b09868)
 */
export function useGmxPositionRouterSetGov<
  TMode extends WriteContractMode = undefined,
  TChainId extends number = keyof typeof gmxPositionRouterAddress,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        PrepareWriteContractResult<typeof gmxPositionRouterABI, 'setGov'>['request']['abi'],
        'setGov',
        TMode
      > & { address?: Address; chainId?: TChainId; functionName?: 'setGov' }
    : UseContractWriteConfig<typeof gmxPositionRouterABI, 'setGov', TMode> & {
        abi?: never
        address?: never
        chainId?: TChainId
        functionName?: 'setGov'
      } = {} as any,
) {
  return useContractWrite<typeof gmxPositionRouterABI, 'setGov', TMode>({
    abi: gmxPositionRouterABI,
    address: gmxPositionRouterAddress[42161],
    functionName: 'setGov',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link gmxPositionRouterABI}__ and `functionName` set to `"setIncreasePositionBufferBps"`.
 *
 * [__View Contract on Arbitrum One Arbiscan__](https://arbiscan.io/address/0xb87a436B93fFE9D75c5cFA7bAcFff96430b09868)
 */
export function useGmxPositionRouterSetIncreasePositionBufferBps<
  TMode extends WriteContractMode = undefined,
  TChainId extends number = keyof typeof gmxPositionRouterAddress,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        PrepareWriteContractResult<typeof gmxPositionRouterABI, 'setIncreasePositionBufferBps'>['request']['abi'],
        'setIncreasePositionBufferBps',
        TMode
      > & { address?: Address; chainId?: TChainId; functionName?: 'setIncreasePositionBufferBps' }
    : UseContractWriteConfig<typeof gmxPositionRouterABI, 'setIncreasePositionBufferBps', TMode> & {
        abi?: never
        address?: never
        chainId?: TChainId
        functionName?: 'setIncreasePositionBufferBps'
      } = {} as any,
) {
  return useContractWrite<typeof gmxPositionRouterABI, 'setIncreasePositionBufferBps', TMode>({
    abi: gmxPositionRouterABI,
    address: gmxPositionRouterAddress[42161],
    functionName: 'setIncreasePositionBufferBps',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link gmxPositionRouterABI}__ and `functionName` set to `"setIsLeverageEnabled"`.
 *
 * [__View Contract on Arbitrum One Arbiscan__](https://arbiscan.io/address/0xb87a436B93fFE9D75c5cFA7bAcFff96430b09868)
 */
export function useGmxPositionRouterSetIsLeverageEnabled<
  TMode extends WriteContractMode = undefined,
  TChainId extends number = keyof typeof gmxPositionRouterAddress,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        PrepareWriteContractResult<typeof gmxPositionRouterABI, 'setIsLeverageEnabled'>['request']['abi'],
        'setIsLeverageEnabled',
        TMode
      > & { address?: Address; chainId?: TChainId; functionName?: 'setIsLeverageEnabled' }
    : UseContractWriteConfig<typeof gmxPositionRouterABI, 'setIsLeverageEnabled', TMode> & {
        abi?: never
        address?: never
        chainId?: TChainId
        functionName?: 'setIsLeverageEnabled'
      } = {} as any,
) {
  return useContractWrite<typeof gmxPositionRouterABI, 'setIsLeverageEnabled', TMode>({
    abi: gmxPositionRouterABI,
    address: gmxPositionRouterAddress[42161],
    functionName: 'setIsLeverageEnabled',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link gmxPositionRouterABI}__ and `functionName` set to `"setMaxGlobalSizes"`.
 *
 * [__View Contract on Arbitrum One Arbiscan__](https://arbiscan.io/address/0xb87a436B93fFE9D75c5cFA7bAcFff96430b09868)
 */
export function useGmxPositionRouterSetMaxGlobalSizes<
  TMode extends WriteContractMode = undefined,
  TChainId extends number = keyof typeof gmxPositionRouterAddress,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        PrepareWriteContractResult<typeof gmxPositionRouterABI, 'setMaxGlobalSizes'>['request']['abi'],
        'setMaxGlobalSizes',
        TMode
      > & { address?: Address; chainId?: TChainId; functionName?: 'setMaxGlobalSizes' }
    : UseContractWriteConfig<typeof gmxPositionRouterABI, 'setMaxGlobalSizes', TMode> & {
        abi?: never
        address?: never
        chainId?: TChainId
        functionName?: 'setMaxGlobalSizes'
      } = {} as any,
) {
  return useContractWrite<typeof gmxPositionRouterABI, 'setMaxGlobalSizes', TMode>({
    abi: gmxPositionRouterABI,
    address: gmxPositionRouterAddress[42161],
    functionName: 'setMaxGlobalSizes',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link gmxPositionRouterABI}__ and `functionName` set to `"setMinExecutionFee"`.
 *
 * [__View Contract on Arbitrum One Arbiscan__](https://arbiscan.io/address/0xb87a436B93fFE9D75c5cFA7bAcFff96430b09868)
 */
export function useGmxPositionRouterSetMinExecutionFee<
  TMode extends WriteContractMode = undefined,
  TChainId extends number = keyof typeof gmxPositionRouterAddress,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        PrepareWriteContractResult<typeof gmxPositionRouterABI, 'setMinExecutionFee'>['request']['abi'],
        'setMinExecutionFee',
        TMode
      > & { address?: Address; chainId?: TChainId; functionName?: 'setMinExecutionFee' }
    : UseContractWriteConfig<typeof gmxPositionRouterABI, 'setMinExecutionFee', TMode> & {
        abi?: never
        address?: never
        chainId?: TChainId
        functionName?: 'setMinExecutionFee'
      } = {} as any,
) {
  return useContractWrite<typeof gmxPositionRouterABI, 'setMinExecutionFee', TMode>({
    abi: gmxPositionRouterABI,
    address: gmxPositionRouterAddress[42161],
    functionName: 'setMinExecutionFee',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link gmxPositionRouterABI}__ and `functionName` set to `"setPositionKeeper"`.
 *
 * [__View Contract on Arbitrum One Arbiscan__](https://arbiscan.io/address/0xb87a436B93fFE9D75c5cFA7bAcFff96430b09868)
 */
export function useGmxPositionRouterSetPositionKeeper<
  TMode extends WriteContractMode = undefined,
  TChainId extends number = keyof typeof gmxPositionRouterAddress,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        PrepareWriteContractResult<typeof gmxPositionRouterABI, 'setPositionKeeper'>['request']['abi'],
        'setPositionKeeper',
        TMode
      > & { address?: Address; chainId?: TChainId; functionName?: 'setPositionKeeper' }
    : UseContractWriteConfig<typeof gmxPositionRouterABI, 'setPositionKeeper', TMode> & {
        abi?: never
        address?: never
        chainId?: TChainId
        functionName?: 'setPositionKeeper'
      } = {} as any,
) {
  return useContractWrite<typeof gmxPositionRouterABI, 'setPositionKeeper', TMode>({
    abi: gmxPositionRouterABI,
    address: gmxPositionRouterAddress[42161],
    functionName: 'setPositionKeeper',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link gmxPositionRouterABI}__ and `functionName` set to `"setReferralStorage"`.
 *
 * [__View Contract on Arbitrum One Arbiscan__](https://arbiscan.io/address/0xb87a436B93fFE9D75c5cFA7bAcFff96430b09868)
 */
export function useGmxPositionRouterSetReferralStorage<
  TMode extends WriteContractMode = undefined,
  TChainId extends number = keyof typeof gmxPositionRouterAddress,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        PrepareWriteContractResult<typeof gmxPositionRouterABI, 'setReferralStorage'>['request']['abi'],
        'setReferralStorage',
        TMode
      > & { address?: Address; chainId?: TChainId; functionName?: 'setReferralStorage' }
    : UseContractWriteConfig<typeof gmxPositionRouterABI, 'setReferralStorage', TMode> & {
        abi?: never
        address?: never
        chainId?: TChainId
        functionName?: 'setReferralStorage'
      } = {} as any,
) {
  return useContractWrite<typeof gmxPositionRouterABI, 'setReferralStorage', TMode>({
    abi: gmxPositionRouterABI,
    address: gmxPositionRouterAddress[42161],
    functionName: 'setReferralStorage',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link gmxPositionRouterABI}__ and `functionName` set to `"setRequestKeysStartValues"`.
 *
 * [__View Contract on Arbitrum One Arbiscan__](https://arbiscan.io/address/0xb87a436B93fFE9D75c5cFA7bAcFff96430b09868)
 */
export function useGmxPositionRouterSetRequestKeysStartValues<
  TMode extends WriteContractMode = undefined,
  TChainId extends number = keyof typeof gmxPositionRouterAddress,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        PrepareWriteContractResult<typeof gmxPositionRouterABI, 'setRequestKeysStartValues'>['request']['abi'],
        'setRequestKeysStartValues',
        TMode
      > & { address?: Address; chainId?: TChainId; functionName?: 'setRequestKeysStartValues' }
    : UseContractWriteConfig<typeof gmxPositionRouterABI, 'setRequestKeysStartValues', TMode> & {
        abi?: never
        address?: never
        chainId?: TChainId
        functionName?: 'setRequestKeysStartValues'
      } = {} as any,
) {
  return useContractWrite<typeof gmxPositionRouterABI, 'setRequestKeysStartValues', TMode>({
    abi: gmxPositionRouterABI,
    address: gmxPositionRouterAddress[42161],
    functionName: 'setRequestKeysStartValues',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link gmxPositionRouterABI}__ and `functionName` set to `"withdrawFees"`.
 *
 * [__View Contract on Arbitrum One Arbiscan__](https://arbiscan.io/address/0xb87a436B93fFE9D75c5cFA7bAcFff96430b09868)
 */
export function useGmxPositionRouterWithdrawFees<
  TMode extends WriteContractMode = undefined,
  TChainId extends number = keyof typeof gmxPositionRouterAddress,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        PrepareWriteContractResult<typeof gmxPositionRouterABI, 'withdrawFees'>['request']['abi'],
        'withdrawFees',
        TMode
      > & { address?: Address; chainId?: TChainId; functionName?: 'withdrawFees' }
    : UseContractWriteConfig<typeof gmxPositionRouterABI, 'withdrawFees', TMode> & {
        abi?: never
        address?: never
        chainId?: TChainId
        functionName?: 'withdrawFees'
      } = {} as any,
) {
  return useContractWrite<typeof gmxPositionRouterABI, 'withdrawFees', TMode>({
    abi: gmxPositionRouterABI,
    address: gmxPositionRouterAddress[42161],
    functionName: 'withdrawFees',
    ...config,
  } as any)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link gmxPositionRouterABI}__.
 *
 * [__View Contract on Arbitrum One Arbiscan__](https://arbiscan.io/address/0xb87a436B93fFE9D75c5cFA7bAcFff96430b09868)
 */
export function usePrepareGmxPositionRouterWrite<TFunctionName extends string>(
  config: Omit<UsePrepareContractWriteConfig<typeof gmxPositionRouterABI, TFunctionName>, 'abi' | 'address'> & {
    chainId?: keyof typeof gmxPositionRouterAddress
  } = {} as any,
) {
  return usePrepareContractWrite({
    abi: gmxPositionRouterABI,
    address: gmxPositionRouterAddress[42161],
    ...config,
  } as UsePrepareContractWriteConfig<typeof gmxPositionRouterABI, TFunctionName>)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link gmxPositionRouterABI}__ and `functionName` set to `"approve"`.
 *
 * [__View Contract on Arbitrum One Arbiscan__](https://arbiscan.io/address/0xb87a436B93fFE9D75c5cFA7bAcFff96430b09868)
 */
export function usePrepareGmxPositionRouterApprove(
  config: Omit<
    UsePrepareContractWriteConfig<typeof gmxPositionRouterABI, 'approve'>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof gmxPositionRouterAddress } = {} as any,
) {
  return usePrepareContractWrite({
    abi: gmxPositionRouterABI,
    address: gmxPositionRouterAddress[42161],
    functionName: 'approve',
    ...config,
  } as UsePrepareContractWriteConfig<typeof gmxPositionRouterABI, 'approve'>)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link gmxPositionRouterABI}__ and `functionName` set to `"cancelDecreasePosition"`.
 *
 * [__View Contract on Arbitrum One Arbiscan__](https://arbiscan.io/address/0xb87a436B93fFE9D75c5cFA7bAcFff96430b09868)
 */
export function usePrepareGmxPositionRouterCancelDecreasePosition(
  config: Omit<
    UsePrepareContractWriteConfig<typeof gmxPositionRouterABI, 'cancelDecreasePosition'>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof gmxPositionRouterAddress } = {} as any,
) {
  return usePrepareContractWrite({
    abi: gmxPositionRouterABI,
    address: gmxPositionRouterAddress[42161],
    functionName: 'cancelDecreasePosition',
    ...config,
  } as UsePrepareContractWriteConfig<typeof gmxPositionRouterABI, 'cancelDecreasePosition'>)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link gmxPositionRouterABI}__ and `functionName` set to `"cancelIncreasePosition"`.
 *
 * [__View Contract on Arbitrum One Arbiscan__](https://arbiscan.io/address/0xb87a436B93fFE9D75c5cFA7bAcFff96430b09868)
 */
export function usePrepareGmxPositionRouterCancelIncreasePosition(
  config: Omit<
    UsePrepareContractWriteConfig<typeof gmxPositionRouterABI, 'cancelIncreasePosition'>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof gmxPositionRouterAddress } = {} as any,
) {
  return usePrepareContractWrite({
    abi: gmxPositionRouterABI,
    address: gmxPositionRouterAddress[42161],
    functionName: 'cancelIncreasePosition',
    ...config,
  } as UsePrepareContractWriteConfig<typeof gmxPositionRouterABI, 'cancelIncreasePosition'>)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link gmxPositionRouterABI}__ and `functionName` set to `"createDecreasePosition"`.
 *
 * [__View Contract on Arbitrum One Arbiscan__](https://arbiscan.io/address/0xb87a436B93fFE9D75c5cFA7bAcFff96430b09868)
 */
export function usePrepareGmxPositionRouterCreateDecreasePosition(
  config: Omit<
    UsePrepareContractWriteConfig<typeof gmxPositionRouterABI, 'createDecreasePosition'>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof gmxPositionRouterAddress } = {} as any,
) {
  return usePrepareContractWrite({
    abi: gmxPositionRouterABI,
    address: gmxPositionRouterAddress[42161],
    functionName: 'createDecreasePosition',
    ...config,
  } as UsePrepareContractWriteConfig<typeof gmxPositionRouterABI, 'createDecreasePosition'>)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link gmxPositionRouterABI}__ and `functionName` set to `"createIncreasePosition"`.
 *
 * [__View Contract on Arbitrum One Arbiscan__](https://arbiscan.io/address/0xb87a436B93fFE9D75c5cFA7bAcFff96430b09868)
 */
export function usePrepareGmxPositionRouterCreateIncreasePosition(
  config: Omit<
    UsePrepareContractWriteConfig<typeof gmxPositionRouterABI, 'createIncreasePosition'>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof gmxPositionRouterAddress } = {} as any,
) {
  return usePrepareContractWrite({
    abi: gmxPositionRouterABI,
    address: gmxPositionRouterAddress[42161],
    functionName: 'createIncreasePosition',
    ...config,
  } as UsePrepareContractWriteConfig<typeof gmxPositionRouterABI, 'createIncreasePosition'>)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link gmxPositionRouterABI}__ and `functionName` set to `"createIncreasePositionETH"`.
 *
 * [__View Contract on Arbitrum One Arbiscan__](https://arbiscan.io/address/0xb87a436B93fFE9D75c5cFA7bAcFff96430b09868)
 */
export function usePrepareGmxPositionRouterCreateIncreasePositionEth(
  config: Omit<
    UsePrepareContractWriteConfig<typeof gmxPositionRouterABI, 'createIncreasePositionETH'>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof gmxPositionRouterAddress } = {} as any,
) {
  return usePrepareContractWrite({
    abi: gmxPositionRouterABI,
    address: gmxPositionRouterAddress[42161],
    functionName: 'createIncreasePositionETH',
    ...config,
  } as UsePrepareContractWriteConfig<typeof gmxPositionRouterABI, 'createIncreasePositionETH'>)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link gmxPositionRouterABI}__ and `functionName` set to `"executeDecreasePosition"`.
 *
 * [__View Contract on Arbitrum One Arbiscan__](https://arbiscan.io/address/0xb87a436B93fFE9D75c5cFA7bAcFff96430b09868)
 */
export function usePrepareGmxPositionRouterExecuteDecreasePosition(
  config: Omit<
    UsePrepareContractWriteConfig<typeof gmxPositionRouterABI, 'executeDecreasePosition'>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof gmxPositionRouterAddress } = {} as any,
) {
  return usePrepareContractWrite({
    abi: gmxPositionRouterABI,
    address: gmxPositionRouterAddress[42161],
    functionName: 'executeDecreasePosition',
    ...config,
  } as UsePrepareContractWriteConfig<typeof gmxPositionRouterABI, 'executeDecreasePosition'>)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link gmxPositionRouterABI}__ and `functionName` set to `"executeDecreasePositions"`.
 *
 * [__View Contract on Arbitrum One Arbiscan__](https://arbiscan.io/address/0xb87a436B93fFE9D75c5cFA7bAcFff96430b09868)
 */
export function usePrepareGmxPositionRouterExecuteDecreasePositions(
  config: Omit<
    UsePrepareContractWriteConfig<typeof gmxPositionRouterABI, 'executeDecreasePositions'>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof gmxPositionRouterAddress } = {} as any,
) {
  return usePrepareContractWrite({
    abi: gmxPositionRouterABI,
    address: gmxPositionRouterAddress[42161],
    functionName: 'executeDecreasePositions',
    ...config,
  } as UsePrepareContractWriteConfig<typeof gmxPositionRouterABI, 'executeDecreasePositions'>)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link gmxPositionRouterABI}__ and `functionName` set to `"executeIncreasePosition"`.
 *
 * [__View Contract on Arbitrum One Arbiscan__](https://arbiscan.io/address/0xb87a436B93fFE9D75c5cFA7bAcFff96430b09868)
 */
export function usePrepareGmxPositionRouterExecuteIncreasePosition(
  config: Omit<
    UsePrepareContractWriteConfig<typeof gmxPositionRouterABI, 'executeIncreasePosition'>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof gmxPositionRouterAddress } = {} as any,
) {
  return usePrepareContractWrite({
    abi: gmxPositionRouterABI,
    address: gmxPositionRouterAddress[42161],
    functionName: 'executeIncreasePosition',
    ...config,
  } as UsePrepareContractWriteConfig<typeof gmxPositionRouterABI, 'executeIncreasePosition'>)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link gmxPositionRouterABI}__ and `functionName` set to `"executeIncreasePositions"`.
 *
 * [__View Contract on Arbitrum One Arbiscan__](https://arbiscan.io/address/0xb87a436B93fFE9D75c5cFA7bAcFff96430b09868)
 */
export function usePrepareGmxPositionRouterExecuteIncreasePositions(
  config: Omit<
    UsePrepareContractWriteConfig<typeof gmxPositionRouterABI, 'executeIncreasePositions'>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof gmxPositionRouterAddress } = {} as any,
) {
  return usePrepareContractWrite({
    abi: gmxPositionRouterABI,
    address: gmxPositionRouterAddress[42161],
    functionName: 'executeIncreasePositions',
    ...config,
  } as UsePrepareContractWriteConfig<typeof gmxPositionRouterABI, 'executeIncreasePositions'>)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link gmxPositionRouterABI}__ and `functionName` set to `"sendValue"`.
 *
 * [__View Contract on Arbitrum One Arbiscan__](https://arbiscan.io/address/0xb87a436B93fFE9D75c5cFA7bAcFff96430b09868)
 */
export function usePrepareGmxPositionRouterSendValue(
  config: Omit<
    UsePrepareContractWriteConfig<typeof gmxPositionRouterABI, 'sendValue'>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof gmxPositionRouterAddress } = {} as any,
) {
  return usePrepareContractWrite({
    abi: gmxPositionRouterABI,
    address: gmxPositionRouterAddress[42161],
    functionName: 'sendValue',
    ...config,
  } as UsePrepareContractWriteConfig<typeof gmxPositionRouterABI, 'sendValue'>)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link gmxPositionRouterABI}__ and `functionName` set to `"setAdmin"`.
 *
 * [__View Contract on Arbitrum One Arbiscan__](https://arbiscan.io/address/0xb87a436B93fFE9D75c5cFA7bAcFff96430b09868)
 */
export function usePrepareGmxPositionRouterSetAdmin(
  config: Omit<
    UsePrepareContractWriteConfig<typeof gmxPositionRouterABI, 'setAdmin'>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof gmxPositionRouterAddress } = {} as any,
) {
  return usePrepareContractWrite({
    abi: gmxPositionRouterABI,
    address: gmxPositionRouterAddress[42161],
    functionName: 'setAdmin',
    ...config,
  } as UsePrepareContractWriteConfig<typeof gmxPositionRouterABI, 'setAdmin'>)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link gmxPositionRouterABI}__ and `functionName` set to `"setCallbackGasLimit"`.
 *
 * [__View Contract on Arbitrum One Arbiscan__](https://arbiscan.io/address/0xb87a436B93fFE9D75c5cFA7bAcFff96430b09868)
 */
export function usePrepareGmxPositionRouterSetCallbackGasLimit(
  config: Omit<
    UsePrepareContractWriteConfig<typeof gmxPositionRouterABI, 'setCallbackGasLimit'>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof gmxPositionRouterAddress } = {} as any,
) {
  return usePrepareContractWrite({
    abi: gmxPositionRouterABI,
    address: gmxPositionRouterAddress[42161],
    functionName: 'setCallbackGasLimit',
    ...config,
  } as UsePrepareContractWriteConfig<typeof gmxPositionRouterABI, 'setCallbackGasLimit'>)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link gmxPositionRouterABI}__ and `functionName` set to `"setDelayValues"`.
 *
 * [__View Contract on Arbitrum One Arbiscan__](https://arbiscan.io/address/0xb87a436B93fFE9D75c5cFA7bAcFff96430b09868)
 */
export function usePrepareGmxPositionRouterSetDelayValues(
  config: Omit<
    UsePrepareContractWriteConfig<typeof gmxPositionRouterABI, 'setDelayValues'>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof gmxPositionRouterAddress } = {} as any,
) {
  return usePrepareContractWrite({
    abi: gmxPositionRouterABI,
    address: gmxPositionRouterAddress[42161],
    functionName: 'setDelayValues',
    ...config,
  } as UsePrepareContractWriteConfig<typeof gmxPositionRouterABI, 'setDelayValues'>)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link gmxPositionRouterABI}__ and `functionName` set to `"setDepositFee"`.
 *
 * [__View Contract on Arbitrum One Arbiscan__](https://arbiscan.io/address/0xb87a436B93fFE9D75c5cFA7bAcFff96430b09868)
 */
export function usePrepareGmxPositionRouterSetDepositFee(
  config: Omit<
    UsePrepareContractWriteConfig<typeof gmxPositionRouterABI, 'setDepositFee'>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof gmxPositionRouterAddress } = {} as any,
) {
  return usePrepareContractWrite({
    abi: gmxPositionRouterABI,
    address: gmxPositionRouterAddress[42161],
    functionName: 'setDepositFee',
    ...config,
  } as UsePrepareContractWriteConfig<typeof gmxPositionRouterABI, 'setDepositFee'>)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link gmxPositionRouterABI}__ and `functionName` set to `"setGov"`.
 *
 * [__View Contract on Arbitrum One Arbiscan__](https://arbiscan.io/address/0xb87a436B93fFE9D75c5cFA7bAcFff96430b09868)
 */
export function usePrepareGmxPositionRouterSetGov(
  config: Omit<
    UsePrepareContractWriteConfig<typeof gmxPositionRouterABI, 'setGov'>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof gmxPositionRouterAddress } = {} as any,
) {
  return usePrepareContractWrite({
    abi: gmxPositionRouterABI,
    address: gmxPositionRouterAddress[42161],
    functionName: 'setGov',
    ...config,
  } as UsePrepareContractWriteConfig<typeof gmxPositionRouterABI, 'setGov'>)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link gmxPositionRouterABI}__ and `functionName` set to `"setIncreasePositionBufferBps"`.
 *
 * [__View Contract on Arbitrum One Arbiscan__](https://arbiscan.io/address/0xb87a436B93fFE9D75c5cFA7bAcFff96430b09868)
 */
export function usePrepareGmxPositionRouterSetIncreasePositionBufferBps(
  config: Omit<
    UsePrepareContractWriteConfig<typeof gmxPositionRouterABI, 'setIncreasePositionBufferBps'>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof gmxPositionRouterAddress } = {} as any,
) {
  return usePrepareContractWrite({
    abi: gmxPositionRouterABI,
    address: gmxPositionRouterAddress[42161],
    functionName: 'setIncreasePositionBufferBps',
    ...config,
  } as UsePrepareContractWriteConfig<typeof gmxPositionRouterABI, 'setIncreasePositionBufferBps'>)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link gmxPositionRouterABI}__ and `functionName` set to `"setIsLeverageEnabled"`.
 *
 * [__View Contract on Arbitrum One Arbiscan__](https://arbiscan.io/address/0xb87a436B93fFE9D75c5cFA7bAcFff96430b09868)
 */
export function usePrepareGmxPositionRouterSetIsLeverageEnabled(
  config: Omit<
    UsePrepareContractWriteConfig<typeof gmxPositionRouterABI, 'setIsLeverageEnabled'>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof gmxPositionRouterAddress } = {} as any,
) {
  return usePrepareContractWrite({
    abi: gmxPositionRouterABI,
    address: gmxPositionRouterAddress[42161],
    functionName: 'setIsLeverageEnabled',
    ...config,
  } as UsePrepareContractWriteConfig<typeof gmxPositionRouterABI, 'setIsLeverageEnabled'>)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link gmxPositionRouterABI}__ and `functionName` set to `"setMaxGlobalSizes"`.
 *
 * [__View Contract on Arbitrum One Arbiscan__](https://arbiscan.io/address/0xb87a436B93fFE9D75c5cFA7bAcFff96430b09868)
 */
export function usePrepareGmxPositionRouterSetMaxGlobalSizes(
  config: Omit<
    UsePrepareContractWriteConfig<typeof gmxPositionRouterABI, 'setMaxGlobalSizes'>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof gmxPositionRouterAddress } = {} as any,
) {
  return usePrepareContractWrite({
    abi: gmxPositionRouterABI,
    address: gmxPositionRouterAddress[42161],
    functionName: 'setMaxGlobalSizes',
    ...config,
  } as UsePrepareContractWriteConfig<typeof gmxPositionRouterABI, 'setMaxGlobalSizes'>)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link gmxPositionRouterABI}__ and `functionName` set to `"setMinExecutionFee"`.
 *
 * [__View Contract on Arbitrum One Arbiscan__](https://arbiscan.io/address/0xb87a436B93fFE9D75c5cFA7bAcFff96430b09868)
 */
export function usePrepareGmxPositionRouterSetMinExecutionFee(
  config: Omit<
    UsePrepareContractWriteConfig<typeof gmxPositionRouterABI, 'setMinExecutionFee'>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof gmxPositionRouterAddress } = {} as any,
) {
  return usePrepareContractWrite({
    abi: gmxPositionRouterABI,
    address: gmxPositionRouterAddress[42161],
    functionName: 'setMinExecutionFee',
    ...config,
  } as UsePrepareContractWriteConfig<typeof gmxPositionRouterABI, 'setMinExecutionFee'>)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link gmxPositionRouterABI}__ and `functionName` set to `"setPositionKeeper"`.
 *
 * [__View Contract on Arbitrum One Arbiscan__](https://arbiscan.io/address/0xb87a436B93fFE9D75c5cFA7bAcFff96430b09868)
 */
export function usePrepareGmxPositionRouterSetPositionKeeper(
  config: Omit<
    UsePrepareContractWriteConfig<typeof gmxPositionRouterABI, 'setPositionKeeper'>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof gmxPositionRouterAddress } = {} as any,
) {
  return usePrepareContractWrite({
    abi: gmxPositionRouterABI,
    address: gmxPositionRouterAddress[42161],
    functionName: 'setPositionKeeper',
    ...config,
  } as UsePrepareContractWriteConfig<typeof gmxPositionRouterABI, 'setPositionKeeper'>)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link gmxPositionRouterABI}__ and `functionName` set to `"setReferralStorage"`.
 *
 * [__View Contract on Arbitrum One Arbiscan__](https://arbiscan.io/address/0xb87a436B93fFE9D75c5cFA7bAcFff96430b09868)
 */
export function usePrepareGmxPositionRouterSetReferralStorage(
  config: Omit<
    UsePrepareContractWriteConfig<typeof gmxPositionRouterABI, 'setReferralStorage'>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof gmxPositionRouterAddress } = {} as any,
) {
  return usePrepareContractWrite({
    abi: gmxPositionRouterABI,
    address: gmxPositionRouterAddress[42161],
    functionName: 'setReferralStorage',
    ...config,
  } as UsePrepareContractWriteConfig<typeof gmxPositionRouterABI, 'setReferralStorage'>)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link gmxPositionRouterABI}__ and `functionName` set to `"setRequestKeysStartValues"`.
 *
 * [__View Contract on Arbitrum One Arbiscan__](https://arbiscan.io/address/0xb87a436B93fFE9D75c5cFA7bAcFff96430b09868)
 */
export function usePrepareGmxPositionRouterSetRequestKeysStartValues(
  config: Omit<
    UsePrepareContractWriteConfig<typeof gmxPositionRouterABI, 'setRequestKeysStartValues'>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof gmxPositionRouterAddress } = {} as any,
) {
  return usePrepareContractWrite({
    abi: gmxPositionRouterABI,
    address: gmxPositionRouterAddress[42161],
    functionName: 'setRequestKeysStartValues',
    ...config,
  } as UsePrepareContractWriteConfig<typeof gmxPositionRouterABI, 'setRequestKeysStartValues'>)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link gmxPositionRouterABI}__ and `functionName` set to `"withdrawFees"`.
 *
 * [__View Contract on Arbitrum One Arbiscan__](https://arbiscan.io/address/0xb87a436B93fFE9D75c5cFA7bAcFff96430b09868)
 */
export function usePrepareGmxPositionRouterWithdrawFees(
  config: Omit<
    UsePrepareContractWriteConfig<typeof gmxPositionRouterABI, 'withdrawFees'>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof gmxPositionRouterAddress } = {} as any,
) {
  return usePrepareContractWrite({
    abi: gmxPositionRouterABI,
    address: gmxPositionRouterAddress[42161],
    functionName: 'withdrawFees',
    ...config,
  } as UsePrepareContractWriteConfig<typeof gmxPositionRouterABI, 'withdrawFees'>)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link gmxPositionRouterABI}__.
 *
 * [__View Contract on Arbitrum One Arbiscan__](https://arbiscan.io/address/0xb87a436B93fFE9D75c5cFA7bAcFff96430b09868)
 */
export function useGmxPositionRouterEvent<TEventName extends string>(
  config: Omit<UseContractEventConfig<typeof gmxPositionRouterABI, TEventName>, 'abi' | 'address'> & {
    chainId?: keyof typeof gmxPositionRouterAddress
  } = {} as any,
) {
  return useContractEvent({
    abi: gmxPositionRouterABI,
    address: gmxPositionRouterAddress[42161],
    ...config,
  } as UseContractEventConfig<typeof gmxPositionRouterABI, TEventName>)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link gmxPositionRouterABI}__ and `eventName` set to `"Callback"`.
 *
 * [__View Contract on Arbitrum One Arbiscan__](https://arbiscan.io/address/0xb87a436B93fFE9D75c5cFA7bAcFff96430b09868)
 */
export function useGmxPositionRouterCallbackEvent(
  config: Omit<UseContractEventConfig<typeof gmxPositionRouterABI, 'Callback'>, 'abi' | 'address' | 'eventName'> & {
    chainId?: keyof typeof gmxPositionRouterAddress
  } = {} as any,
) {
  return useContractEvent({
    abi: gmxPositionRouterABI,
    address: gmxPositionRouterAddress[42161],
    eventName: 'Callback',
    ...config,
  } as UseContractEventConfig<typeof gmxPositionRouterABI, 'Callback'>)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link gmxPositionRouterABI}__ and `eventName` set to `"CancelDecreasePosition"`.
 *
 * [__View Contract on Arbitrum One Arbiscan__](https://arbiscan.io/address/0xb87a436B93fFE9D75c5cFA7bAcFff96430b09868)
 */
export function useGmxPositionRouterCancelDecreasePositionEvent(
  config: Omit<
    UseContractEventConfig<typeof gmxPositionRouterABI, 'CancelDecreasePosition'>,
    'abi' | 'address' | 'eventName'
  > & { chainId?: keyof typeof gmxPositionRouterAddress } = {} as any,
) {
  return useContractEvent({
    abi: gmxPositionRouterABI,
    address: gmxPositionRouterAddress[42161],
    eventName: 'CancelDecreasePosition',
    ...config,
  } as UseContractEventConfig<typeof gmxPositionRouterABI, 'CancelDecreasePosition'>)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link gmxPositionRouterABI}__ and `eventName` set to `"CancelIncreasePosition"`.
 *
 * [__View Contract on Arbitrum One Arbiscan__](https://arbiscan.io/address/0xb87a436B93fFE9D75c5cFA7bAcFff96430b09868)
 */
export function useGmxPositionRouterCancelIncreasePositionEvent(
  config: Omit<
    UseContractEventConfig<typeof gmxPositionRouterABI, 'CancelIncreasePosition'>,
    'abi' | 'address' | 'eventName'
  > & { chainId?: keyof typeof gmxPositionRouterAddress } = {} as any,
) {
  return useContractEvent({
    abi: gmxPositionRouterABI,
    address: gmxPositionRouterAddress[42161],
    eventName: 'CancelIncreasePosition',
    ...config,
  } as UseContractEventConfig<typeof gmxPositionRouterABI, 'CancelIncreasePosition'>)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link gmxPositionRouterABI}__ and `eventName` set to `"CreateDecreasePosition"`.
 *
 * [__View Contract on Arbitrum One Arbiscan__](https://arbiscan.io/address/0xb87a436B93fFE9D75c5cFA7bAcFff96430b09868)
 */
export function useGmxPositionRouterCreateDecreasePositionEvent(
  config: Omit<
    UseContractEventConfig<typeof gmxPositionRouterABI, 'CreateDecreasePosition'>,
    'abi' | 'address' | 'eventName'
  > & { chainId?: keyof typeof gmxPositionRouterAddress } = {} as any,
) {
  return useContractEvent({
    abi: gmxPositionRouterABI,
    address: gmxPositionRouterAddress[42161],
    eventName: 'CreateDecreasePosition',
    ...config,
  } as UseContractEventConfig<typeof gmxPositionRouterABI, 'CreateDecreasePosition'>)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link gmxPositionRouterABI}__ and `eventName` set to `"CreateIncreasePosition"`.
 *
 * [__View Contract on Arbitrum One Arbiscan__](https://arbiscan.io/address/0xb87a436B93fFE9D75c5cFA7bAcFff96430b09868)
 */
export function useGmxPositionRouterCreateIncreasePositionEvent(
  config: Omit<
    UseContractEventConfig<typeof gmxPositionRouterABI, 'CreateIncreasePosition'>,
    'abi' | 'address' | 'eventName'
  > & { chainId?: keyof typeof gmxPositionRouterAddress } = {} as any,
) {
  return useContractEvent({
    abi: gmxPositionRouterABI,
    address: gmxPositionRouterAddress[42161],
    eventName: 'CreateIncreasePosition',
    ...config,
  } as UseContractEventConfig<typeof gmxPositionRouterABI, 'CreateIncreasePosition'>)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link gmxPositionRouterABI}__ and `eventName` set to `"DecreasePositionReferral"`.
 *
 * [__View Contract on Arbitrum One Arbiscan__](https://arbiscan.io/address/0xb87a436B93fFE9D75c5cFA7bAcFff96430b09868)
 */
export function useGmxPositionRouterDecreasePositionReferralEvent(
  config: Omit<
    UseContractEventConfig<typeof gmxPositionRouterABI, 'DecreasePositionReferral'>,
    'abi' | 'address' | 'eventName'
  > & { chainId?: keyof typeof gmxPositionRouterAddress } = {} as any,
) {
  return useContractEvent({
    abi: gmxPositionRouterABI,
    address: gmxPositionRouterAddress[42161],
    eventName: 'DecreasePositionReferral',
    ...config,
  } as UseContractEventConfig<typeof gmxPositionRouterABI, 'DecreasePositionReferral'>)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link gmxPositionRouterABI}__ and `eventName` set to `"ExecuteDecreasePosition"`.
 *
 * [__View Contract on Arbitrum One Arbiscan__](https://arbiscan.io/address/0xb87a436B93fFE9D75c5cFA7bAcFff96430b09868)
 */
export function useGmxPositionRouterExecuteDecreasePositionEvent(
  config: Omit<
    UseContractEventConfig<typeof gmxPositionRouterABI, 'ExecuteDecreasePosition'>,
    'abi' | 'address' | 'eventName'
  > & { chainId?: keyof typeof gmxPositionRouterAddress } = {} as any,
) {
  return useContractEvent({
    abi: gmxPositionRouterABI,
    address: gmxPositionRouterAddress[42161],
    eventName: 'ExecuteDecreasePosition',
    ...config,
  } as UseContractEventConfig<typeof gmxPositionRouterABI, 'ExecuteDecreasePosition'>)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link gmxPositionRouterABI}__ and `eventName` set to `"ExecuteIncreasePosition"`.
 *
 * [__View Contract on Arbitrum One Arbiscan__](https://arbiscan.io/address/0xb87a436B93fFE9D75c5cFA7bAcFff96430b09868)
 */
export function useGmxPositionRouterExecuteIncreasePositionEvent(
  config: Omit<
    UseContractEventConfig<typeof gmxPositionRouterABI, 'ExecuteIncreasePosition'>,
    'abi' | 'address' | 'eventName'
  > & { chainId?: keyof typeof gmxPositionRouterAddress } = {} as any,
) {
  return useContractEvent({
    abi: gmxPositionRouterABI,
    address: gmxPositionRouterAddress[42161],
    eventName: 'ExecuteIncreasePosition',
    ...config,
  } as UseContractEventConfig<typeof gmxPositionRouterABI, 'ExecuteIncreasePosition'>)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link gmxPositionRouterABI}__ and `eventName` set to `"IncreasePositionReferral"`.
 *
 * [__View Contract on Arbitrum One Arbiscan__](https://arbiscan.io/address/0xb87a436B93fFE9D75c5cFA7bAcFff96430b09868)
 */
export function useGmxPositionRouterIncreasePositionReferralEvent(
  config: Omit<
    UseContractEventConfig<typeof gmxPositionRouterABI, 'IncreasePositionReferral'>,
    'abi' | 'address' | 'eventName'
  > & { chainId?: keyof typeof gmxPositionRouterAddress } = {} as any,
) {
  return useContractEvent({
    abi: gmxPositionRouterABI,
    address: gmxPositionRouterAddress[42161],
    eventName: 'IncreasePositionReferral',
    ...config,
  } as UseContractEventConfig<typeof gmxPositionRouterABI, 'IncreasePositionReferral'>)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link gmxPositionRouterABI}__ and `eventName` set to `"SetAdmin"`.
 *
 * [__View Contract on Arbitrum One Arbiscan__](https://arbiscan.io/address/0xb87a436B93fFE9D75c5cFA7bAcFff96430b09868)
 */
export function useGmxPositionRouterSetAdminEvent(
  config: Omit<UseContractEventConfig<typeof gmxPositionRouterABI, 'SetAdmin'>, 'abi' | 'address' | 'eventName'> & {
    chainId?: keyof typeof gmxPositionRouterAddress
  } = {} as any,
) {
  return useContractEvent({
    abi: gmxPositionRouterABI,
    address: gmxPositionRouterAddress[42161],
    eventName: 'SetAdmin',
    ...config,
  } as UseContractEventConfig<typeof gmxPositionRouterABI, 'SetAdmin'>)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link gmxPositionRouterABI}__ and `eventName` set to `"SetCallbackGasLimit"`.
 *
 * [__View Contract on Arbitrum One Arbiscan__](https://arbiscan.io/address/0xb87a436B93fFE9D75c5cFA7bAcFff96430b09868)
 */
export function useGmxPositionRouterSetCallbackGasLimitEvent(
  config: Omit<
    UseContractEventConfig<typeof gmxPositionRouterABI, 'SetCallbackGasLimit'>,
    'abi' | 'address' | 'eventName'
  > & { chainId?: keyof typeof gmxPositionRouterAddress } = {} as any,
) {
  return useContractEvent({
    abi: gmxPositionRouterABI,
    address: gmxPositionRouterAddress[42161],
    eventName: 'SetCallbackGasLimit',
    ...config,
  } as UseContractEventConfig<typeof gmxPositionRouterABI, 'SetCallbackGasLimit'>)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link gmxPositionRouterABI}__ and `eventName` set to `"SetDelayValues"`.
 *
 * [__View Contract on Arbitrum One Arbiscan__](https://arbiscan.io/address/0xb87a436B93fFE9D75c5cFA7bAcFff96430b09868)
 */
export function useGmxPositionRouterSetDelayValuesEvent(
  config: Omit<
    UseContractEventConfig<typeof gmxPositionRouterABI, 'SetDelayValues'>,
    'abi' | 'address' | 'eventName'
  > & { chainId?: keyof typeof gmxPositionRouterAddress } = {} as any,
) {
  return useContractEvent({
    abi: gmxPositionRouterABI,
    address: gmxPositionRouterAddress[42161],
    eventName: 'SetDelayValues',
    ...config,
  } as UseContractEventConfig<typeof gmxPositionRouterABI, 'SetDelayValues'>)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link gmxPositionRouterABI}__ and `eventName` set to `"SetDepositFee"`.
 *
 * [__View Contract on Arbitrum One Arbiscan__](https://arbiscan.io/address/0xb87a436B93fFE9D75c5cFA7bAcFff96430b09868)
 */
export function useGmxPositionRouterSetDepositFeeEvent(
  config: Omit<
    UseContractEventConfig<typeof gmxPositionRouterABI, 'SetDepositFee'>,
    'abi' | 'address' | 'eventName'
  > & { chainId?: keyof typeof gmxPositionRouterAddress } = {} as any,
) {
  return useContractEvent({
    abi: gmxPositionRouterABI,
    address: gmxPositionRouterAddress[42161],
    eventName: 'SetDepositFee',
    ...config,
  } as UseContractEventConfig<typeof gmxPositionRouterABI, 'SetDepositFee'>)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link gmxPositionRouterABI}__ and `eventName` set to `"SetIncreasePositionBufferBps"`.
 *
 * [__View Contract on Arbitrum One Arbiscan__](https://arbiscan.io/address/0xb87a436B93fFE9D75c5cFA7bAcFff96430b09868)
 */
export function useGmxPositionRouterSetIncreasePositionBufferBpsEvent(
  config: Omit<
    UseContractEventConfig<typeof gmxPositionRouterABI, 'SetIncreasePositionBufferBps'>,
    'abi' | 'address' | 'eventName'
  > & { chainId?: keyof typeof gmxPositionRouterAddress } = {} as any,
) {
  return useContractEvent({
    abi: gmxPositionRouterABI,
    address: gmxPositionRouterAddress[42161],
    eventName: 'SetIncreasePositionBufferBps',
    ...config,
  } as UseContractEventConfig<typeof gmxPositionRouterABI, 'SetIncreasePositionBufferBps'>)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link gmxPositionRouterABI}__ and `eventName` set to `"SetIsLeverageEnabled"`.
 *
 * [__View Contract on Arbitrum One Arbiscan__](https://arbiscan.io/address/0xb87a436B93fFE9D75c5cFA7bAcFff96430b09868)
 */
export function useGmxPositionRouterSetIsLeverageEnabledEvent(
  config: Omit<
    UseContractEventConfig<typeof gmxPositionRouterABI, 'SetIsLeverageEnabled'>,
    'abi' | 'address' | 'eventName'
  > & { chainId?: keyof typeof gmxPositionRouterAddress } = {} as any,
) {
  return useContractEvent({
    abi: gmxPositionRouterABI,
    address: gmxPositionRouterAddress[42161],
    eventName: 'SetIsLeverageEnabled',
    ...config,
  } as UseContractEventConfig<typeof gmxPositionRouterABI, 'SetIsLeverageEnabled'>)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link gmxPositionRouterABI}__ and `eventName` set to `"SetMaxGlobalSizes"`.
 *
 * [__View Contract on Arbitrum One Arbiscan__](https://arbiscan.io/address/0xb87a436B93fFE9D75c5cFA7bAcFff96430b09868)
 */
export function useGmxPositionRouterSetMaxGlobalSizesEvent(
  config: Omit<
    UseContractEventConfig<typeof gmxPositionRouterABI, 'SetMaxGlobalSizes'>,
    'abi' | 'address' | 'eventName'
  > & { chainId?: keyof typeof gmxPositionRouterAddress } = {} as any,
) {
  return useContractEvent({
    abi: gmxPositionRouterABI,
    address: gmxPositionRouterAddress[42161],
    eventName: 'SetMaxGlobalSizes',
    ...config,
  } as UseContractEventConfig<typeof gmxPositionRouterABI, 'SetMaxGlobalSizes'>)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link gmxPositionRouterABI}__ and `eventName` set to `"SetMinExecutionFee"`.
 *
 * [__View Contract on Arbitrum One Arbiscan__](https://arbiscan.io/address/0xb87a436B93fFE9D75c5cFA7bAcFff96430b09868)
 */
export function useGmxPositionRouterSetMinExecutionFeeEvent(
  config: Omit<
    UseContractEventConfig<typeof gmxPositionRouterABI, 'SetMinExecutionFee'>,
    'abi' | 'address' | 'eventName'
  > & { chainId?: keyof typeof gmxPositionRouterAddress } = {} as any,
) {
  return useContractEvent({
    abi: gmxPositionRouterABI,
    address: gmxPositionRouterAddress[42161],
    eventName: 'SetMinExecutionFee',
    ...config,
  } as UseContractEventConfig<typeof gmxPositionRouterABI, 'SetMinExecutionFee'>)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link gmxPositionRouterABI}__ and `eventName` set to `"SetPositionKeeper"`.
 *
 * [__View Contract on Arbitrum One Arbiscan__](https://arbiscan.io/address/0xb87a436B93fFE9D75c5cFA7bAcFff96430b09868)
 */
export function useGmxPositionRouterSetPositionKeeperEvent(
  config: Omit<
    UseContractEventConfig<typeof gmxPositionRouterABI, 'SetPositionKeeper'>,
    'abi' | 'address' | 'eventName'
  > & { chainId?: keyof typeof gmxPositionRouterAddress } = {} as any,
) {
  return useContractEvent({
    abi: gmxPositionRouterABI,
    address: gmxPositionRouterAddress[42161],
    eventName: 'SetPositionKeeper',
    ...config,
  } as UseContractEventConfig<typeof gmxPositionRouterABI, 'SetPositionKeeper'>)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link gmxPositionRouterABI}__ and `eventName` set to `"SetReferralStorage"`.
 *
 * [__View Contract on Arbitrum One Arbiscan__](https://arbiscan.io/address/0xb87a436B93fFE9D75c5cFA7bAcFff96430b09868)
 */
export function useGmxPositionRouterSetReferralStorageEvent(
  config: Omit<
    UseContractEventConfig<typeof gmxPositionRouterABI, 'SetReferralStorage'>,
    'abi' | 'address' | 'eventName'
  > & { chainId?: keyof typeof gmxPositionRouterAddress } = {} as any,
) {
  return useContractEvent({
    abi: gmxPositionRouterABI,
    address: gmxPositionRouterAddress[42161],
    eventName: 'SetReferralStorage',
    ...config,
  } as UseContractEventConfig<typeof gmxPositionRouterABI, 'SetReferralStorage'>)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link gmxPositionRouterABI}__ and `eventName` set to `"SetRequestKeysStartValues"`.
 *
 * [__View Contract on Arbitrum One Arbiscan__](https://arbiscan.io/address/0xb87a436B93fFE9D75c5cFA7bAcFff96430b09868)
 */
export function useGmxPositionRouterSetRequestKeysStartValuesEvent(
  config: Omit<
    UseContractEventConfig<typeof gmxPositionRouterABI, 'SetRequestKeysStartValues'>,
    'abi' | 'address' | 'eventName'
  > & { chainId?: keyof typeof gmxPositionRouterAddress } = {} as any,
) {
  return useContractEvent({
    abi: gmxPositionRouterABI,
    address: gmxPositionRouterAddress[42161],
    eventName: 'SetRequestKeysStartValues',
    ...config,
  } as UseContractEventConfig<typeof gmxPositionRouterABI, 'SetRequestKeysStartValues'>)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link gmxPositionRouterABI}__ and `eventName` set to `"WithdrawFees"`.
 *
 * [__View Contract on Arbitrum One Arbiscan__](https://arbiscan.io/address/0xb87a436B93fFE9D75c5cFA7bAcFff96430b09868)
 */
export function useGmxPositionRouterWithdrawFeesEvent(
  config: Omit<UseContractEventConfig<typeof gmxPositionRouterABI, 'WithdrawFees'>, 'abi' | 'address' | 'eventName'> & {
    chainId?: keyof typeof gmxPositionRouterAddress
  } = {} as any,
) {
  return useContractEvent({
    abi: gmxPositionRouterABI,
    address: gmxPositionRouterAddress[42161],
    eventName: 'WithdrawFees',
    ...config,
  } as UseContractEventConfig<typeof gmxPositionRouterABI, 'WithdrawFees'>)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link gmxRouterABI}__.
 *
 * [__View Contract on Arbitrum One Arbiscan__](https://arbiscan.io/address/0xaBBc5F99639c9B6bCb58544ddf04EFA6802F4064)
 */
export function useGmxRouterRead<
  TFunctionName extends string,
  TSelectData = ReadContractResult<typeof gmxRouterABI, TFunctionName>,
>(
  config: Omit<UseContractReadConfig<typeof gmxRouterABI, TFunctionName, TSelectData>, 'abi' | 'address'> & {
    chainId?: keyof typeof gmxRouterAddress
  } = {} as any,
) {
  return useContractRead({ abi: gmxRouterABI, address: gmxRouterAddress[42161], ...config } as UseContractReadConfig<
    typeof gmxRouterABI,
    TFunctionName,
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link gmxRouterABI}__ and `functionName` set to `"approvedPlugins"`.
 *
 * [__View Contract on Arbitrum One Arbiscan__](https://arbiscan.io/address/0xaBBc5F99639c9B6bCb58544ddf04EFA6802F4064)
 */
export function useGmxRouterApprovedPlugins<
  TFunctionName extends 'approvedPlugins',
  TSelectData = ReadContractResult<typeof gmxRouterABI, TFunctionName>,
>(
  config: Omit<
    UseContractReadConfig<typeof gmxRouterABI, TFunctionName, TSelectData>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof gmxRouterAddress } = {} as any,
) {
  return useContractRead({
    abi: gmxRouterABI,
    address: gmxRouterAddress[42161],
    functionName: 'approvedPlugins',
    ...config,
  } as UseContractReadConfig<typeof gmxRouterABI, TFunctionName, TSelectData>)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link gmxRouterABI}__ and `functionName` set to `"gov"`.
 *
 * [__View Contract on Arbitrum One Arbiscan__](https://arbiscan.io/address/0xaBBc5F99639c9B6bCb58544ddf04EFA6802F4064)
 */
export function useGmxRouterGov<
  TFunctionName extends 'gov',
  TSelectData = ReadContractResult<typeof gmxRouterABI, TFunctionName>,
>(
  config: Omit<
    UseContractReadConfig<typeof gmxRouterABI, TFunctionName, TSelectData>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof gmxRouterAddress } = {} as any,
) {
  return useContractRead({
    abi: gmxRouterABI,
    address: gmxRouterAddress[42161],
    functionName: 'gov',
    ...config,
  } as UseContractReadConfig<typeof gmxRouterABI, TFunctionName, TSelectData>)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link gmxRouterABI}__ and `functionName` set to `"plugins"`.
 *
 * [__View Contract on Arbitrum One Arbiscan__](https://arbiscan.io/address/0xaBBc5F99639c9B6bCb58544ddf04EFA6802F4064)
 */
export function useGmxRouterPlugins<
  TFunctionName extends 'plugins',
  TSelectData = ReadContractResult<typeof gmxRouterABI, TFunctionName>,
>(
  config: Omit<
    UseContractReadConfig<typeof gmxRouterABI, TFunctionName, TSelectData>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof gmxRouterAddress } = {} as any,
) {
  return useContractRead({
    abi: gmxRouterABI,
    address: gmxRouterAddress[42161],
    functionName: 'plugins',
    ...config,
  } as UseContractReadConfig<typeof gmxRouterABI, TFunctionName, TSelectData>)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link gmxRouterABI}__ and `functionName` set to `"usdg"`.
 *
 * [__View Contract on Arbitrum One Arbiscan__](https://arbiscan.io/address/0xaBBc5F99639c9B6bCb58544ddf04EFA6802F4064)
 */
export function useGmxRouterUsdg<
  TFunctionName extends 'usdg',
  TSelectData = ReadContractResult<typeof gmxRouterABI, TFunctionName>,
>(
  config: Omit<
    UseContractReadConfig<typeof gmxRouterABI, TFunctionName, TSelectData>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof gmxRouterAddress } = {} as any,
) {
  return useContractRead({
    abi: gmxRouterABI,
    address: gmxRouterAddress[42161],
    functionName: 'usdg',
    ...config,
  } as UseContractReadConfig<typeof gmxRouterABI, TFunctionName, TSelectData>)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link gmxRouterABI}__ and `functionName` set to `"vault"`.
 *
 * [__View Contract on Arbitrum One Arbiscan__](https://arbiscan.io/address/0xaBBc5F99639c9B6bCb58544ddf04EFA6802F4064)
 */
export function useGmxRouterVault<
  TFunctionName extends 'vault',
  TSelectData = ReadContractResult<typeof gmxRouterABI, TFunctionName>,
>(
  config: Omit<
    UseContractReadConfig<typeof gmxRouterABI, TFunctionName, TSelectData>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof gmxRouterAddress } = {} as any,
) {
  return useContractRead({
    abi: gmxRouterABI,
    address: gmxRouterAddress[42161],
    functionName: 'vault',
    ...config,
  } as UseContractReadConfig<typeof gmxRouterABI, TFunctionName, TSelectData>)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link gmxRouterABI}__ and `functionName` set to `"weth"`.
 *
 * [__View Contract on Arbitrum One Arbiscan__](https://arbiscan.io/address/0xaBBc5F99639c9B6bCb58544ddf04EFA6802F4064)
 */
export function useGmxRouterWeth<
  TFunctionName extends 'weth',
  TSelectData = ReadContractResult<typeof gmxRouterABI, TFunctionName>,
>(
  config: Omit<
    UseContractReadConfig<typeof gmxRouterABI, TFunctionName, TSelectData>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof gmxRouterAddress } = {} as any,
) {
  return useContractRead({
    abi: gmxRouterABI,
    address: gmxRouterAddress[42161],
    functionName: 'weth',
    ...config,
  } as UseContractReadConfig<typeof gmxRouterABI, TFunctionName, TSelectData>)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link gmxRouterABI}__.
 *
 * [__View Contract on Arbitrum One Arbiscan__](https://arbiscan.io/address/0xaBBc5F99639c9B6bCb58544ddf04EFA6802F4064)
 */
export function useGmxRouterWrite<
  TFunctionName extends string,
  TMode extends WriteContractMode = undefined,
  TChainId extends number = keyof typeof gmxRouterAddress,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        PrepareWriteContractResult<typeof gmxRouterABI, string>['request']['abi'],
        TFunctionName,
        TMode
      > & { address?: Address; chainId?: TChainId }
    : UseContractWriteConfig<typeof gmxRouterABI, TFunctionName, TMode> & {
        abi?: never
        address?: never
        chainId?: TChainId
      } = {} as any,
) {
  return useContractWrite<typeof gmxRouterABI, TFunctionName, TMode>({
    abi: gmxRouterABI,
    address: gmxRouterAddress[42161],
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link gmxRouterABI}__ and `functionName` set to `"addPlugin"`.
 *
 * [__View Contract on Arbitrum One Arbiscan__](https://arbiscan.io/address/0xaBBc5F99639c9B6bCb58544ddf04EFA6802F4064)
 */
export function useGmxRouterAddPlugin<
  TMode extends WriteContractMode = undefined,
  TChainId extends number = keyof typeof gmxRouterAddress,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        PrepareWriteContractResult<typeof gmxRouterABI, 'addPlugin'>['request']['abi'],
        'addPlugin',
        TMode
      > & { address?: Address; chainId?: TChainId; functionName?: 'addPlugin' }
    : UseContractWriteConfig<typeof gmxRouterABI, 'addPlugin', TMode> & {
        abi?: never
        address?: never
        chainId?: TChainId
        functionName?: 'addPlugin'
      } = {} as any,
) {
  return useContractWrite<typeof gmxRouterABI, 'addPlugin', TMode>({
    abi: gmxRouterABI,
    address: gmxRouterAddress[42161],
    functionName: 'addPlugin',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link gmxRouterABI}__ and `functionName` set to `"approvePlugin"`.
 *
 * [__View Contract on Arbitrum One Arbiscan__](https://arbiscan.io/address/0xaBBc5F99639c9B6bCb58544ddf04EFA6802F4064)
 */
export function useGmxRouterApprovePlugin<
  TMode extends WriteContractMode = undefined,
  TChainId extends number = keyof typeof gmxRouterAddress,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        PrepareWriteContractResult<typeof gmxRouterABI, 'approvePlugin'>['request']['abi'],
        'approvePlugin',
        TMode
      > & { address?: Address; chainId?: TChainId; functionName?: 'approvePlugin' }
    : UseContractWriteConfig<typeof gmxRouterABI, 'approvePlugin', TMode> & {
        abi?: never
        address?: never
        chainId?: TChainId
        functionName?: 'approvePlugin'
      } = {} as any,
) {
  return useContractWrite<typeof gmxRouterABI, 'approvePlugin', TMode>({
    abi: gmxRouterABI,
    address: gmxRouterAddress[42161],
    functionName: 'approvePlugin',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link gmxRouterABI}__ and `functionName` set to `"decreasePosition"`.
 *
 * [__View Contract on Arbitrum One Arbiscan__](https://arbiscan.io/address/0xaBBc5F99639c9B6bCb58544ddf04EFA6802F4064)
 */
export function useGmxRouterDecreasePosition<
  TMode extends WriteContractMode = undefined,
  TChainId extends number = keyof typeof gmxRouterAddress,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        PrepareWriteContractResult<typeof gmxRouterABI, 'decreasePosition'>['request']['abi'],
        'decreasePosition',
        TMode
      > & { address?: Address; chainId?: TChainId; functionName?: 'decreasePosition' }
    : UseContractWriteConfig<typeof gmxRouterABI, 'decreasePosition', TMode> & {
        abi?: never
        address?: never
        chainId?: TChainId
        functionName?: 'decreasePosition'
      } = {} as any,
) {
  return useContractWrite<typeof gmxRouterABI, 'decreasePosition', TMode>({
    abi: gmxRouterABI,
    address: gmxRouterAddress[42161],
    functionName: 'decreasePosition',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link gmxRouterABI}__ and `functionName` set to `"decreasePositionAndSwap"`.
 *
 * [__View Contract on Arbitrum One Arbiscan__](https://arbiscan.io/address/0xaBBc5F99639c9B6bCb58544ddf04EFA6802F4064)
 */
export function useGmxRouterDecreasePositionAndSwap<
  TMode extends WriteContractMode = undefined,
  TChainId extends number = keyof typeof gmxRouterAddress,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        PrepareWriteContractResult<typeof gmxRouterABI, 'decreasePositionAndSwap'>['request']['abi'],
        'decreasePositionAndSwap',
        TMode
      > & { address?: Address; chainId?: TChainId; functionName?: 'decreasePositionAndSwap' }
    : UseContractWriteConfig<typeof gmxRouterABI, 'decreasePositionAndSwap', TMode> & {
        abi?: never
        address?: never
        chainId?: TChainId
        functionName?: 'decreasePositionAndSwap'
      } = {} as any,
) {
  return useContractWrite<typeof gmxRouterABI, 'decreasePositionAndSwap', TMode>({
    abi: gmxRouterABI,
    address: gmxRouterAddress[42161],
    functionName: 'decreasePositionAndSwap',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link gmxRouterABI}__ and `functionName` set to `"decreasePositionAndSwapETH"`.
 *
 * [__View Contract on Arbitrum One Arbiscan__](https://arbiscan.io/address/0xaBBc5F99639c9B6bCb58544ddf04EFA6802F4064)
 */
export function useGmxRouterDecreasePositionAndSwapEth<
  TMode extends WriteContractMode = undefined,
  TChainId extends number = keyof typeof gmxRouterAddress,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        PrepareWriteContractResult<typeof gmxRouterABI, 'decreasePositionAndSwapETH'>['request']['abi'],
        'decreasePositionAndSwapETH',
        TMode
      > & { address?: Address; chainId?: TChainId; functionName?: 'decreasePositionAndSwapETH' }
    : UseContractWriteConfig<typeof gmxRouterABI, 'decreasePositionAndSwapETH', TMode> & {
        abi?: never
        address?: never
        chainId?: TChainId
        functionName?: 'decreasePositionAndSwapETH'
      } = {} as any,
) {
  return useContractWrite<typeof gmxRouterABI, 'decreasePositionAndSwapETH', TMode>({
    abi: gmxRouterABI,
    address: gmxRouterAddress[42161],
    functionName: 'decreasePositionAndSwapETH',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link gmxRouterABI}__ and `functionName` set to `"decreasePositionETH"`.
 *
 * [__View Contract on Arbitrum One Arbiscan__](https://arbiscan.io/address/0xaBBc5F99639c9B6bCb58544ddf04EFA6802F4064)
 */
export function useGmxRouterDecreasePositionEth<
  TMode extends WriteContractMode = undefined,
  TChainId extends number = keyof typeof gmxRouterAddress,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        PrepareWriteContractResult<typeof gmxRouterABI, 'decreasePositionETH'>['request']['abi'],
        'decreasePositionETH',
        TMode
      > & { address?: Address; chainId?: TChainId; functionName?: 'decreasePositionETH' }
    : UseContractWriteConfig<typeof gmxRouterABI, 'decreasePositionETH', TMode> & {
        abi?: never
        address?: never
        chainId?: TChainId
        functionName?: 'decreasePositionETH'
      } = {} as any,
) {
  return useContractWrite<typeof gmxRouterABI, 'decreasePositionETH', TMode>({
    abi: gmxRouterABI,
    address: gmxRouterAddress[42161],
    functionName: 'decreasePositionETH',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link gmxRouterABI}__ and `functionName` set to `"denyPlugin"`.
 *
 * [__View Contract on Arbitrum One Arbiscan__](https://arbiscan.io/address/0xaBBc5F99639c9B6bCb58544ddf04EFA6802F4064)
 */
export function useGmxRouterDenyPlugin<
  TMode extends WriteContractMode = undefined,
  TChainId extends number = keyof typeof gmxRouterAddress,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        PrepareWriteContractResult<typeof gmxRouterABI, 'denyPlugin'>['request']['abi'],
        'denyPlugin',
        TMode
      > & { address?: Address; chainId?: TChainId; functionName?: 'denyPlugin' }
    : UseContractWriteConfig<typeof gmxRouterABI, 'denyPlugin', TMode> & {
        abi?: never
        address?: never
        chainId?: TChainId
        functionName?: 'denyPlugin'
      } = {} as any,
) {
  return useContractWrite<typeof gmxRouterABI, 'denyPlugin', TMode>({
    abi: gmxRouterABI,
    address: gmxRouterAddress[42161],
    functionName: 'denyPlugin',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link gmxRouterABI}__ and `functionName` set to `"directPoolDeposit"`.
 *
 * [__View Contract on Arbitrum One Arbiscan__](https://arbiscan.io/address/0xaBBc5F99639c9B6bCb58544ddf04EFA6802F4064)
 */
export function useGmxRouterDirectPoolDeposit<
  TMode extends WriteContractMode = undefined,
  TChainId extends number = keyof typeof gmxRouterAddress,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        PrepareWriteContractResult<typeof gmxRouterABI, 'directPoolDeposit'>['request']['abi'],
        'directPoolDeposit',
        TMode
      > & { address?: Address; chainId?: TChainId; functionName?: 'directPoolDeposit' }
    : UseContractWriteConfig<typeof gmxRouterABI, 'directPoolDeposit', TMode> & {
        abi?: never
        address?: never
        chainId?: TChainId
        functionName?: 'directPoolDeposit'
      } = {} as any,
) {
  return useContractWrite<typeof gmxRouterABI, 'directPoolDeposit', TMode>({
    abi: gmxRouterABI,
    address: gmxRouterAddress[42161],
    functionName: 'directPoolDeposit',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link gmxRouterABI}__ and `functionName` set to `"increasePosition"`.
 *
 * [__View Contract on Arbitrum One Arbiscan__](https://arbiscan.io/address/0xaBBc5F99639c9B6bCb58544ddf04EFA6802F4064)
 */
export function useGmxRouterIncreasePosition<
  TMode extends WriteContractMode = undefined,
  TChainId extends number = keyof typeof gmxRouterAddress,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        PrepareWriteContractResult<typeof gmxRouterABI, 'increasePosition'>['request']['abi'],
        'increasePosition',
        TMode
      > & { address?: Address; chainId?: TChainId; functionName?: 'increasePosition' }
    : UseContractWriteConfig<typeof gmxRouterABI, 'increasePosition', TMode> & {
        abi?: never
        address?: never
        chainId?: TChainId
        functionName?: 'increasePosition'
      } = {} as any,
) {
  return useContractWrite<typeof gmxRouterABI, 'increasePosition', TMode>({
    abi: gmxRouterABI,
    address: gmxRouterAddress[42161],
    functionName: 'increasePosition',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link gmxRouterABI}__ and `functionName` set to `"increasePositionETH"`.
 *
 * [__View Contract on Arbitrum One Arbiscan__](https://arbiscan.io/address/0xaBBc5F99639c9B6bCb58544ddf04EFA6802F4064)
 */
export function useGmxRouterIncreasePositionEth<
  TMode extends WriteContractMode = undefined,
  TChainId extends number = keyof typeof gmxRouterAddress,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        PrepareWriteContractResult<typeof gmxRouterABI, 'increasePositionETH'>['request']['abi'],
        'increasePositionETH',
        TMode
      > & { address?: Address; chainId?: TChainId; functionName?: 'increasePositionETH' }
    : UseContractWriteConfig<typeof gmxRouterABI, 'increasePositionETH', TMode> & {
        abi?: never
        address?: never
        chainId?: TChainId
        functionName?: 'increasePositionETH'
      } = {} as any,
) {
  return useContractWrite<typeof gmxRouterABI, 'increasePositionETH', TMode>({
    abi: gmxRouterABI,
    address: gmxRouterAddress[42161],
    functionName: 'increasePositionETH',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link gmxRouterABI}__ and `functionName` set to `"pluginDecreasePosition"`.
 *
 * [__View Contract on Arbitrum One Arbiscan__](https://arbiscan.io/address/0xaBBc5F99639c9B6bCb58544ddf04EFA6802F4064)
 */
export function useGmxRouterPluginDecreasePosition<
  TMode extends WriteContractMode = undefined,
  TChainId extends number = keyof typeof gmxRouterAddress,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        PrepareWriteContractResult<typeof gmxRouterABI, 'pluginDecreasePosition'>['request']['abi'],
        'pluginDecreasePosition',
        TMode
      > & { address?: Address; chainId?: TChainId; functionName?: 'pluginDecreasePosition' }
    : UseContractWriteConfig<typeof gmxRouterABI, 'pluginDecreasePosition', TMode> & {
        abi?: never
        address?: never
        chainId?: TChainId
        functionName?: 'pluginDecreasePosition'
      } = {} as any,
) {
  return useContractWrite<typeof gmxRouterABI, 'pluginDecreasePosition', TMode>({
    abi: gmxRouterABI,
    address: gmxRouterAddress[42161],
    functionName: 'pluginDecreasePosition',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link gmxRouterABI}__ and `functionName` set to `"pluginIncreasePosition"`.
 *
 * [__View Contract on Arbitrum One Arbiscan__](https://arbiscan.io/address/0xaBBc5F99639c9B6bCb58544ddf04EFA6802F4064)
 */
export function useGmxRouterPluginIncreasePosition<
  TMode extends WriteContractMode = undefined,
  TChainId extends number = keyof typeof gmxRouterAddress,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        PrepareWriteContractResult<typeof gmxRouterABI, 'pluginIncreasePosition'>['request']['abi'],
        'pluginIncreasePosition',
        TMode
      > & { address?: Address; chainId?: TChainId; functionName?: 'pluginIncreasePosition' }
    : UseContractWriteConfig<typeof gmxRouterABI, 'pluginIncreasePosition', TMode> & {
        abi?: never
        address?: never
        chainId?: TChainId
        functionName?: 'pluginIncreasePosition'
      } = {} as any,
) {
  return useContractWrite<typeof gmxRouterABI, 'pluginIncreasePosition', TMode>({
    abi: gmxRouterABI,
    address: gmxRouterAddress[42161],
    functionName: 'pluginIncreasePosition',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link gmxRouterABI}__ and `functionName` set to `"pluginTransfer"`.
 *
 * [__View Contract on Arbitrum One Arbiscan__](https://arbiscan.io/address/0xaBBc5F99639c9B6bCb58544ddf04EFA6802F4064)
 */
export function useGmxRouterPluginTransfer<
  TMode extends WriteContractMode = undefined,
  TChainId extends number = keyof typeof gmxRouterAddress,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        PrepareWriteContractResult<typeof gmxRouterABI, 'pluginTransfer'>['request']['abi'],
        'pluginTransfer',
        TMode
      > & { address?: Address; chainId?: TChainId; functionName?: 'pluginTransfer' }
    : UseContractWriteConfig<typeof gmxRouterABI, 'pluginTransfer', TMode> & {
        abi?: never
        address?: never
        chainId?: TChainId
        functionName?: 'pluginTransfer'
      } = {} as any,
) {
  return useContractWrite<typeof gmxRouterABI, 'pluginTransfer', TMode>({
    abi: gmxRouterABI,
    address: gmxRouterAddress[42161],
    functionName: 'pluginTransfer',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link gmxRouterABI}__ and `functionName` set to `"removePlugin"`.
 *
 * [__View Contract on Arbitrum One Arbiscan__](https://arbiscan.io/address/0xaBBc5F99639c9B6bCb58544ddf04EFA6802F4064)
 */
export function useGmxRouterRemovePlugin<
  TMode extends WriteContractMode = undefined,
  TChainId extends number = keyof typeof gmxRouterAddress,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        PrepareWriteContractResult<typeof gmxRouterABI, 'removePlugin'>['request']['abi'],
        'removePlugin',
        TMode
      > & { address?: Address; chainId?: TChainId; functionName?: 'removePlugin' }
    : UseContractWriteConfig<typeof gmxRouterABI, 'removePlugin', TMode> & {
        abi?: never
        address?: never
        chainId?: TChainId
        functionName?: 'removePlugin'
      } = {} as any,
) {
  return useContractWrite<typeof gmxRouterABI, 'removePlugin', TMode>({
    abi: gmxRouterABI,
    address: gmxRouterAddress[42161],
    functionName: 'removePlugin',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link gmxRouterABI}__ and `functionName` set to `"setGov"`.
 *
 * [__View Contract on Arbitrum One Arbiscan__](https://arbiscan.io/address/0xaBBc5F99639c9B6bCb58544ddf04EFA6802F4064)
 */
export function useGmxRouterSetGov<
  TMode extends WriteContractMode = undefined,
  TChainId extends number = keyof typeof gmxRouterAddress,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        PrepareWriteContractResult<typeof gmxRouterABI, 'setGov'>['request']['abi'],
        'setGov',
        TMode
      > & { address?: Address; chainId?: TChainId; functionName?: 'setGov' }
    : UseContractWriteConfig<typeof gmxRouterABI, 'setGov', TMode> & {
        abi?: never
        address?: never
        chainId?: TChainId
        functionName?: 'setGov'
      } = {} as any,
) {
  return useContractWrite<typeof gmxRouterABI, 'setGov', TMode>({
    abi: gmxRouterABI,
    address: gmxRouterAddress[42161],
    functionName: 'setGov',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link gmxRouterABI}__ and `functionName` set to `"swap"`.
 *
 * [__View Contract on Arbitrum One Arbiscan__](https://arbiscan.io/address/0xaBBc5F99639c9B6bCb58544ddf04EFA6802F4064)
 */
export function useGmxRouterSwap<
  TMode extends WriteContractMode = undefined,
  TChainId extends number = keyof typeof gmxRouterAddress,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        PrepareWriteContractResult<typeof gmxRouterABI, 'swap'>['request']['abi'],
        'swap',
        TMode
      > & { address?: Address; chainId?: TChainId; functionName?: 'swap' }
    : UseContractWriteConfig<typeof gmxRouterABI, 'swap', TMode> & {
        abi?: never
        address?: never
        chainId?: TChainId
        functionName?: 'swap'
      } = {} as any,
) {
  return useContractWrite<typeof gmxRouterABI, 'swap', TMode>({
    abi: gmxRouterABI,
    address: gmxRouterAddress[42161],
    functionName: 'swap',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link gmxRouterABI}__ and `functionName` set to `"swapETHToTokens"`.
 *
 * [__View Contract on Arbitrum One Arbiscan__](https://arbiscan.io/address/0xaBBc5F99639c9B6bCb58544ddf04EFA6802F4064)
 */
export function useGmxRouterSwapEthToTokens<
  TMode extends WriteContractMode = undefined,
  TChainId extends number = keyof typeof gmxRouterAddress,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        PrepareWriteContractResult<typeof gmxRouterABI, 'swapETHToTokens'>['request']['abi'],
        'swapETHToTokens',
        TMode
      > & { address?: Address; chainId?: TChainId; functionName?: 'swapETHToTokens' }
    : UseContractWriteConfig<typeof gmxRouterABI, 'swapETHToTokens', TMode> & {
        abi?: never
        address?: never
        chainId?: TChainId
        functionName?: 'swapETHToTokens'
      } = {} as any,
) {
  return useContractWrite<typeof gmxRouterABI, 'swapETHToTokens', TMode>({
    abi: gmxRouterABI,
    address: gmxRouterAddress[42161],
    functionName: 'swapETHToTokens',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link gmxRouterABI}__ and `functionName` set to `"swapTokensToETH"`.
 *
 * [__View Contract on Arbitrum One Arbiscan__](https://arbiscan.io/address/0xaBBc5F99639c9B6bCb58544ddf04EFA6802F4064)
 */
export function useGmxRouterSwapTokensToEth<
  TMode extends WriteContractMode = undefined,
  TChainId extends number = keyof typeof gmxRouterAddress,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        PrepareWriteContractResult<typeof gmxRouterABI, 'swapTokensToETH'>['request']['abi'],
        'swapTokensToETH',
        TMode
      > & { address?: Address; chainId?: TChainId; functionName?: 'swapTokensToETH' }
    : UseContractWriteConfig<typeof gmxRouterABI, 'swapTokensToETH', TMode> & {
        abi?: never
        address?: never
        chainId?: TChainId
        functionName?: 'swapTokensToETH'
      } = {} as any,
) {
  return useContractWrite<typeof gmxRouterABI, 'swapTokensToETH', TMode>({
    abi: gmxRouterABI,
    address: gmxRouterAddress[42161],
    functionName: 'swapTokensToETH',
    ...config,
  } as any)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link gmxRouterABI}__.
 *
 * [__View Contract on Arbitrum One Arbiscan__](https://arbiscan.io/address/0xaBBc5F99639c9B6bCb58544ddf04EFA6802F4064)
 */
export function usePrepareGmxRouterWrite<TFunctionName extends string>(
  config: Omit<UsePrepareContractWriteConfig<typeof gmxRouterABI, TFunctionName>, 'abi' | 'address'> & {
    chainId?: keyof typeof gmxRouterAddress
  } = {} as any,
) {
  return usePrepareContractWrite({
    abi: gmxRouterABI,
    address: gmxRouterAddress[42161],
    ...config,
  } as UsePrepareContractWriteConfig<typeof gmxRouterABI, TFunctionName>)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link gmxRouterABI}__ and `functionName` set to `"addPlugin"`.
 *
 * [__View Contract on Arbitrum One Arbiscan__](https://arbiscan.io/address/0xaBBc5F99639c9B6bCb58544ddf04EFA6802F4064)
 */
export function usePrepareGmxRouterAddPlugin(
  config: Omit<UsePrepareContractWriteConfig<typeof gmxRouterABI, 'addPlugin'>, 'abi' | 'address' | 'functionName'> & {
    chainId?: keyof typeof gmxRouterAddress
  } = {} as any,
) {
  return usePrepareContractWrite({
    abi: gmxRouterABI,
    address: gmxRouterAddress[42161],
    functionName: 'addPlugin',
    ...config,
  } as UsePrepareContractWriteConfig<typeof gmxRouterABI, 'addPlugin'>)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link gmxRouterABI}__ and `functionName` set to `"approvePlugin"`.
 *
 * [__View Contract on Arbitrum One Arbiscan__](https://arbiscan.io/address/0xaBBc5F99639c9B6bCb58544ddf04EFA6802F4064)
 */
export function usePrepareGmxRouterApprovePlugin(
  config: Omit<
    UsePrepareContractWriteConfig<typeof gmxRouterABI, 'approvePlugin'>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof gmxRouterAddress } = {} as any,
) {
  return usePrepareContractWrite({
    abi: gmxRouterABI,
    address: gmxRouterAddress[42161],
    functionName: 'approvePlugin',
    ...config,
  } as UsePrepareContractWriteConfig<typeof gmxRouterABI, 'approvePlugin'>)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link gmxRouterABI}__ and `functionName` set to `"decreasePosition"`.
 *
 * [__View Contract on Arbitrum One Arbiscan__](https://arbiscan.io/address/0xaBBc5F99639c9B6bCb58544ddf04EFA6802F4064)
 */
export function usePrepareGmxRouterDecreasePosition(
  config: Omit<
    UsePrepareContractWriteConfig<typeof gmxRouterABI, 'decreasePosition'>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof gmxRouterAddress } = {} as any,
) {
  return usePrepareContractWrite({
    abi: gmxRouterABI,
    address: gmxRouterAddress[42161],
    functionName: 'decreasePosition',
    ...config,
  } as UsePrepareContractWriteConfig<typeof gmxRouterABI, 'decreasePosition'>)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link gmxRouterABI}__ and `functionName` set to `"decreasePositionAndSwap"`.
 *
 * [__View Contract on Arbitrum One Arbiscan__](https://arbiscan.io/address/0xaBBc5F99639c9B6bCb58544ddf04EFA6802F4064)
 */
export function usePrepareGmxRouterDecreasePositionAndSwap(
  config: Omit<
    UsePrepareContractWriteConfig<typeof gmxRouterABI, 'decreasePositionAndSwap'>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof gmxRouterAddress } = {} as any,
) {
  return usePrepareContractWrite({
    abi: gmxRouterABI,
    address: gmxRouterAddress[42161],
    functionName: 'decreasePositionAndSwap',
    ...config,
  } as UsePrepareContractWriteConfig<typeof gmxRouterABI, 'decreasePositionAndSwap'>)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link gmxRouterABI}__ and `functionName` set to `"decreasePositionAndSwapETH"`.
 *
 * [__View Contract on Arbitrum One Arbiscan__](https://arbiscan.io/address/0xaBBc5F99639c9B6bCb58544ddf04EFA6802F4064)
 */
export function usePrepareGmxRouterDecreasePositionAndSwapEth(
  config: Omit<
    UsePrepareContractWriteConfig<typeof gmxRouterABI, 'decreasePositionAndSwapETH'>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof gmxRouterAddress } = {} as any,
) {
  return usePrepareContractWrite({
    abi: gmxRouterABI,
    address: gmxRouterAddress[42161],
    functionName: 'decreasePositionAndSwapETH',
    ...config,
  } as UsePrepareContractWriteConfig<typeof gmxRouterABI, 'decreasePositionAndSwapETH'>)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link gmxRouterABI}__ and `functionName` set to `"decreasePositionETH"`.
 *
 * [__View Contract on Arbitrum One Arbiscan__](https://arbiscan.io/address/0xaBBc5F99639c9B6bCb58544ddf04EFA6802F4064)
 */
export function usePrepareGmxRouterDecreasePositionEth(
  config: Omit<
    UsePrepareContractWriteConfig<typeof gmxRouterABI, 'decreasePositionETH'>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof gmxRouterAddress } = {} as any,
) {
  return usePrepareContractWrite({
    abi: gmxRouterABI,
    address: gmxRouterAddress[42161],
    functionName: 'decreasePositionETH',
    ...config,
  } as UsePrepareContractWriteConfig<typeof gmxRouterABI, 'decreasePositionETH'>)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link gmxRouterABI}__ and `functionName` set to `"denyPlugin"`.
 *
 * [__View Contract on Arbitrum One Arbiscan__](https://arbiscan.io/address/0xaBBc5F99639c9B6bCb58544ddf04EFA6802F4064)
 */
export function usePrepareGmxRouterDenyPlugin(
  config: Omit<UsePrepareContractWriteConfig<typeof gmxRouterABI, 'denyPlugin'>, 'abi' | 'address' | 'functionName'> & {
    chainId?: keyof typeof gmxRouterAddress
  } = {} as any,
) {
  return usePrepareContractWrite({
    abi: gmxRouterABI,
    address: gmxRouterAddress[42161],
    functionName: 'denyPlugin',
    ...config,
  } as UsePrepareContractWriteConfig<typeof gmxRouterABI, 'denyPlugin'>)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link gmxRouterABI}__ and `functionName` set to `"directPoolDeposit"`.
 *
 * [__View Contract on Arbitrum One Arbiscan__](https://arbiscan.io/address/0xaBBc5F99639c9B6bCb58544ddf04EFA6802F4064)
 */
export function usePrepareGmxRouterDirectPoolDeposit(
  config: Omit<
    UsePrepareContractWriteConfig<typeof gmxRouterABI, 'directPoolDeposit'>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof gmxRouterAddress } = {} as any,
) {
  return usePrepareContractWrite({
    abi: gmxRouterABI,
    address: gmxRouterAddress[42161],
    functionName: 'directPoolDeposit',
    ...config,
  } as UsePrepareContractWriteConfig<typeof gmxRouterABI, 'directPoolDeposit'>)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link gmxRouterABI}__ and `functionName` set to `"increasePosition"`.
 *
 * [__View Contract on Arbitrum One Arbiscan__](https://arbiscan.io/address/0xaBBc5F99639c9B6bCb58544ddf04EFA6802F4064)
 */
export function usePrepareGmxRouterIncreasePosition(
  config: Omit<
    UsePrepareContractWriteConfig<typeof gmxRouterABI, 'increasePosition'>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof gmxRouterAddress } = {} as any,
) {
  return usePrepareContractWrite({
    abi: gmxRouterABI,
    address: gmxRouterAddress[42161],
    functionName: 'increasePosition',
    ...config,
  } as UsePrepareContractWriteConfig<typeof gmxRouterABI, 'increasePosition'>)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link gmxRouterABI}__ and `functionName` set to `"increasePositionETH"`.
 *
 * [__View Contract on Arbitrum One Arbiscan__](https://arbiscan.io/address/0xaBBc5F99639c9B6bCb58544ddf04EFA6802F4064)
 */
export function usePrepareGmxRouterIncreasePositionEth(
  config: Omit<
    UsePrepareContractWriteConfig<typeof gmxRouterABI, 'increasePositionETH'>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof gmxRouterAddress } = {} as any,
) {
  return usePrepareContractWrite({
    abi: gmxRouterABI,
    address: gmxRouterAddress[42161],
    functionName: 'increasePositionETH',
    ...config,
  } as UsePrepareContractWriteConfig<typeof gmxRouterABI, 'increasePositionETH'>)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link gmxRouterABI}__ and `functionName` set to `"pluginDecreasePosition"`.
 *
 * [__View Contract on Arbitrum One Arbiscan__](https://arbiscan.io/address/0xaBBc5F99639c9B6bCb58544ddf04EFA6802F4064)
 */
export function usePrepareGmxRouterPluginDecreasePosition(
  config: Omit<
    UsePrepareContractWriteConfig<typeof gmxRouterABI, 'pluginDecreasePosition'>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof gmxRouterAddress } = {} as any,
) {
  return usePrepareContractWrite({
    abi: gmxRouterABI,
    address: gmxRouterAddress[42161],
    functionName: 'pluginDecreasePosition',
    ...config,
  } as UsePrepareContractWriteConfig<typeof gmxRouterABI, 'pluginDecreasePosition'>)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link gmxRouterABI}__ and `functionName` set to `"pluginIncreasePosition"`.
 *
 * [__View Contract on Arbitrum One Arbiscan__](https://arbiscan.io/address/0xaBBc5F99639c9B6bCb58544ddf04EFA6802F4064)
 */
export function usePrepareGmxRouterPluginIncreasePosition(
  config: Omit<
    UsePrepareContractWriteConfig<typeof gmxRouterABI, 'pluginIncreasePosition'>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof gmxRouterAddress } = {} as any,
) {
  return usePrepareContractWrite({
    abi: gmxRouterABI,
    address: gmxRouterAddress[42161],
    functionName: 'pluginIncreasePosition',
    ...config,
  } as UsePrepareContractWriteConfig<typeof gmxRouterABI, 'pluginIncreasePosition'>)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link gmxRouterABI}__ and `functionName` set to `"pluginTransfer"`.
 *
 * [__View Contract on Arbitrum One Arbiscan__](https://arbiscan.io/address/0xaBBc5F99639c9B6bCb58544ddf04EFA6802F4064)
 */
export function usePrepareGmxRouterPluginTransfer(
  config: Omit<
    UsePrepareContractWriteConfig<typeof gmxRouterABI, 'pluginTransfer'>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof gmxRouterAddress } = {} as any,
) {
  return usePrepareContractWrite({
    abi: gmxRouterABI,
    address: gmxRouterAddress[42161],
    functionName: 'pluginTransfer',
    ...config,
  } as UsePrepareContractWriteConfig<typeof gmxRouterABI, 'pluginTransfer'>)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link gmxRouterABI}__ and `functionName` set to `"removePlugin"`.
 *
 * [__View Contract on Arbitrum One Arbiscan__](https://arbiscan.io/address/0xaBBc5F99639c9B6bCb58544ddf04EFA6802F4064)
 */
export function usePrepareGmxRouterRemovePlugin(
  config: Omit<
    UsePrepareContractWriteConfig<typeof gmxRouterABI, 'removePlugin'>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof gmxRouterAddress } = {} as any,
) {
  return usePrepareContractWrite({
    abi: gmxRouterABI,
    address: gmxRouterAddress[42161],
    functionName: 'removePlugin',
    ...config,
  } as UsePrepareContractWriteConfig<typeof gmxRouterABI, 'removePlugin'>)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link gmxRouterABI}__ and `functionName` set to `"setGov"`.
 *
 * [__View Contract on Arbitrum One Arbiscan__](https://arbiscan.io/address/0xaBBc5F99639c9B6bCb58544ddf04EFA6802F4064)
 */
export function usePrepareGmxRouterSetGov(
  config: Omit<UsePrepareContractWriteConfig<typeof gmxRouterABI, 'setGov'>, 'abi' | 'address' | 'functionName'> & {
    chainId?: keyof typeof gmxRouterAddress
  } = {} as any,
) {
  return usePrepareContractWrite({
    abi: gmxRouterABI,
    address: gmxRouterAddress[42161],
    functionName: 'setGov',
    ...config,
  } as UsePrepareContractWriteConfig<typeof gmxRouterABI, 'setGov'>)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link gmxRouterABI}__ and `functionName` set to `"swap"`.
 *
 * [__View Contract on Arbitrum One Arbiscan__](https://arbiscan.io/address/0xaBBc5F99639c9B6bCb58544ddf04EFA6802F4064)
 */
export function usePrepareGmxRouterSwap(
  config: Omit<UsePrepareContractWriteConfig<typeof gmxRouterABI, 'swap'>, 'abi' | 'address' | 'functionName'> & {
    chainId?: keyof typeof gmxRouterAddress
  } = {} as any,
) {
  return usePrepareContractWrite({
    abi: gmxRouterABI,
    address: gmxRouterAddress[42161],
    functionName: 'swap',
    ...config,
  } as UsePrepareContractWriteConfig<typeof gmxRouterABI, 'swap'>)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link gmxRouterABI}__ and `functionName` set to `"swapETHToTokens"`.
 *
 * [__View Contract on Arbitrum One Arbiscan__](https://arbiscan.io/address/0xaBBc5F99639c9B6bCb58544ddf04EFA6802F4064)
 */
export function usePrepareGmxRouterSwapEthToTokens(
  config: Omit<
    UsePrepareContractWriteConfig<typeof gmxRouterABI, 'swapETHToTokens'>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof gmxRouterAddress } = {} as any,
) {
  return usePrepareContractWrite({
    abi: gmxRouterABI,
    address: gmxRouterAddress[42161],
    functionName: 'swapETHToTokens',
    ...config,
  } as UsePrepareContractWriteConfig<typeof gmxRouterABI, 'swapETHToTokens'>)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link gmxRouterABI}__ and `functionName` set to `"swapTokensToETH"`.
 *
 * [__View Contract on Arbitrum One Arbiscan__](https://arbiscan.io/address/0xaBBc5F99639c9B6bCb58544ddf04EFA6802F4064)
 */
export function usePrepareGmxRouterSwapTokensToEth(
  config: Omit<
    UsePrepareContractWriteConfig<typeof gmxRouterABI, 'swapTokensToETH'>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof gmxRouterAddress } = {} as any,
) {
  return usePrepareContractWrite({
    abi: gmxRouterABI,
    address: gmxRouterAddress[42161],
    functionName: 'swapTokensToETH',
    ...config,
  } as UsePrepareContractWriteConfig<typeof gmxRouterABI, 'swapTokensToETH'>)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link gmxRouterABI}__.
 *
 * [__View Contract on Arbitrum One Arbiscan__](https://arbiscan.io/address/0xaBBc5F99639c9B6bCb58544ddf04EFA6802F4064)
 */
export function useGmxRouterEvent<TEventName extends string>(
  config: Omit<UseContractEventConfig<typeof gmxRouterABI, TEventName>, 'abi' | 'address'> & {
    chainId?: keyof typeof gmxRouterAddress
  } = {} as any,
) {
  return useContractEvent({ abi: gmxRouterABI, address: gmxRouterAddress[42161], ...config } as UseContractEventConfig<
    typeof gmxRouterABI,
    TEventName
  >)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link gmxRouterABI}__ and `eventName` set to `"Swap"`.
 *
 * [__View Contract on Arbitrum One Arbiscan__](https://arbiscan.io/address/0xaBBc5F99639c9B6bCb58544ddf04EFA6802F4064)
 */
export function useGmxRouterSwapEvent(
  config: Omit<UseContractEventConfig<typeof gmxRouterABI, 'Swap'>, 'abi' | 'address' | 'eventName'> & {
    chainId?: keyof typeof gmxRouterAddress
  } = {} as any,
) {
  return useContractEvent({
    abi: gmxRouterABI,
    address: gmxRouterAddress[42161],
    eventName: 'Swap',
    ...config,
  } as UseContractEventConfig<typeof gmxRouterABI, 'Swap'>)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link orderManagerABI}__.
 *
 * [__View Contract on Arbitrum One Arbiscan__](https://arbiscan.io/address/0x5b5d94B1574a8A910E6FC0a38949f5B256f22FF9)
 */
export function useOrderManagerRead<
  TFunctionName extends string,
  TSelectData = ReadContractResult<typeof orderManagerABI, TFunctionName>,
>(
  config: Omit<UseContractReadConfig<typeof orderManagerABI, TFunctionName, TSelectData>, 'abi' | 'address'> & {
    chainId?: keyof typeof orderManagerAddress
  } = {} as any,
) {
  return useContractRead({
    abi: orderManagerABI,
    address: orderManagerAddress[42161],
    ...config,
  } as UseContractReadConfig<typeof orderManagerABI, TFunctionName, TSelectData>)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link orderManagerABI}__ and `functionName` set to `"ETH"`.
 *
 * [__View Contract on Arbitrum One Arbiscan__](https://arbiscan.io/address/0x5b5d94B1574a8A910E6FC0a38949f5B256f22FF9)
 */
export function useOrderManagerEth<
  TFunctionName extends 'ETH',
  TSelectData = ReadContractResult<typeof orderManagerABI, TFunctionName>,
>(
  config: Omit<
    UseContractReadConfig<typeof orderManagerABI, TFunctionName, TSelectData>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof orderManagerAddress } = {} as any,
) {
  return useContractRead({
    abi: orderManagerABI,
    address: orderManagerAddress[42161],
    functionName: 'ETH',
    ...config,
  } as UseContractReadConfig<typeof orderManagerABI, TFunctionName, TSelectData>)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link orderManagerABI}__ and `functionName` set to `"ETH_UNWRAPPER"`.
 *
 * [__View Contract on Arbitrum One Arbiscan__](https://arbiscan.io/address/0x5b5d94B1574a8A910E6FC0a38949f5B256f22FF9)
 */
export function useOrderManagerEthUnwrapper<
  TFunctionName extends 'ETH_UNWRAPPER',
  TSelectData = ReadContractResult<typeof orderManagerABI, TFunctionName>,
>(
  config: Omit<
    UseContractReadConfig<typeof orderManagerABI, TFunctionName, TSelectData>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof orderManagerAddress } = {} as any,
) {
  return useContractRead({
    abi: orderManagerABI,
    address: orderManagerAddress[42161],
    functionName: 'ETH_UNWRAPPER',
    ...config,
  } as UseContractReadConfig<typeof orderManagerABI, TFunctionName, TSelectData>)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link orderManagerABI}__ and `functionName` set to `"VERSION"`.
 *
 * [__View Contract on Arbitrum One Arbiscan__](https://arbiscan.io/address/0x5b5d94B1574a8A910E6FC0a38949f5B256f22FF9)
 */
export function useOrderManagerVersion<
  TFunctionName extends 'VERSION',
  TSelectData = ReadContractResult<typeof orderManagerABI, TFunctionName>,
>(
  config: Omit<
    UseContractReadConfig<typeof orderManagerABI, TFunctionName, TSelectData>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof orderManagerAddress } = {} as any,
) {
  return useContractRead({
    abi: orderManagerABI,
    address: orderManagerAddress[42161],
    functionName: 'VERSION',
    ...config,
  } as UseContractReadConfig<typeof orderManagerABI, TFunctionName, TSelectData>)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link orderManagerABI}__ and `functionName` set to `"controller"`.
 *
 * [__View Contract on Arbitrum One Arbiscan__](https://arbiscan.io/address/0x5b5d94B1574a8A910E6FC0a38949f5B256f22FF9)
 */
export function useOrderManagerController<
  TFunctionName extends 'controller',
  TSelectData = ReadContractResult<typeof orderManagerABI, TFunctionName>,
>(
  config: Omit<
    UseContractReadConfig<typeof orderManagerABI, TFunctionName, TSelectData>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof orderManagerAddress } = {} as any,
) {
  return useContractRead({
    abi: orderManagerABI,
    address: orderManagerAddress[42161],
    functionName: 'controller',
    ...config,
  } as UseContractReadConfig<typeof orderManagerABI, TFunctionName, TSelectData>)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link orderManagerABI}__ and `functionName` set to `"enablePublicExecution"`.
 *
 * [__View Contract on Arbitrum One Arbiscan__](https://arbiscan.io/address/0x5b5d94B1574a8A910E6FC0a38949f5B256f22FF9)
 */
export function useOrderManagerEnablePublicExecution<
  TFunctionName extends 'enablePublicExecution',
  TSelectData = ReadContractResult<typeof orderManagerABI, TFunctionName>,
>(
  config: Omit<
    UseContractReadConfig<typeof orderManagerABI, TFunctionName, TSelectData>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof orderManagerAddress } = {} as any,
) {
  return useContractRead({
    abi: orderManagerABI,
    address: orderManagerAddress[42161],
    functionName: 'enablePublicExecution',
    ...config,
  } as UseContractReadConfig<typeof orderManagerABI, TFunctionName, TSelectData>)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link orderManagerABI}__ and `functionName` set to `"executionDelayTime"`.
 *
 * [__View Contract on Arbitrum One Arbiscan__](https://arbiscan.io/address/0x5b5d94B1574a8A910E6FC0a38949f5B256f22FF9)
 */
export function useOrderManagerExecutionDelayTime<
  TFunctionName extends 'executionDelayTime',
  TSelectData = ReadContractResult<typeof orderManagerABI, TFunctionName>,
>(
  config: Omit<
    UseContractReadConfig<typeof orderManagerABI, TFunctionName, TSelectData>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof orderManagerAddress } = {} as any,
) {
  return useContractRead({
    abi: orderManagerABI,
    address: orderManagerAddress[42161],
    functionName: 'executionDelayTime',
    ...config,
  } as UseContractReadConfig<typeof orderManagerABI, TFunctionName, TSelectData>)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link orderManagerABI}__ and `functionName` set to `"executor"`.
 *
 * [__View Contract on Arbitrum One Arbiscan__](https://arbiscan.io/address/0x5b5d94B1574a8A910E6FC0a38949f5B256f22FF9)
 */
export function useOrderManagerExecutor<
  TFunctionName extends 'executor',
  TSelectData = ReadContractResult<typeof orderManagerABI, TFunctionName>,
>(
  config: Omit<
    UseContractReadConfig<typeof orderManagerABI, TFunctionName, TSelectData>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof orderManagerAddress } = {} as any,
) {
  return useContractRead({
    abi: orderManagerABI,
    address: orderManagerAddress[42161],
    functionName: 'executor',
    ...config,
  } as UseContractReadConfig<typeof orderManagerABI, TFunctionName, TSelectData>)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link orderManagerABI}__ and `functionName` set to `"getOrders"`.
 *
 * [__View Contract on Arbitrum One Arbiscan__](https://arbiscan.io/address/0x5b5d94B1574a8A910E6FC0a38949f5B256f22FF9)
 */
export function useOrderManagerGetOrders<
  TFunctionName extends 'getOrders',
  TSelectData = ReadContractResult<typeof orderManagerABI, TFunctionName>,
>(
  config: Omit<
    UseContractReadConfig<typeof orderManagerABI, TFunctionName, TSelectData>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof orderManagerAddress } = {} as any,
) {
  return useContractRead({
    abi: orderManagerABI,
    address: orderManagerAddress[42161],
    functionName: 'getOrders',
    ...config,
  } as UseContractReadConfig<typeof orderManagerABI, TFunctionName, TSelectData>)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link orderManagerABI}__ and `functionName` set to `"getSwapOrders"`.
 *
 * [__View Contract on Arbitrum One Arbiscan__](https://arbiscan.io/address/0x5b5d94B1574a8A910E6FC0a38949f5B256f22FF9)
 */
export function useOrderManagerGetSwapOrders<
  TFunctionName extends 'getSwapOrders',
  TSelectData = ReadContractResult<typeof orderManagerABI, TFunctionName>,
>(
  config: Omit<
    UseContractReadConfig<typeof orderManagerABI, TFunctionName, TSelectData>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof orderManagerAddress } = {} as any,
) {
  return useContractRead({
    abi: orderManagerABI,
    address: orderManagerAddress[42161],
    functionName: 'getSwapOrders',
    ...config,
  } as UseContractReadConfig<typeof orderManagerABI, TFunctionName, TSelectData>)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link orderManagerABI}__ and `functionName` set to `"leverageOrders"`.
 *
 * [__View Contract on Arbitrum One Arbiscan__](https://arbiscan.io/address/0x5b5d94B1574a8A910E6FC0a38949f5B256f22FF9)
 */
export function useOrderManagerLeverageOrders<
  TFunctionName extends 'leverageOrders',
  TSelectData = ReadContractResult<typeof orderManagerABI, TFunctionName>,
>(
  config: Omit<
    UseContractReadConfig<typeof orderManagerABI, TFunctionName, TSelectData>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof orderManagerAddress } = {} as any,
) {
  return useContractRead({
    abi: orderManagerABI,
    address: orderManagerAddress[42161],
    functionName: 'leverageOrders',
    ...config,
  } as UseContractReadConfig<typeof orderManagerABI, TFunctionName, TSelectData>)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link orderManagerABI}__ and `functionName` set to `"minLeverageExecutionFee"`.
 *
 * [__View Contract on Arbitrum One Arbiscan__](https://arbiscan.io/address/0x5b5d94B1574a8A910E6FC0a38949f5B256f22FF9)
 */
export function useOrderManagerMinLeverageExecutionFee<
  TFunctionName extends 'minLeverageExecutionFee',
  TSelectData = ReadContractResult<typeof orderManagerABI, TFunctionName>,
>(
  config: Omit<
    UseContractReadConfig<typeof orderManagerABI, TFunctionName, TSelectData>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof orderManagerAddress } = {} as any,
) {
  return useContractRead({
    abi: orderManagerABI,
    address: orderManagerAddress[42161],
    functionName: 'minLeverageExecutionFee',
    ...config,
  } as UseContractReadConfig<typeof orderManagerABI, TFunctionName, TSelectData>)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link orderManagerABI}__ and `functionName` set to `"minSwapExecutionFee"`.
 *
 * [__View Contract on Arbitrum One Arbiscan__](https://arbiscan.io/address/0x5b5d94B1574a8A910E6FC0a38949f5B256f22FF9)
 */
export function useOrderManagerMinSwapExecutionFee<
  TFunctionName extends 'minSwapExecutionFee',
  TSelectData = ReadContractResult<typeof orderManagerABI, TFunctionName>,
>(
  config: Omit<
    UseContractReadConfig<typeof orderManagerABI, TFunctionName, TSelectData>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof orderManagerAddress } = {} as any,
) {
  return useContractRead({
    abi: orderManagerABI,
    address: orderManagerAddress[42161],
    functionName: 'minSwapExecutionFee',
    ...config,
  } as UseContractReadConfig<typeof orderManagerABI, TFunctionName, TSelectData>)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link orderManagerABI}__ and `functionName` set to `"nextLeverageOrderId"`.
 *
 * [__View Contract on Arbitrum One Arbiscan__](https://arbiscan.io/address/0x5b5d94B1574a8A910E6FC0a38949f5B256f22FF9)
 */
export function useOrderManagerNextLeverageOrderId<
  TFunctionName extends 'nextLeverageOrderId',
  TSelectData = ReadContractResult<typeof orderManagerABI, TFunctionName>,
>(
  config: Omit<
    UseContractReadConfig<typeof orderManagerABI, TFunctionName, TSelectData>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof orderManagerAddress } = {} as any,
) {
  return useContractRead({
    abi: orderManagerABI,
    address: orderManagerAddress[42161],
    functionName: 'nextLeverageOrderId',
    ...config,
  } as UseContractReadConfig<typeof orderManagerABI, TFunctionName, TSelectData>)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link orderManagerABI}__ and `functionName` set to `"nextSwapOrderId"`.
 *
 * [__View Contract on Arbitrum One Arbiscan__](https://arbiscan.io/address/0x5b5d94B1574a8A910E6FC0a38949f5B256f22FF9)
 */
export function useOrderManagerNextSwapOrderId<
  TFunctionName extends 'nextSwapOrderId',
  TSelectData = ReadContractResult<typeof orderManagerABI, TFunctionName>,
>(
  config: Omit<
    UseContractReadConfig<typeof orderManagerABI, TFunctionName, TSelectData>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof orderManagerAddress } = {} as any,
) {
  return useContractRead({
    abi: orderManagerABI,
    address: orderManagerAddress[42161],
    functionName: 'nextSwapOrderId',
    ...config,
  } as UseContractReadConfig<typeof orderManagerABI, TFunctionName, TSelectData>)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link orderManagerABI}__ and `functionName` set to `"oracle"`.
 *
 * [__View Contract on Arbitrum One Arbiscan__](https://arbiscan.io/address/0x5b5d94B1574a8A910E6FC0a38949f5B256f22FF9)
 */
export function useOrderManagerOracle<
  TFunctionName extends 'oracle',
  TSelectData = ReadContractResult<typeof orderManagerABI, TFunctionName>,
>(
  config: Omit<
    UseContractReadConfig<typeof orderManagerABI, TFunctionName, TSelectData>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof orderManagerAddress } = {} as any,
) {
  return useContractRead({
    abi: orderManagerABI,
    address: orderManagerAddress[42161],
    functionName: 'oracle',
    ...config,
  } as UseContractReadConfig<typeof orderManagerABI, TFunctionName, TSelectData>)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link orderManagerABI}__ and `functionName` set to `"orderHook"`.
 *
 * [__View Contract on Arbitrum One Arbiscan__](https://arbiscan.io/address/0x5b5d94B1574a8A910E6FC0a38949f5B256f22FF9)
 */
export function useOrderManagerOrderHook<
  TFunctionName extends 'orderHook',
  TSelectData = ReadContractResult<typeof orderManagerABI, TFunctionName>,
>(
  config: Omit<
    UseContractReadConfig<typeof orderManagerABI, TFunctionName, TSelectData>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof orderManagerAddress } = {} as any,
) {
  return useContractRead({
    abi: orderManagerABI,
    address: orderManagerAddress[42161],
    functionName: 'orderHook',
    ...config,
  } as UseContractReadConfig<typeof orderManagerABI, TFunctionName, TSelectData>)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link orderManagerABI}__ and `functionName` set to `"owner"`.
 *
 * [__View Contract on Arbitrum One Arbiscan__](https://arbiscan.io/address/0x5b5d94B1574a8A910E6FC0a38949f5B256f22FF9)
 */
export function useOrderManagerOwner<
  TFunctionName extends 'owner',
  TSelectData = ReadContractResult<typeof orderManagerABI, TFunctionName>,
>(
  config: Omit<
    UseContractReadConfig<typeof orderManagerABI, TFunctionName, TSelectData>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof orderManagerAddress } = {} as any,
) {
  return useContractRead({
    abi: orderManagerABI,
    address: orderManagerAddress[42161],
    functionName: 'owner',
    ...config,
  } as UseContractReadConfig<typeof orderManagerABI, TFunctionName, TSelectData>)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link orderManagerABI}__ and `functionName` set to `"pool"`.
 *
 * [__View Contract on Arbitrum One Arbiscan__](https://arbiscan.io/address/0x5b5d94B1574a8A910E6FC0a38949f5B256f22FF9)
 */
export function useOrderManagerPool<
  TFunctionName extends 'pool',
  TSelectData = ReadContractResult<typeof orderManagerABI, TFunctionName>,
>(
  config: Omit<
    UseContractReadConfig<typeof orderManagerABI, TFunctionName, TSelectData>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof orderManagerAddress } = {} as any,
) {
  return useContractRead({
    abi: orderManagerABI,
    address: orderManagerAddress[42161],
    functionName: 'pool',
    ...config,
  } as UseContractReadConfig<typeof orderManagerABI, TFunctionName, TSelectData>)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link orderManagerABI}__ and `functionName` set to `"swapOrders"`.
 *
 * [__View Contract on Arbitrum One Arbiscan__](https://arbiscan.io/address/0x5b5d94B1574a8A910E6FC0a38949f5B256f22FF9)
 */
export function useOrderManagerSwapOrders<
  TFunctionName extends 'swapOrders',
  TSelectData = ReadContractResult<typeof orderManagerABI, TFunctionName>,
>(
  config: Omit<
    UseContractReadConfig<typeof orderManagerABI, TFunctionName, TSelectData>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof orderManagerAddress } = {} as any,
) {
  return useContractRead({
    abi: orderManagerABI,
    address: orderManagerAddress[42161],
    functionName: 'swapOrders',
    ...config,
  } as UseContractReadConfig<typeof orderManagerABI, TFunctionName, TSelectData>)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link orderManagerABI}__ and `functionName` set to `"updatePositionRequests"`.
 *
 * [__View Contract on Arbitrum One Arbiscan__](https://arbiscan.io/address/0x5b5d94B1574a8A910E6FC0a38949f5B256f22FF9)
 */
export function useOrderManagerUpdatePositionRequests<
  TFunctionName extends 'updatePositionRequests',
  TSelectData = ReadContractResult<typeof orderManagerABI, TFunctionName>,
>(
  config: Omit<
    UseContractReadConfig<typeof orderManagerABI, TFunctionName, TSelectData>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof orderManagerAddress } = {} as any,
) {
  return useContractRead({
    abi: orderManagerABI,
    address: orderManagerAddress[42161],
    functionName: 'updatePositionRequests',
    ...config,
  } as UseContractReadConfig<typeof orderManagerABI, TFunctionName, TSelectData>)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link orderManagerABI}__ and `functionName` set to `"userLeverageOrderCount"`.
 *
 * [__View Contract on Arbitrum One Arbiscan__](https://arbiscan.io/address/0x5b5d94B1574a8A910E6FC0a38949f5B256f22FF9)
 */
export function useOrderManagerUserLeverageOrderCount<
  TFunctionName extends 'userLeverageOrderCount',
  TSelectData = ReadContractResult<typeof orderManagerABI, TFunctionName>,
>(
  config: Omit<
    UseContractReadConfig<typeof orderManagerABI, TFunctionName, TSelectData>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof orderManagerAddress } = {} as any,
) {
  return useContractRead({
    abi: orderManagerABI,
    address: orderManagerAddress[42161],
    functionName: 'userLeverageOrderCount',
    ...config,
  } as UseContractReadConfig<typeof orderManagerABI, TFunctionName, TSelectData>)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link orderManagerABI}__ and `functionName` set to `"userLeverageOrders"`.
 *
 * [__View Contract on Arbitrum One Arbiscan__](https://arbiscan.io/address/0x5b5d94B1574a8A910E6FC0a38949f5B256f22FF9)
 */
export function useOrderManagerUserLeverageOrders<
  TFunctionName extends 'userLeverageOrders',
  TSelectData = ReadContractResult<typeof orderManagerABI, TFunctionName>,
>(
  config: Omit<
    UseContractReadConfig<typeof orderManagerABI, TFunctionName, TSelectData>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof orderManagerAddress } = {} as any,
) {
  return useContractRead({
    abi: orderManagerABI,
    address: orderManagerAddress[42161],
    functionName: 'userLeverageOrders',
    ...config,
  } as UseContractReadConfig<typeof orderManagerABI, TFunctionName, TSelectData>)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link orderManagerABI}__ and `functionName` set to `"userSwapOrderCount"`.
 *
 * [__View Contract on Arbitrum One Arbiscan__](https://arbiscan.io/address/0x5b5d94B1574a8A910E6FC0a38949f5B256f22FF9)
 */
export function useOrderManagerUserSwapOrderCount<
  TFunctionName extends 'userSwapOrderCount',
  TSelectData = ReadContractResult<typeof orderManagerABI, TFunctionName>,
>(
  config: Omit<
    UseContractReadConfig<typeof orderManagerABI, TFunctionName, TSelectData>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof orderManagerAddress } = {} as any,
) {
  return useContractRead({
    abi: orderManagerABI,
    address: orderManagerAddress[42161],
    functionName: 'userSwapOrderCount',
    ...config,
  } as UseContractReadConfig<typeof orderManagerABI, TFunctionName, TSelectData>)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link orderManagerABI}__ and `functionName` set to `"userSwapOrders"`.
 *
 * [__View Contract on Arbitrum One Arbiscan__](https://arbiscan.io/address/0x5b5d94B1574a8A910E6FC0a38949f5B256f22FF9)
 */
export function useOrderManagerUserSwapOrders<
  TFunctionName extends 'userSwapOrders',
  TSelectData = ReadContractResult<typeof orderManagerABI, TFunctionName>,
>(
  config: Omit<
    UseContractReadConfig<typeof orderManagerABI, TFunctionName, TSelectData>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof orderManagerAddress } = {} as any,
) {
  return useContractRead({
    abi: orderManagerABI,
    address: orderManagerAddress[42161],
    functionName: 'userSwapOrders',
    ...config,
  } as UseContractReadConfig<typeof orderManagerABI, TFunctionName, TSelectData>)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link orderManagerABI}__ and `functionName` set to `"weth"`.
 *
 * [__View Contract on Arbitrum One Arbiscan__](https://arbiscan.io/address/0x5b5d94B1574a8A910E6FC0a38949f5B256f22FF9)
 */
export function useOrderManagerWeth<
  TFunctionName extends 'weth',
  TSelectData = ReadContractResult<typeof orderManagerABI, TFunctionName>,
>(
  config: Omit<
    UseContractReadConfig<typeof orderManagerABI, TFunctionName, TSelectData>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof orderManagerAddress } = {} as any,
) {
  return useContractRead({
    abi: orderManagerABI,
    address: orderManagerAddress[42161],
    functionName: 'weth',
    ...config,
  } as UseContractReadConfig<typeof orderManagerABI, TFunctionName, TSelectData>)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link orderManagerABI}__.
 *
 * [__View Contract on Arbitrum One Arbiscan__](https://arbiscan.io/address/0x5b5d94B1574a8A910E6FC0a38949f5B256f22FF9)
 */
export function useOrderManagerWrite<
  TFunctionName extends string,
  TMode extends WriteContractMode = undefined,
  TChainId extends number = keyof typeof orderManagerAddress,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        PrepareWriteContractResult<typeof orderManagerABI, string>['request']['abi'],
        TFunctionName,
        TMode
      > & { address?: Address; chainId?: TChainId }
    : UseContractWriteConfig<typeof orderManagerABI, TFunctionName, TMode> & {
        abi?: never
        address?: never
        chainId?: TChainId
      } = {} as any,
) {
  return useContractWrite<typeof orderManagerABI, TFunctionName, TMode>({
    abi: orderManagerABI,
    address: orderManagerAddress[42161],
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link orderManagerABI}__ and `functionName` set to `"cancelLeverageOrder"`.
 *
 * [__View Contract on Arbitrum One Arbiscan__](https://arbiscan.io/address/0x5b5d94B1574a8A910E6FC0a38949f5B256f22FF9)
 */
export function useOrderManagerCancelLeverageOrder<
  TMode extends WriteContractMode = undefined,
  TChainId extends number = keyof typeof orderManagerAddress,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        PrepareWriteContractResult<typeof orderManagerABI, 'cancelLeverageOrder'>['request']['abi'],
        'cancelLeverageOrder',
        TMode
      > & { address?: Address; chainId?: TChainId; functionName?: 'cancelLeverageOrder' }
    : UseContractWriteConfig<typeof orderManagerABI, 'cancelLeverageOrder', TMode> & {
        abi?: never
        address?: never
        chainId?: TChainId
        functionName?: 'cancelLeverageOrder'
      } = {} as any,
) {
  return useContractWrite<typeof orderManagerABI, 'cancelLeverageOrder', TMode>({
    abi: orderManagerABI,
    address: orderManagerAddress[42161],
    functionName: 'cancelLeverageOrder',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link orderManagerABI}__ and `functionName` set to `"cancelSwapOrder"`.
 *
 * [__View Contract on Arbitrum One Arbiscan__](https://arbiscan.io/address/0x5b5d94B1574a8A910E6FC0a38949f5B256f22FF9)
 */
export function useOrderManagerCancelSwapOrder<
  TMode extends WriteContractMode = undefined,
  TChainId extends number = keyof typeof orderManagerAddress,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        PrepareWriteContractResult<typeof orderManagerABI, 'cancelSwapOrder'>['request']['abi'],
        'cancelSwapOrder',
        TMode
      > & { address?: Address; chainId?: TChainId; functionName?: 'cancelSwapOrder' }
    : UseContractWriteConfig<typeof orderManagerABI, 'cancelSwapOrder', TMode> & {
        abi?: never
        address?: never
        chainId?: TChainId
        functionName?: 'cancelSwapOrder'
      } = {} as any,
) {
  return useContractWrite<typeof orderManagerABI, 'cancelSwapOrder', TMode>({
    abi: orderManagerABI,
    address: orderManagerAddress[42161],
    functionName: 'cancelSwapOrder',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link orderManagerABI}__ and `functionName` set to `"executeLeverageOrder"`.
 *
 * [__View Contract on Arbitrum One Arbiscan__](https://arbiscan.io/address/0x5b5d94B1574a8A910E6FC0a38949f5B256f22FF9)
 */
export function useOrderManagerExecuteLeverageOrder<
  TMode extends WriteContractMode = undefined,
  TChainId extends number = keyof typeof orderManagerAddress,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        PrepareWriteContractResult<typeof orderManagerABI, 'executeLeverageOrder'>['request']['abi'],
        'executeLeverageOrder',
        TMode
      > & { address?: Address; chainId?: TChainId; functionName?: 'executeLeverageOrder' }
    : UseContractWriteConfig<typeof orderManagerABI, 'executeLeverageOrder', TMode> & {
        abi?: never
        address?: never
        chainId?: TChainId
        functionName?: 'executeLeverageOrder'
      } = {} as any,
) {
  return useContractWrite<typeof orderManagerABI, 'executeLeverageOrder', TMode>({
    abi: orderManagerABI,
    address: orderManagerAddress[42161],
    functionName: 'executeLeverageOrder',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link orderManagerABI}__ and `functionName` set to `"executeSwapOrder"`.
 *
 * [__View Contract on Arbitrum One Arbiscan__](https://arbiscan.io/address/0x5b5d94B1574a8A910E6FC0a38949f5B256f22FF9)
 */
export function useOrderManagerExecuteSwapOrder<
  TMode extends WriteContractMode = undefined,
  TChainId extends number = keyof typeof orderManagerAddress,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        PrepareWriteContractResult<typeof orderManagerABI, 'executeSwapOrder'>['request']['abi'],
        'executeSwapOrder',
        TMode
      > & { address?: Address; chainId?: TChainId; functionName?: 'executeSwapOrder' }
    : UseContractWriteConfig<typeof orderManagerABI, 'executeSwapOrder', TMode> & {
        abi?: never
        address?: never
        chainId?: TChainId
        functionName?: 'executeSwapOrder'
      } = {} as any,
) {
  return useContractWrite<typeof orderManagerABI, 'executeSwapOrder', TMode>({
    abi: orderManagerABI,
    address: orderManagerAddress[42161],
    functionName: 'executeSwapOrder',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link orderManagerABI}__ and `functionName` set to `"initialize"`.
 *
 * [__View Contract on Arbitrum One Arbiscan__](https://arbiscan.io/address/0x5b5d94B1574a8A910E6FC0a38949f5B256f22FF9)
 */
export function useOrderManagerInitialize<
  TMode extends WriteContractMode = undefined,
  TChainId extends number = keyof typeof orderManagerAddress,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        PrepareWriteContractResult<typeof orderManagerABI, 'initialize'>['request']['abi'],
        'initialize',
        TMode
      > & { address?: Address; chainId?: TChainId; functionName?: 'initialize' }
    : UseContractWriteConfig<typeof orderManagerABI, 'initialize', TMode> & {
        abi?: never
        address?: never
        chainId?: TChainId
        functionName?: 'initialize'
      } = {} as any,
) {
  return useContractWrite<typeof orderManagerABI, 'initialize', TMode>({
    abi: orderManagerABI,
    address: orderManagerAddress[42161],
    functionName: 'initialize',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link orderManagerABI}__ and `functionName` set to `"placeLeverageOrder"`.
 *
 * [__View Contract on Arbitrum One Arbiscan__](https://arbiscan.io/address/0x5b5d94B1574a8A910E6FC0a38949f5B256f22FF9)
 */
export function useOrderManagerPlaceLeverageOrder<
  TMode extends WriteContractMode = undefined,
  TChainId extends number = keyof typeof orderManagerAddress,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        PrepareWriteContractResult<typeof orderManagerABI, 'placeLeverageOrder'>['request']['abi'],
        'placeLeverageOrder',
        TMode
      > & { address?: Address; chainId?: TChainId; functionName?: 'placeLeverageOrder' }
    : UseContractWriteConfig<typeof orderManagerABI, 'placeLeverageOrder', TMode> & {
        abi?: never
        address?: never
        chainId?: TChainId
        functionName?: 'placeLeverageOrder'
      } = {} as any,
) {
  return useContractWrite<typeof orderManagerABI, 'placeLeverageOrder', TMode>({
    abi: orderManagerABI,
    address: orderManagerAddress[42161],
    functionName: 'placeLeverageOrder',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link orderManagerABI}__ and `functionName` set to `"placeSwapOrder"`.
 *
 * [__View Contract on Arbitrum One Arbiscan__](https://arbiscan.io/address/0x5b5d94B1574a8A910E6FC0a38949f5B256f22FF9)
 */
export function useOrderManagerPlaceSwapOrder<
  TMode extends WriteContractMode = undefined,
  TChainId extends number = keyof typeof orderManagerAddress,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        PrepareWriteContractResult<typeof orderManagerABI, 'placeSwapOrder'>['request']['abi'],
        'placeSwapOrder',
        TMode
      > & { address?: Address; chainId?: TChainId; functionName?: 'placeSwapOrder' }
    : UseContractWriteConfig<typeof orderManagerABI, 'placeSwapOrder', TMode> & {
        abi?: never
        address?: never
        chainId?: TChainId
        functionName?: 'placeSwapOrder'
      } = {} as any,
) {
  return useContractWrite<typeof orderManagerABI, 'placeSwapOrder', TMode>({
    abi: orderManagerABI,
    address: orderManagerAddress[42161],
    functionName: 'placeSwapOrder',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link orderManagerABI}__ and `functionName` set to `"renounceOwnership"`.
 *
 * [__View Contract on Arbitrum One Arbiscan__](https://arbiscan.io/address/0x5b5d94B1574a8A910E6FC0a38949f5B256f22FF9)
 */
export function useOrderManagerRenounceOwnership<
  TMode extends WriteContractMode = undefined,
  TChainId extends number = keyof typeof orderManagerAddress,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        PrepareWriteContractResult<typeof orderManagerABI, 'renounceOwnership'>['request']['abi'],
        'renounceOwnership',
        TMode
      > & { address?: Address; chainId?: TChainId; functionName?: 'renounceOwnership' }
    : UseContractWriteConfig<typeof orderManagerABI, 'renounceOwnership', TMode> & {
        abi?: never
        address?: never
        chainId?: TChainId
        functionName?: 'renounceOwnership'
      } = {} as any,
) {
  return useContractWrite<typeof orderManagerABI, 'renounceOwnership', TMode>({
    abi: orderManagerABI,
    address: orderManagerAddress[42161],
    functionName: 'renounceOwnership',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link orderManagerABI}__ and `functionName` set to `"setController"`.
 *
 * [__View Contract on Arbitrum One Arbiscan__](https://arbiscan.io/address/0x5b5d94B1574a8A910E6FC0a38949f5B256f22FF9)
 */
export function useOrderManagerSetController<
  TMode extends WriteContractMode = undefined,
  TChainId extends number = keyof typeof orderManagerAddress,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        PrepareWriteContractResult<typeof orderManagerABI, 'setController'>['request']['abi'],
        'setController',
        TMode
      > & { address?: Address; chainId?: TChainId; functionName?: 'setController' }
    : UseContractWriteConfig<typeof orderManagerABI, 'setController', TMode> & {
        abi?: never
        address?: never
        chainId?: TChainId
        functionName?: 'setController'
      } = {} as any,
) {
  return useContractWrite<typeof orderManagerABI, 'setController', TMode>({
    abi: orderManagerABI,
    address: orderManagerAddress[42161],
    functionName: 'setController',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link orderManagerABI}__ and `functionName` set to `"setEnablePublicExecution"`.
 *
 * [__View Contract on Arbitrum One Arbiscan__](https://arbiscan.io/address/0x5b5d94B1574a8A910E6FC0a38949f5B256f22FF9)
 */
export function useOrderManagerSetEnablePublicExecution<
  TMode extends WriteContractMode = undefined,
  TChainId extends number = keyof typeof orderManagerAddress,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        PrepareWriteContractResult<typeof orderManagerABI, 'setEnablePublicExecution'>['request']['abi'],
        'setEnablePublicExecution',
        TMode
      > & { address?: Address; chainId?: TChainId; functionName?: 'setEnablePublicExecution' }
    : UseContractWriteConfig<typeof orderManagerABI, 'setEnablePublicExecution', TMode> & {
        abi?: never
        address?: never
        chainId?: TChainId
        functionName?: 'setEnablePublicExecution'
      } = {} as any,
) {
  return useContractWrite<typeof orderManagerABI, 'setEnablePublicExecution', TMode>({
    abi: orderManagerABI,
    address: orderManagerAddress[42161],
    functionName: 'setEnablePublicExecution',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link orderManagerABI}__ and `functionName` set to `"setExecutionDelayTime"`.
 *
 * [__View Contract on Arbitrum One Arbiscan__](https://arbiscan.io/address/0x5b5d94B1574a8A910E6FC0a38949f5B256f22FF9)
 */
export function useOrderManagerSetExecutionDelayTime<
  TMode extends WriteContractMode = undefined,
  TChainId extends number = keyof typeof orderManagerAddress,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        PrepareWriteContractResult<typeof orderManagerABI, 'setExecutionDelayTime'>['request']['abi'],
        'setExecutionDelayTime',
        TMode
      > & { address?: Address; chainId?: TChainId; functionName?: 'setExecutionDelayTime' }
    : UseContractWriteConfig<typeof orderManagerABI, 'setExecutionDelayTime', TMode> & {
        abi?: never
        address?: never
        chainId?: TChainId
        functionName?: 'setExecutionDelayTime'
      } = {} as any,
) {
  return useContractWrite<typeof orderManagerABI, 'setExecutionDelayTime', TMode>({
    abi: orderManagerABI,
    address: orderManagerAddress[42161],
    functionName: 'setExecutionDelayTime',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link orderManagerABI}__ and `functionName` set to `"setExecutor"`.
 *
 * [__View Contract on Arbitrum One Arbiscan__](https://arbiscan.io/address/0x5b5d94B1574a8A910E6FC0a38949f5B256f22FF9)
 */
export function useOrderManagerSetExecutor<
  TMode extends WriteContractMode = undefined,
  TChainId extends number = keyof typeof orderManagerAddress,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        PrepareWriteContractResult<typeof orderManagerABI, 'setExecutor'>['request']['abi'],
        'setExecutor',
        TMode
      > & { address?: Address; chainId?: TChainId; functionName?: 'setExecutor' }
    : UseContractWriteConfig<typeof orderManagerABI, 'setExecutor', TMode> & {
        abi?: never
        address?: never
        chainId?: TChainId
        functionName?: 'setExecutor'
      } = {} as any,
) {
  return useContractWrite<typeof orderManagerABI, 'setExecutor', TMode>({
    abi: orderManagerABI,
    address: orderManagerAddress[42161],
    functionName: 'setExecutor',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link orderManagerABI}__ and `functionName` set to `"setMinExecutionFee"`.
 *
 * [__View Contract on Arbitrum One Arbiscan__](https://arbiscan.io/address/0x5b5d94B1574a8A910E6FC0a38949f5B256f22FF9)
 */
export function useOrderManagerSetMinExecutionFee<
  TMode extends WriteContractMode = undefined,
  TChainId extends number = keyof typeof orderManagerAddress,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        PrepareWriteContractResult<typeof orderManagerABI, 'setMinExecutionFee'>['request']['abi'],
        'setMinExecutionFee',
        TMode
      > & { address?: Address; chainId?: TChainId; functionName?: 'setMinExecutionFee' }
    : UseContractWriteConfig<typeof orderManagerABI, 'setMinExecutionFee', TMode> & {
        abi?: never
        address?: never
        chainId?: TChainId
        functionName?: 'setMinExecutionFee'
      } = {} as any,
) {
  return useContractWrite<typeof orderManagerABI, 'setMinExecutionFee', TMode>({
    abi: orderManagerABI,
    address: orderManagerAddress[42161],
    functionName: 'setMinExecutionFee',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link orderManagerABI}__ and `functionName` set to `"setOracle"`.
 *
 * [__View Contract on Arbitrum One Arbiscan__](https://arbiscan.io/address/0x5b5d94B1574a8A910E6FC0a38949f5B256f22FF9)
 */
export function useOrderManagerSetOracle<
  TMode extends WriteContractMode = undefined,
  TChainId extends number = keyof typeof orderManagerAddress,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        PrepareWriteContractResult<typeof orderManagerABI, 'setOracle'>['request']['abi'],
        'setOracle',
        TMode
      > & { address?: Address; chainId?: TChainId; functionName?: 'setOracle' }
    : UseContractWriteConfig<typeof orderManagerABI, 'setOracle', TMode> & {
        abi?: never
        address?: never
        chainId?: TChainId
        functionName?: 'setOracle'
      } = {} as any,
) {
  return useContractWrite<typeof orderManagerABI, 'setOracle', TMode>({
    abi: orderManagerABI,
    address: orderManagerAddress[42161],
    functionName: 'setOracle',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link orderManagerABI}__ and `functionName` set to `"setOrderHook"`.
 *
 * [__View Contract on Arbitrum One Arbiscan__](https://arbiscan.io/address/0x5b5d94B1574a8A910E6FC0a38949f5B256f22FF9)
 */
export function useOrderManagerSetOrderHook<
  TMode extends WriteContractMode = undefined,
  TChainId extends number = keyof typeof orderManagerAddress,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        PrepareWriteContractResult<typeof orderManagerABI, 'setOrderHook'>['request']['abi'],
        'setOrderHook',
        TMode
      > & { address?: Address; chainId?: TChainId; functionName?: 'setOrderHook' }
    : UseContractWriteConfig<typeof orderManagerABI, 'setOrderHook', TMode> & {
        abi?: never
        address?: never
        chainId?: TChainId
        functionName?: 'setOrderHook'
      } = {} as any,
) {
  return useContractWrite<typeof orderManagerABI, 'setOrderHook', TMode>({
    abi: orderManagerABI,
    address: orderManagerAddress[42161],
    functionName: 'setOrderHook',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link orderManagerABI}__ and `functionName` set to `"swap"`.
 *
 * [__View Contract on Arbitrum One Arbiscan__](https://arbiscan.io/address/0x5b5d94B1574a8A910E6FC0a38949f5B256f22FF9)
 */
export function useOrderManagerSwap<
  TMode extends WriteContractMode = undefined,
  TChainId extends number = keyof typeof orderManagerAddress,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        PrepareWriteContractResult<typeof orderManagerABI, 'swap'>['request']['abi'],
        'swap',
        TMode
      > & { address?: Address; chainId?: TChainId; functionName?: 'swap' }
    : UseContractWriteConfig<typeof orderManagerABI, 'swap', TMode> & {
        abi?: never
        address?: never
        chainId?: TChainId
        functionName?: 'swap'
      } = {} as any,
) {
  return useContractWrite<typeof orderManagerABI, 'swap', TMode>({
    abi: orderManagerABI,
    address: orderManagerAddress[42161],
    functionName: 'swap',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link orderManagerABI}__ and `functionName` set to `"transferOwnership"`.
 *
 * [__View Contract on Arbitrum One Arbiscan__](https://arbiscan.io/address/0x5b5d94B1574a8A910E6FC0a38949f5B256f22FF9)
 */
export function useOrderManagerTransferOwnership<
  TMode extends WriteContractMode = undefined,
  TChainId extends number = keyof typeof orderManagerAddress,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        PrepareWriteContractResult<typeof orderManagerABI, 'transferOwnership'>['request']['abi'],
        'transferOwnership',
        TMode
      > & { address?: Address; chainId?: TChainId; functionName?: 'transferOwnership' }
    : UseContractWriteConfig<typeof orderManagerABI, 'transferOwnership', TMode> & {
        abi?: never
        address?: never
        chainId?: TChainId
        functionName?: 'transferOwnership'
      } = {} as any,
) {
  return useContractWrite<typeof orderManagerABI, 'transferOwnership', TMode>({
    abi: orderManagerABI,
    address: orderManagerAddress[42161],
    functionName: 'transferOwnership',
    ...config,
  } as any)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link orderManagerABI}__.
 *
 * [__View Contract on Arbitrum One Arbiscan__](https://arbiscan.io/address/0x5b5d94B1574a8A910E6FC0a38949f5B256f22FF9)
 */
export function usePrepareOrderManagerWrite<TFunctionName extends string>(
  config: Omit<UsePrepareContractWriteConfig<typeof orderManagerABI, TFunctionName>, 'abi' | 'address'> & {
    chainId?: keyof typeof orderManagerAddress
  } = {} as any,
) {
  return usePrepareContractWrite({
    abi: orderManagerABI,
    address: orderManagerAddress[42161],
    ...config,
  } as UsePrepareContractWriteConfig<typeof orderManagerABI, TFunctionName>)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link orderManagerABI}__ and `functionName` set to `"cancelLeverageOrder"`.
 *
 * [__View Contract on Arbitrum One Arbiscan__](https://arbiscan.io/address/0x5b5d94B1574a8A910E6FC0a38949f5B256f22FF9)
 */
export function usePrepareOrderManagerCancelLeverageOrder(
  config: Omit<
    UsePrepareContractWriteConfig<typeof orderManagerABI, 'cancelLeverageOrder'>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof orderManagerAddress } = {} as any,
) {
  return usePrepareContractWrite({
    abi: orderManagerABI,
    address: orderManagerAddress[42161],
    functionName: 'cancelLeverageOrder',
    ...config,
  } as UsePrepareContractWriteConfig<typeof orderManagerABI, 'cancelLeverageOrder'>)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link orderManagerABI}__ and `functionName` set to `"cancelSwapOrder"`.
 *
 * [__View Contract on Arbitrum One Arbiscan__](https://arbiscan.io/address/0x5b5d94B1574a8A910E6FC0a38949f5B256f22FF9)
 */
export function usePrepareOrderManagerCancelSwapOrder(
  config: Omit<
    UsePrepareContractWriteConfig<typeof orderManagerABI, 'cancelSwapOrder'>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof orderManagerAddress } = {} as any,
) {
  return usePrepareContractWrite({
    abi: orderManagerABI,
    address: orderManagerAddress[42161],
    functionName: 'cancelSwapOrder',
    ...config,
  } as UsePrepareContractWriteConfig<typeof orderManagerABI, 'cancelSwapOrder'>)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link orderManagerABI}__ and `functionName` set to `"executeLeverageOrder"`.
 *
 * [__View Contract on Arbitrum One Arbiscan__](https://arbiscan.io/address/0x5b5d94B1574a8A910E6FC0a38949f5B256f22FF9)
 */
export function usePrepareOrderManagerExecuteLeverageOrder(
  config: Omit<
    UsePrepareContractWriteConfig<typeof orderManagerABI, 'executeLeverageOrder'>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof orderManagerAddress } = {} as any,
) {
  return usePrepareContractWrite({
    abi: orderManagerABI,
    address: orderManagerAddress[42161],
    functionName: 'executeLeverageOrder',
    ...config,
  } as UsePrepareContractWriteConfig<typeof orderManagerABI, 'executeLeverageOrder'>)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link orderManagerABI}__ and `functionName` set to `"executeSwapOrder"`.
 *
 * [__View Contract on Arbitrum One Arbiscan__](https://arbiscan.io/address/0x5b5d94B1574a8A910E6FC0a38949f5B256f22FF9)
 */
export function usePrepareOrderManagerExecuteSwapOrder(
  config: Omit<
    UsePrepareContractWriteConfig<typeof orderManagerABI, 'executeSwapOrder'>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof orderManagerAddress } = {} as any,
) {
  return usePrepareContractWrite({
    abi: orderManagerABI,
    address: orderManagerAddress[42161],
    functionName: 'executeSwapOrder',
    ...config,
  } as UsePrepareContractWriteConfig<typeof orderManagerABI, 'executeSwapOrder'>)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link orderManagerABI}__ and `functionName` set to `"initialize"`.
 *
 * [__View Contract on Arbitrum One Arbiscan__](https://arbiscan.io/address/0x5b5d94B1574a8A910E6FC0a38949f5B256f22FF9)
 */
export function usePrepareOrderManagerInitialize(
  config: Omit<
    UsePrepareContractWriteConfig<typeof orderManagerABI, 'initialize'>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof orderManagerAddress } = {} as any,
) {
  return usePrepareContractWrite({
    abi: orderManagerABI,
    address: orderManagerAddress[42161],
    functionName: 'initialize',
    ...config,
  } as UsePrepareContractWriteConfig<typeof orderManagerABI, 'initialize'>)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link orderManagerABI}__ and `functionName` set to `"placeLeverageOrder"`.
 *
 * [__View Contract on Arbitrum One Arbiscan__](https://arbiscan.io/address/0x5b5d94B1574a8A910E6FC0a38949f5B256f22FF9)
 */
export function usePrepareOrderManagerPlaceLeverageOrder(
  config: Omit<
    UsePrepareContractWriteConfig<typeof orderManagerABI, 'placeLeverageOrder'>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof orderManagerAddress } = {} as any,
) {
  return usePrepareContractWrite({
    abi: orderManagerABI,
    address: orderManagerAddress[42161],
    functionName: 'placeLeverageOrder',
    ...config,
  } as UsePrepareContractWriteConfig<typeof orderManagerABI, 'placeLeverageOrder'>)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link orderManagerABI}__ and `functionName` set to `"placeSwapOrder"`.
 *
 * [__View Contract on Arbitrum One Arbiscan__](https://arbiscan.io/address/0x5b5d94B1574a8A910E6FC0a38949f5B256f22FF9)
 */
export function usePrepareOrderManagerPlaceSwapOrder(
  config: Omit<
    UsePrepareContractWriteConfig<typeof orderManagerABI, 'placeSwapOrder'>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof orderManagerAddress } = {} as any,
) {
  return usePrepareContractWrite({
    abi: orderManagerABI,
    address: orderManagerAddress[42161],
    functionName: 'placeSwapOrder',
    ...config,
  } as UsePrepareContractWriteConfig<typeof orderManagerABI, 'placeSwapOrder'>)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link orderManagerABI}__ and `functionName` set to `"renounceOwnership"`.
 *
 * [__View Contract on Arbitrum One Arbiscan__](https://arbiscan.io/address/0x5b5d94B1574a8A910E6FC0a38949f5B256f22FF9)
 */
export function usePrepareOrderManagerRenounceOwnership(
  config: Omit<
    UsePrepareContractWriteConfig<typeof orderManagerABI, 'renounceOwnership'>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof orderManagerAddress } = {} as any,
) {
  return usePrepareContractWrite({
    abi: orderManagerABI,
    address: orderManagerAddress[42161],
    functionName: 'renounceOwnership',
    ...config,
  } as UsePrepareContractWriteConfig<typeof orderManagerABI, 'renounceOwnership'>)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link orderManagerABI}__ and `functionName` set to `"setController"`.
 *
 * [__View Contract on Arbitrum One Arbiscan__](https://arbiscan.io/address/0x5b5d94B1574a8A910E6FC0a38949f5B256f22FF9)
 */
export function usePrepareOrderManagerSetController(
  config: Omit<
    UsePrepareContractWriteConfig<typeof orderManagerABI, 'setController'>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof orderManagerAddress } = {} as any,
) {
  return usePrepareContractWrite({
    abi: orderManagerABI,
    address: orderManagerAddress[42161],
    functionName: 'setController',
    ...config,
  } as UsePrepareContractWriteConfig<typeof orderManagerABI, 'setController'>)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link orderManagerABI}__ and `functionName` set to `"setEnablePublicExecution"`.
 *
 * [__View Contract on Arbitrum One Arbiscan__](https://arbiscan.io/address/0x5b5d94B1574a8A910E6FC0a38949f5B256f22FF9)
 */
export function usePrepareOrderManagerSetEnablePublicExecution(
  config: Omit<
    UsePrepareContractWriteConfig<typeof orderManagerABI, 'setEnablePublicExecution'>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof orderManagerAddress } = {} as any,
) {
  return usePrepareContractWrite({
    abi: orderManagerABI,
    address: orderManagerAddress[42161],
    functionName: 'setEnablePublicExecution',
    ...config,
  } as UsePrepareContractWriteConfig<typeof orderManagerABI, 'setEnablePublicExecution'>)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link orderManagerABI}__ and `functionName` set to `"setExecutionDelayTime"`.
 *
 * [__View Contract on Arbitrum One Arbiscan__](https://arbiscan.io/address/0x5b5d94B1574a8A910E6FC0a38949f5B256f22FF9)
 */
export function usePrepareOrderManagerSetExecutionDelayTime(
  config: Omit<
    UsePrepareContractWriteConfig<typeof orderManagerABI, 'setExecutionDelayTime'>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof orderManagerAddress } = {} as any,
) {
  return usePrepareContractWrite({
    abi: orderManagerABI,
    address: orderManagerAddress[42161],
    functionName: 'setExecutionDelayTime',
    ...config,
  } as UsePrepareContractWriteConfig<typeof orderManagerABI, 'setExecutionDelayTime'>)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link orderManagerABI}__ and `functionName` set to `"setExecutor"`.
 *
 * [__View Contract on Arbitrum One Arbiscan__](https://arbiscan.io/address/0x5b5d94B1574a8A910E6FC0a38949f5B256f22FF9)
 */
export function usePrepareOrderManagerSetExecutor(
  config: Omit<
    UsePrepareContractWriteConfig<typeof orderManagerABI, 'setExecutor'>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof orderManagerAddress } = {} as any,
) {
  return usePrepareContractWrite({
    abi: orderManagerABI,
    address: orderManagerAddress[42161],
    functionName: 'setExecutor',
    ...config,
  } as UsePrepareContractWriteConfig<typeof orderManagerABI, 'setExecutor'>)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link orderManagerABI}__ and `functionName` set to `"setMinExecutionFee"`.
 *
 * [__View Contract on Arbitrum One Arbiscan__](https://arbiscan.io/address/0x5b5d94B1574a8A910E6FC0a38949f5B256f22FF9)
 */
export function usePrepareOrderManagerSetMinExecutionFee(
  config: Omit<
    UsePrepareContractWriteConfig<typeof orderManagerABI, 'setMinExecutionFee'>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof orderManagerAddress } = {} as any,
) {
  return usePrepareContractWrite({
    abi: orderManagerABI,
    address: orderManagerAddress[42161],
    functionName: 'setMinExecutionFee',
    ...config,
  } as UsePrepareContractWriteConfig<typeof orderManagerABI, 'setMinExecutionFee'>)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link orderManagerABI}__ and `functionName` set to `"setOracle"`.
 *
 * [__View Contract on Arbitrum One Arbiscan__](https://arbiscan.io/address/0x5b5d94B1574a8A910E6FC0a38949f5B256f22FF9)
 */
export function usePrepareOrderManagerSetOracle(
  config: Omit<
    UsePrepareContractWriteConfig<typeof orderManagerABI, 'setOracle'>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof orderManagerAddress } = {} as any,
) {
  return usePrepareContractWrite({
    abi: orderManagerABI,
    address: orderManagerAddress[42161],
    functionName: 'setOracle',
    ...config,
  } as UsePrepareContractWriteConfig<typeof orderManagerABI, 'setOracle'>)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link orderManagerABI}__ and `functionName` set to `"setOrderHook"`.
 *
 * [__View Contract on Arbitrum One Arbiscan__](https://arbiscan.io/address/0x5b5d94B1574a8A910E6FC0a38949f5B256f22FF9)
 */
export function usePrepareOrderManagerSetOrderHook(
  config: Omit<
    UsePrepareContractWriteConfig<typeof orderManagerABI, 'setOrderHook'>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof orderManagerAddress } = {} as any,
) {
  return usePrepareContractWrite({
    abi: orderManagerABI,
    address: orderManagerAddress[42161],
    functionName: 'setOrderHook',
    ...config,
  } as UsePrepareContractWriteConfig<typeof orderManagerABI, 'setOrderHook'>)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link orderManagerABI}__ and `functionName` set to `"swap"`.
 *
 * [__View Contract on Arbitrum One Arbiscan__](https://arbiscan.io/address/0x5b5d94B1574a8A910E6FC0a38949f5B256f22FF9)
 */
export function usePrepareOrderManagerSwap(
  config: Omit<UsePrepareContractWriteConfig<typeof orderManagerABI, 'swap'>, 'abi' | 'address' | 'functionName'> & {
    chainId?: keyof typeof orderManagerAddress
  } = {} as any,
) {
  return usePrepareContractWrite({
    abi: orderManagerABI,
    address: orderManagerAddress[42161],
    functionName: 'swap',
    ...config,
  } as UsePrepareContractWriteConfig<typeof orderManagerABI, 'swap'>)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link orderManagerABI}__ and `functionName` set to `"transferOwnership"`.
 *
 * [__View Contract on Arbitrum One Arbiscan__](https://arbiscan.io/address/0x5b5d94B1574a8A910E6FC0a38949f5B256f22FF9)
 */
export function usePrepareOrderManagerTransferOwnership(
  config: Omit<
    UsePrepareContractWriteConfig<typeof orderManagerABI, 'transferOwnership'>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof orderManagerAddress } = {} as any,
) {
  return usePrepareContractWrite({
    abi: orderManagerABI,
    address: orderManagerAddress[42161],
    functionName: 'transferOwnership',
    ...config,
  } as UsePrepareContractWriteConfig<typeof orderManagerABI, 'transferOwnership'>)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link orderManagerABI}__.
 *
 * [__View Contract on Arbitrum One Arbiscan__](https://arbiscan.io/address/0x5b5d94B1574a8A910E6FC0a38949f5B256f22FF9)
 */
export function useOrderManagerEvent<TEventName extends string>(
  config: Omit<UseContractEventConfig<typeof orderManagerABI, TEventName>, 'abi' | 'address'> & {
    chainId?: keyof typeof orderManagerAddress
  } = {} as any,
) {
  return useContractEvent({
    abi: orderManagerABI,
    address: orderManagerAddress[42161],
    ...config,
  } as UseContractEventConfig<typeof orderManagerABI, TEventName>)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link orderManagerABI}__ and `eventName` set to `"ControllerSet"`.
 *
 * [__View Contract on Arbitrum One Arbiscan__](https://arbiscan.io/address/0x5b5d94B1574a8A910E6FC0a38949f5B256f22FF9)
 */
export function useOrderManagerControllerSetEvent(
  config: Omit<UseContractEventConfig<typeof orderManagerABI, 'ControllerSet'>, 'abi' | 'address' | 'eventName'> & {
    chainId?: keyof typeof orderManagerAddress
  } = {} as any,
) {
  return useContractEvent({
    abi: orderManagerABI,
    address: orderManagerAddress[42161],
    eventName: 'ControllerSet',
    ...config,
  } as UseContractEventConfig<typeof orderManagerABI, 'ControllerSet'>)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link orderManagerABI}__ and `eventName` set to `"ExecutorSet"`.
 *
 * [__View Contract on Arbitrum One Arbiscan__](https://arbiscan.io/address/0x5b5d94B1574a8A910E6FC0a38949f5B256f22FF9)
 */
export function useOrderManagerExecutorSetEvent(
  config: Omit<UseContractEventConfig<typeof orderManagerABI, 'ExecutorSet'>, 'abi' | 'address' | 'eventName'> & {
    chainId?: keyof typeof orderManagerAddress
  } = {} as any,
) {
  return useContractEvent({
    abi: orderManagerABI,
    address: orderManagerAddress[42161],
    eventName: 'ExecutorSet',
    ...config,
  } as UseContractEventConfig<typeof orderManagerABI, 'ExecutorSet'>)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link orderManagerABI}__ and `eventName` set to `"Initialized"`.
 *
 * [__View Contract on Arbitrum One Arbiscan__](https://arbiscan.io/address/0x5b5d94B1574a8A910E6FC0a38949f5B256f22FF9)
 */
export function useOrderManagerInitializedEvent(
  config: Omit<UseContractEventConfig<typeof orderManagerABI, 'Initialized'>, 'abi' | 'address' | 'eventName'> & {
    chainId?: keyof typeof orderManagerAddress
  } = {} as any,
) {
  return useContractEvent({
    abi: orderManagerABI,
    address: orderManagerAddress[42161],
    eventName: 'Initialized',
    ...config,
  } as UseContractEventConfig<typeof orderManagerABI, 'Initialized'>)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link orderManagerABI}__ and `eventName` set to `"LeverageOrderCancelled"`.
 *
 * [__View Contract on Arbitrum One Arbiscan__](https://arbiscan.io/address/0x5b5d94B1574a8A910E6FC0a38949f5B256f22FF9)
 */
export function useOrderManagerLeverageOrderCancelledEvent(
  config: Omit<
    UseContractEventConfig<typeof orderManagerABI, 'LeverageOrderCancelled'>,
    'abi' | 'address' | 'eventName'
  > & { chainId?: keyof typeof orderManagerAddress } = {} as any,
) {
  return useContractEvent({
    abi: orderManagerABI,
    address: orderManagerAddress[42161],
    eventName: 'LeverageOrderCancelled',
    ...config,
  } as UseContractEventConfig<typeof orderManagerABI, 'LeverageOrderCancelled'>)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link orderManagerABI}__ and `eventName` set to `"LeverageOrderExecuted"`.
 *
 * [__View Contract on Arbitrum One Arbiscan__](https://arbiscan.io/address/0x5b5d94B1574a8A910E6FC0a38949f5B256f22FF9)
 */
export function useOrderManagerLeverageOrderExecutedEvent(
  config: Omit<
    UseContractEventConfig<typeof orderManagerABI, 'LeverageOrderExecuted'>,
    'abi' | 'address' | 'eventName'
  > & { chainId?: keyof typeof orderManagerAddress } = {} as any,
) {
  return useContractEvent({
    abi: orderManagerABI,
    address: orderManagerAddress[42161],
    eventName: 'LeverageOrderExecuted',
    ...config,
  } as UseContractEventConfig<typeof orderManagerABI, 'LeverageOrderExecuted'>)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link orderManagerABI}__ and `eventName` set to `"LeverageOrderExpired"`.
 *
 * [__View Contract on Arbitrum One Arbiscan__](https://arbiscan.io/address/0x5b5d94B1574a8A910E6FC0a38949f5B256f22FF9)
 */
export function useOrderManagerLeverageOrderExpiredEvent(
  config: Omit<
    UseContractEventConfig<typeof orderManagerABI, 'LeverageOrderExpired'>,
    'abi' | 'address' | 'eventName'
  > & { chainId?: keyof typeof orderManagerAddress } = {} as any,
) {
  return useContractEvent({
    abi: orderManagerABI,
    address: orderManagerAddress[42161],
    eventName: 'LeverageOrderExpired',
    ...config,
  } as UseContractEventConfig<typeof orderManagerABI, 'LeverageOrderExpired'>)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link orderManagerABI}__ and `eventName` set to `"LeverageOrderPlaced"`.
 *
 * [__View Contract on Arbitrum One Arbiscan__](https://arbiscan.io/address/0x5b5d94B1574a8A910E6FC0a38949f5B256f22FF9)
 */
export function useOrderManagerLeverageOrderPlacedEvent(
  config: Omit<
    UseContractEventConfig<typeof orderManagerABI, 'LeverageOrderPlaced'>,
    'abi' | 'address' | 'eventName'
  > & { chainId?: keyof typeof orderManagerAddress } = {} as any,
) {
  return useContractEvent({
    abi: orderManagerABI,
    address: orderManagerAddress[42161],
    eventName: 'LeverageOrderPlaced',
    ...config,
  } as UseContractEventConfig<typeof orderManagerABI, 'LeverageOrderPlaced'>)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link orderManagerABI}__ and `eventName` set to `"MinLeverageExecutionFeeSet"`.
 *
 * [__View Contract on Arbitrum One Arbiscan__](https://arbiscan.io/address/0x5b5d94B1574a8A910E6FC0a38949f5B256f22FF9)
 */
export function useOrderManagerMinLeverageExecutionFeeSetEvent(
  config: Omit<
    UseContractEventConfig<typeof orderManagerABI, 'MinLeverageExecutionFeeSet'>,
    'abi' | 'address' | 'eventName'
  > & { chainId?: keyof typeof orderManagerAddress } = {} as any,
) {
  return useContractEvent({
    abi: orderManagerABI,
    address: orderManagerAddress[42161],
    eventName: 'MinLeverageExecutionFeeSet',
    ...config,
  } as UseContractEventConfig<typeof orderManagerABI, 'MinLeverageExecutionFeeSet'>)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link orderManagerABI}__ and `eventName` set to `"MinSwapExecutionFeeSet"`.
 *
 * [__View Contract on Arbitrum One Arbiscan__](https://arbiscan.io/address/0x5b5d94B1574a8A910E6FC0a38949f5B256f22FF9)
 */
export function useOrderManagerMinSwapExecutionFeeSetEvent(
  config: Omit<
    UseContractEventConfig<typeof orderManagerABI, 'MinSwapExecutionFeeSet'>,
    'abi' | 'address' | 'eventName'
  > & { chainId?: keyof typeof orderManagerAddress } = {} as any,
) {
  return useContractEvent({
    abi: orderManagerABI,
    address: orderManagerAddress[42161],
    eventName: 'MinSwapExecutionFeeSet',
    ...config,
  } as UseContractEventConfig<typeof orderManagerABI, 'MinSwapExecutionFeeSet'>)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link orderManagerABI}__ and `eventName` set to `"OracleChanged"`.
 *
 * [__View Contract on Arbitrum One Arbiscan__](https://arbiscan.io/address/0x5b5d94B1574a8A910E6FC0a38949f5B256f22FF9)
 */
export function useOrderManagerOracleChangedEvent(
  config: Omit<UseContractEventConfig<typeof orderManagerABI, 'OracleChanged'>, 'abi' | 'address' | 'eventName'> & {
    chainId?: keyof typeof orderManagerAddress
  } = {} as any,
) {
  return useContractEvent({
    abi: orderManagerABI,
    address: orderManagerAddress[42161],
    eventName: 'OracleChanged',
    ...config,
  } as UseContractEventConfig<typeof orderManagerABI, 'OracleChanged'>)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link orderManagerABI}__ and `eventName` set to `"OrderHookSet"`.
 *
 * [__View Contract on Arbitrum One Arbiscan__](https://arbiscan.io/address/0x5b5d94B1574a8A910E6FC0a38949f5B256f22FF9)
 */
export function useOrderManagerOrderHookSetEvent(
  config: Omit<UseContractEventConfig<typeof orderManagerABI, 'OrderHookSet'>, 'abi' | 'address' | 'eventName'> & {
    chainId?: keyof typeof orderManagerAddress
  } = {} as any,
) {
  return useContractEvent({
    abi: orderManagerABI,
    address: orderManagerAddress[42161],
    eventName: 'OrderHookSet',
    ...config,
  } as UseContractEventConfig<typeof orderManagerABI, 'OrderHookSet'>)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link orderManagerABI}__ and `eventName` set to `"OwnershipTransferred"`.
 *
 * [__View Contract on Arbitrum One Arbiscan__](https://arbiscan.io/address/0x5b5d94B1574a8A910E6FC0a38949f5B256f22FF9)
 */
export function useOrderManagerOwnershipTransferredEvent(
  config: Omit<
    UseContractEventConfig<typeof orderManagerABI, 'OwnershipTransferred'>,
    'abi' | 'address' | 'eventName'
  > & { chainId?: keyof typeof orderManagerAddress } = {} as any,
) {
  return useContractEvent({
    abi: orderManagerABI,
    address: orderManagerAddress[42161],
    eventName: 'OwnershipTransferred',
    ...config,
  } as UseContractEventConfig<typeof orderManagerABI, 'OwnershipTransferred'>)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link orderManagerABI}__ and `eventName` set to `"PoolSet"`.
 *
 * [__View Contract on Arbitrum One Arbiscan__](https://arbiscan.io/address/0x5b5d94B1574a8A910E6FC0a38949f5B256f22FF9)
 */
export function useOrderManagerPoolSetEvent(
  config: Omit<UseContractEventConfig<typeof orderManagerABI, 'PoolSet'>, 'abi' | 'address' | 'eventName'> & {
    chainId?: keyof typeof orderManagerAddress
  } = {} as any,
) {
  return useContractEvent({
    abi: orderManagerABI,
    address: orderManagerAddress[42161],
    eventName: 'PoolSet',
    ...config,
  } as UseContractEventConfig<typeof orderManagerABI, 'PoolSet'>)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link orderManagerABI}__ and `eventName` set to `"SetEnablePublicExecution"`.
 *
 * [__View Contract on Arbitrum One Arbiscan__](https://arbiscan.io/address/0x5b5d94B1574a8A910E6FC0a38949f5B256f22FF9)
 */
export function useOrderManagerSetEnablePublicExecutionEvent(
  config: Omit<
    UseContractEventConfig<typeof orderManagerABI, 'SetEnablePublicExecution'>,
    'abi' | 'address' | 'eventName'
  > & { chainId?: keyof typeof orderManagerAddress } = {} as any,
) {
  return useContractEvent({
    abi: orderManagerABI,
    address: orderManagerAddress[42161],
    eventName: 'SetEnablePublicExecution',
    ...config,
  } as UseContractEventConfig<typeof orderManagerABI, 'SetEnablePublicExecution'>)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link orderManagerABI}__ and `eventName` set to `"SetExecutionDelayTime"`.
 *
 * [__View Contract on Arbitrum One Arbiscan__](https://arbiscan.io/address/0x5b5d94B1574a8A910E6FC0a38949f5B256f22FF9)
 */
export function useOrderManagerSetExecutionDelayTimeEvent(
  config: Omit<
    UseContractEventConfig<typeof orderManagerABI, 'SetExecutionDelayTime'>,
    'abi' | 'address' | 'eventName'
  > & { chainId?: keyof typeof orderManagerAddress } = {} as any,
) {
  return useContractEvent({
    abi: orderManagerABI,
    address: orderManagerAddress[42161],
    eventName: 'SetExecutionDelayTime',
    ...config,
  } as UseContractEventConfig<typeof orderManagerABI, 'SetExecutionDelayTime'>)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link orderManagerABI}__ and `eventName` set to `"Swap"`.
 *
 * [__View Contract on Arbitrum One Arbiscan__](https://arbiscan.io/address/0x5b5d94B1574a8A910E6FC0a38949f5B256f22FF9)
 */
export function useOrderManagerSwapEvent(
  config: Omit<UseContractEventConfig<typeof orderManagerABI, 'Swap'>, 'abi' | 'address' | 'eventName'> & {
    chainId?: keyof typeof orderManagerAddress
  } = {} as any,
) {
  return useContractEvent({
    abi: orderManagerABI,
    address: orderManagerAddress[42161],
    eventName: 'Swap',
    ...config,
  } as UseContractEventConfig<typeof orderManagerABI, 'Swap'>)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link orderManagerABI}__ and `eventName` set to `"SwapOrderCancelled"`.
 *
 * [__View Contract on Arbitrum One Arbiscan__](https://arbiscan.io/address/0x5b5d94B1574a8A910E6FC0a38949f5B256f22FF9)
 */
export function useOrderManagerSwapOrderCancelledEvent(
  config: Omit<
    UseContractEventConfig<typeof orderManagerABI, 'SwapOrderCancelled'>,
    'abi' | 'address' | 'eventName'
  > & { chainId?: keyof typeof orderManagerAddress } = {} as any,
) {
  return useContractEvent({
    abi: orderManagerABI,
    address: orderManagerAddress[42161],
    eventName: 'SwapOrderCancelled',
    ...config,
  } as UseContractEventConfig<typeof orderManagerABI, 'SwapOrderCancelled'>)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link orderManagerABI}__ and `eventName` set to `"SwapOrderExecuted"`.
 *
 * [__View Contract on Arbitrum One Arbiscan__](https://arbiscan.io/address/0x5b5d94B1574a8A910E6FC0a38949f5B256f22FF9)
 */
export function useOrderManagerSwapOrderExecutedEvent(
  config: Omit<UseContractEventConfig<typeof orderManagerABI, 'SwapOrderExecuted'>, 'abi' | 'address' | 'eventName'> & {
    chainId?: keyof typeof orderManagerAddress
  } = {} as any,
) {
  return useContractEvent({
    abi: orderManagerABI,
    address: orderManagerAddress[42161],
    eventName: 'SwapOrderExecuted',
    ...config,
  } as UseContractEventConfig<typeof orderManagerABI, 'SwapOrderExecuted'>)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link orderManagerABI}__ and `eventName` set to `"SwapOrderPlaced"`.
 *
 * [__View Contract on Arbitrum One Arbiscan__](https://arbiscan.io/address/0x5b5d94B1574a8A910E6FC0a38949f5B256f22FF9)
 */
export function useOrderManagerSwapOrderPlacedEvent(
  config: Omit<UseContractEventConfig<typeof orderManagerABI, 'SwapOrderPlaced'>, 'abi' | 'address' | 'eventName'> & {
    chainId?: keyof typeof orderManagerAddress
  } = {} as any,
) {
  return useContractEvent({
    abi: orderManagerABI,
    address: orderManagerAddress[42161],
    eventName: 'SwapOrderPlaced',
    ...config,
  } as UseContractEventConfig<typeof orderManagerABI, 'SwapOrderPlaced'>)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link transparentUpgradeableProxyABI}__.
 *
 * [__View Contract on Arbitrum One Arbiscan__](https://arbiscan.io/address/0x2215298606C9D0274527b13519Ec50c3A7f1c1eF)
 */
export function useTransparentUpgradeableProxyEvent<TEventName extends string>(
  config: Omit<UseContractEventConfig<typeof transparentUpgradeableProxyABI, TEventName>, 'abi' | 'address'> & {
    chainId?: keyof typeof transparentUpgradeableProxyAddress
  } = {} as any,
) {
  return useContractEvent({
    abi: transparentUpgradeableProxyABI,
    address: transparentUpgradeableProxyAddress[42161],
    ...config,
  } as UseContractEventConfig<typeof transparentUpgradeableProxyABI, TEventName>)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link transparentUpgradeableProxyABI}__ and `eventName` set to `"AdminChanged"`.
 *
 * [__View Contract on Arbitrum One Arbiscan__](https://arbiscan.io/address/0x2215298606C9D0274527b13519Ec50c3A7f1c1eF)
 */
export function useTransparentUpgradeableProxyAdminChangedEvent(
  config: Omit<
    UseContractEventConfig<typeof transparentUpgradeableProxyABI, 'AdminChanged'>,
    'abi' | 'address' | 'eventName'
  > & { chainId?: keyof typeof transparentUpgradeableProxyAddress } = {} as any,
) {
  return useContractEvent({
    abi: transparentUpgradeableProxyABI,
    address: transparentUpgradeableProxyAddress[42161],
    eventName: 'AdminChanged',
    ...config,
  } as UseContractEventConfig<typeof transparentUpgradeableProxyABI, 'AdminChanged'>)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link transparentUpgradeableProxyABI}__ and `eventName` set to `"BeaconUpgraded"`.
 *
 * [__View Contract on Arbitrum One Arbiscan__](https://arbiscan.io/address/0x2215298606C9D0274527b13519Ec50c3A7f1c1eF)
 */
export function useTransparentUpgradeableProxyBeaconUpgradedEvent(
  config: Omit<
    UseContractEventConfig<typeof transparentUpgradeableProxyABI, 'BeaconUpgraded'>,
    'abi' | 'address' | 'eventName'
  > & { chainId?: keyof typeof transparentUpgradeableProxyAddress } = {} as any,
) {
  return useContractEvent({
    abi: transparentUpgradeableProxyABI,
    address: transparentUpgradeableProxyAddress[42161],
    eventName: 'BeaconUpgraded',
    ...config,
  } as UseContractEventConfig<typeof transparentUpgradeableProxyABI, 'BeaconUpgraded'>)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link transparentUpgradeableProxyABI}__ and `eventName` set to `"Upgraded"`.
 *
 * [__View Contract on Arbitrum One Arbiscan__](https://arbiscan.io/address/0x2215298606C9D0274527b13519Ec50c3A7f1c1eF)
 */
export function useTransparentUpgradeableProxyUpgradedEvent(
  config: Omit<
    UseContractEventConfig<typeof transparentUpgradeableProxyABI, 'Upgraded'>,
    'abi' | 'address' | 'eventName'
  > & { chainId?: keyof typeof transparentUpgradeableProxyAddress } = {} as any,
) {
  return useContractEvent({
    abi: transparentUpgradeableProxyABI,
    address: transparentUpgradeableProxyAddress[42161],
    eventName: 'Upgraded',
    ...config,
  } as UseContractEventConfig<typeof transparentUpgradeableProxyABI, 'Upgraded'>)
}
